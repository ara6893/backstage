$schema: https://backstage.io/schema/config-v1
title: Application Configuration Schema
type: object
$defs:
  check:
    type: object
    required:
      - type
      - name
      - description
      - factIds
      - rule
    properties:
      type:
        type: string
      name:
        type: string
      description:
        type: string
      factIds:
        type: array
        items:
          type: string
      rule:
        $ref: "#/$defs/rule"
  conditionProperties:
    type: object
    required:
      - fact
      - operator
      - value
    properties:
      fact:
        type: string
      operator:
        type: string
      value:
        oneOf:
          - type: object
            required:
              - fact
            properties:
              fact:
                type: string
          - {}
      path:
        type: string
      name:
        type: string
      priority:
        type: number
      params:
        type: object
        additionalProperties: true
  conditionReference:
    type: object
    required:
      - condition
    properties:
      condition:
        type: string
      name:
        type: string
      priority:
        type: number
  nestedCondition:
    oneOf:
      - $ref: "#/$defs/conditionProperties"
      - $ref: "#/$defs/topLevelCondition"
  rule:
    type: string
    required:
      - conditions
    properties:
      conditions:
        $ref: "#/$defs/topLevelCondition"
      name:
        type: string
      priority:
        type: number
      successMetadata:
        type: object
        additionalProperties: true
      failureMetadata:
        type: object
        additionalProperties: true
  topLevelCondition:
    oneOf:
      - type: object
        required:
          - all
        properties:
          all:
            type: array
            items:
              oneOf:
                - $ref: "#/$defs/nestedCondition"
      - type: object
        required:
          - any
        properties:
          any:
            type: array
            items:
              oneOf:
                - $ref: "#/$defs/nestedCondition"
      - type: object
        required:
          - not
        properties:
          not:
            $ref: "#/$defs/nestedCondition"
      - $ref: "#/$defs/conditionReference"
required:
  - apacheAirflow
  - app
  - azureDevOps
  - backend
  - costInsights
  - gocd
  - scorecards
  - sentry
  - techdocs
definitions:
  HumanDuration:
    type: object
    description: Human friendly durations object.
    properties:
      years:
        type: number
      months:
        type: number
      weeks:
        type: number
      days:
        type: number
      hours:
        type: number
      minutes:
        type: number
      seconds:
        type: number
      milliseconds:
        type: number
  TaskScheduleDefinitionConfig:
    type: object
    required:
      - frequency
      - timeout
    description: Config options for  {@link  TaskScheduleDefinition }  that control
      the scheduling of a task.
    properties:
      frequency:
        anyOf:
          - type: object
            properties:
              cron:
                type: string
                description: A crontab style string.
            required:
              - cron
          - type: string
          - $ref: "#/definitions/HumanDuration"
        description: How often you want the task to run. The system does its best to
          avoid overlapping invocations.
      timeout:
        anyOf:
          - type: string
          - $ref: "#/definitions/HumanDuration"
        description: The maximum amount of time that a single task invocation can take,
          before it's considered timed out and gets "released" such that a new
          invocation is permitted to take place (possibly, then, on a different
          worker).
      initialDelay:
        anyOf:
          - type: string
          - $ref: "#/definitions/HumanDuration"
        description: The amount of time that should pass before the first invocation
          happens.
      scope:
        type: string
        enum:
          - global
          - local
        description: Sets the scope of concurrency control / locking to apply for
          invocations of this task.
  TaskScheduleDefinition:
    type: object
    required:
      - frequency
      - timeout
    description: Options that control the scheduling of a task.
    properties:
      frequency:
        anyOf:
          - type: object
            properties:
              cron:
                type: string
                description: A crontab style string.
            required:
              - cron
          - $ref: "#/definitions/Duration"
          - $ref: "#/definitions/HumanDuration"
        description: How often you want the task to run. The system does its best to
          avoid overlapping invocations.
      timeout:
        anyOf:
          - $ref: "#/definitions/Duration"
          - $ref: "#/definitions/HumanDuration"
        description: The maximum amount of time that a single task invocation can take,
          before it's considered timed out and gets "released" such that a new
          invocation is permitted to take place (possibly, then, on a different
          worker).
      initialDelay:
        anyOf:
          - $ref: "#/definitions/Duration"
          - $ref: "#/definitions/HumanDuration"
        description: The amount of time that should pass before the first invocation
          happens.
      scope:
        type: string
        enum:
          - global
          - local
        description: Sets the scope of concurrency control / locking to apply for
          invocations of this task.
  Duration:
    type: object
    description: >-
      A Duration object represents a period of time, like "2 months" or "1 day,
      1 hour". Conceptually, it is just a map of units to their quantities,
      accompanied by some additional configuration and methods for creating,
      parsing, interrogating, transforming, and formatting them. They can be
      used on their own or in conjunction with other Luxon types; for example,
      you can use  {@link  DateTime.plus  }  to add a Duration object to a
      DateTime, producing another DateTime.


      Here is a brief overview of commonly used methods and getters in Duration:


      * **Creation** To create a Duration, use  {@link  Duration.fromMillis } ,  {@link  Duration.fromObject } , or  {@link  Duration.fromISO } .

      * **Unit values** See the  {@link  Duration#years  } ,  {@link  Duration.months } ,  {@link  Duration#weeks  } ,  {@link  Duration#days  } ,  {@link  Duration#hours  } ,  {@link  Duration#minutes  } ,

      *  {@link  Duration#seconds  } ,  {@link  Duration#milliseconds  }  accessors.

      * **Configuration** See   {@link  Duration#locale  }  and  {@link  Duration#numberingSystem  }  accessors.

      * **Transformation** To create new Durations out of old ones use  {@link  Duration#plus  } ,  {@link  Duration#minus  } ,  {@link  Duration#normalize  } ,  {@link  Duration#set  } ,  {@link  Duration#reconfigure  } ,

      *  {@link  Duration#shiftTo  } , and  {@link  Duration#negate  } .

      * **Output** To convert the Duration into other representations, see  {@link  Duration#as  } ,  {@link  Duration#toISO  } ,  {@link  Duration#toFormat  } , and  {@link  Duration#toJSON  } 


      There's are more methods documented below. In addition, for more information on subtler topics like internationalization and validity, see the external documentation.
  Options:
    type: object
    properties:
      fileContent:
        anyOf:
          - type: string
          - type: array
            items:
              type: string
      ignoredFiles:
        type: array
        items:
          type: string
      ignoredLanguages:
        type: array
        items:
          $ref: "#/definitions/Language"
      categories:
        type: array
        items:
          $ref: "#/definitions/Category"
      keepVendored:
        type: boolean
      keepBinary:
        type: boolean
      relativePaths:
        type: boolean
      childLanguages:
        type: boolean
      quick:
        type: boolean
      offline:
        type: boolean
      checkIgnored:
        type: boolean
      checkAttributes:
        type: boolean
      checkHeuristics:
        type: boolean
      checkShebang:
        type: boolean
      checkModeline:
        type: boolean
  Language:
    type: string
  Category:
    type: string
    enum:
      - data
      - markup
      - programming
      - prose
description: This is the schema describing the structure of the app-config.yaml
  configuration file.
properties:
  app:
    type: object
    required:
      - baseUrl
    description: Generic frontend configuration.
    properties:
      baseUrl:
        type: string
        visibility: frontend
        description: The public absolute root URL that the frontend.
      title:
        type: string
        visibility: frontend
        description: The title of the app, as shown in the Backstage web interface.
      datadogRum:
        type: object
        description: Datadog RUM events configuration
        required:
          - clientToken
          - applicationId
        properties:
          env:
            type: string
            visibility: frontend
            description: Environment for Datadog RUM events
          clientToken:
            type: string
            visibility: frontend
            description: clientToken for Datadog RUM events
          applicationId:
            type: string
            visibility: frontend
            description: applicationId for Datadog RUM events
          site:
            type: string
            visibility: frontend
            description: site for Datadog RUM events
      listen:
        type: object
        description: Listening configuration for local development
        properties:
          host:
            type: string
            visibility: frontend
            description: The host that the frontend should be bound to. Only used for local
              development.
          port:
            type: number
            visibility: frontend
            description: The port that the frontend should be bound to. Only used for local
              development.
      https:
        type: object
        description: Only used for local development. The https object is passed to
          webpack in order to enable using https on localhost.
        properties:
          certificate:
            type: object
            description: Parent object containing certificate and the private key
            required:
              - key
              - cert
            properties:
              key:
                type: string
                visibility: secret
                description: Https Certificate private key. Use $file to load in a file
              cert:
                type: string
                visibility: secret
                description: Https Certificate. Use $file to load in a file
      support:
        type: object
        required:
          - url
          - items
        description: Information about support of this Backstage instance and how to
          contact the integrator team.
        properties:
          url:
            type: string
            description: The primary support url.
            visibility: frontend
          items:
            type: array
            description: A list of categorized support item groupings.
            items:
              type: object
              required:
                - title
                - links
              properties:
                title:
                  type: string
                  description: The title of the support item grouping.
                  visibility: frontend
                icon:
                  type: string
                  description: An optional icon for the support item grouping.
                  visibility: frontend
                links:
                  type: array
                  description: A list of support links for the Backstage instance inside this
                    grouping.
                  items:
                    type: object
                    required:
                      - url
                    properties:
                      url:
                        type: string
                        visibility: frontend
                      title:
                        type: string
                        visibility: frontend
      experimental:
        type: object
        properties:
          packages:
            anyOf:
              - type: string
                const: all
              - type: object
                properties:
                  include:
                    type: array
                    items:
                      type: string
                  exclude:
                    type: array
                    items:
                      type: string
            visibility: frontend
            deepVisibility: frontend
      routes:
        type: object
        properties:
          bindings:
            type: object
            deepVisibility: frontend
            additionalProperties:
              type: string
      extensions:
        type: array
        deepVisibility: frontend
        items:
          anyOf:
            - type: string
            - type: object
              additionalProperties:
                anyOf:
                  - type: boolean
                  - type: object
                    properties:
                      attachTo:
                        type: object
                        required:
                          - id
                          - input
                        properties:
                          id:
                            type: string
                          input:
                            type: string
                      disabled:
                        type: boolean
                      config:
                        $comment: ""
      analytics:
        type: object
        required:
          - ga
          - ga4
          - newRelic
        properties:
          ga4:
            type: object
            required:
              - measurementId
            properties:
              measurementId:
                type: string
                description: Google Analytics measurement ID, e.g. G-000000-0
                visibility: frontend
              identity:
                type: string
                enum:
                  - disabled
                  - optional
                  - required
                description: >-
                  Controls how the identityApi is used when sending data to GA:


                  - `disabled`: (Default) Explicitly prevents a user's identity from   being used when capturing events in GA.

                  - `optional`: Pageviews and hits are forwarded to GA as they happen   and only include user identity metadata once known. Guarantees   that hits are captured for all sessions, even if no sign in   occurs, but may result in dropped hits in User ID views.

                  - `required`: All pageviews and hits are deferred until an identity   is known. Guarantees that all data sent to GA correlates to a user   identity, but prevents GA from receiving events for sessions in   which a user does not sign in. An `identityApi` instance must be   passed during instantiation when set to this value.
                visibility: frontend
              debug:
                type: boolean
                description: Whether to log analytics debug statements to the console. Defaults
                  to false.
                visibility: frontend
              enableSendPageView:
                type: boolean
                description: Whether to send default send_page_view event. Defaults to false.
                visibility: frontend
              testMode:
                type: boolean
                description: Prevents events from actually being sent when set to true. Defaults
                  to false.
                visibility: frontend
              contentGrouping:
                type: string
                enum:
                  - pluginId
                  - extension
                  - routeRef
                description: Content grouping definition Feature available in Google Analytics 4
                  More information
                  https://support.google.com/analytics/answer/11523339?hl=en
                  Data can be grouped by pluginId, routeRef Takes 24 hours
                  before metrics shows up in GA dashboard Specifies the
                  dimension to be used for content grouping Can be one of
                  pluginId, extension or routeRef
                visibility: frontend
              allowedContexts:
                anyOf:
                  - type: array
                    items:
                      type: string
                  - type: array
                    items:
                      type: string
                      const: "*"
                    minItems: 1
                    maxItems: 1
                description: Configuration informing how Analytics Context and Event Attributes
                  metadata will be captured in Google Analytics. Contexts that
                  will be sent as parameters in the event. context-name will be
                  prefixed by c_, for example, pluginId will be c_pluginId in
                  the event.
                visibility: frontend
              allowedAttributes:
                anyOf:
                  - type: array
                    items:
                      type: string
                  - type: array
                    items:
                      type: string
                      const: "*"
                    minItems: 1
                    maxItems: 1
                description: Attributes that will be sent as parameters in the event
                  attribute-name will be prefixed by a_, for example ,
                  testAttribute will be c_testAttribute in the event.
                visibility: frontend
          ga:
            type: object
            required:
              - trackingId
            properties:
              trackingId:
                type: string
                description: Google Analytics tracking ID, e.g. UA-000000-0
                visibility: frontend
              scriptSrc:
                type: string
                description: URL to Google Analytics analytics.js script Defaults to fetching
                  from GA source (eg.
                  https://www.google-analytics.com/analytics.js)
                visibility: frontend
              identity:
                type: string
                enum:
                  - disabled
                  - optional
                  - required
                description: >-
                  Controls how the identityApi is used when sending data to GA:


                  - `disabled`: (Default) Explicitly prevents a user's identity from   being used when capturing events in GA.

                  - `optional`: Pageviews and hits are forwarded to GA as they happen   and only include user identity metadata once known. Guarantees   that hits are captured for all sessions, even if no sign in   occurs, but may result in dropped hits in User ID views.

                  - `required`: All pageviews and hits are deferred until an identity   is known. Guarantees that all data sent to GA correlates to a user   identity, but prevents GA from receiving events for sessions in   which a user does not sign in. An `identityApi` instance must be   passed during instantiation when set to this value.
                visibility: frontend
              virtualSearchPageView:
                type: object
                description: Controls whether to send virtual pageviews on `search` events. Can
                  be used to enable Site Search in GA.
                properties:
                  mode:
                    type: string
                    enum:
                      - disabled
                      - only
                      - both
                    description: >-
                      - `disabled`: (Default) no virtual pageviews are sent

                      - `only`: Sends virtual pageview _instead_ of the `search` event

                      - `both`: Sends both the `search` event _and_ the virtual pageview
                    visibility: frontend
                  mountPath:
                    type: string
                    description: Specifies on which path the main Search page is mounted. Defaults
                      to `/search`.
                    visibility: frontend
                  searchQuery:
                    type: string
                    description: Specifies which query param is used for the term query in the
                      virtual pageview URL. Defaults to `query`.
                    visibility: frontend
                  categoryQuery:
                    type: string
                    description: Specifies which query param is used for the category query in the
                      virtual pageview URL. Skipped by default.
                    visibility: frontend
              debug:
                type: boolean
                description: Whether or not to log analytics debug statements to the console.
                  Defaults to false.
                visibility: frontend
              testMode:
                type: boolean
                description: Prevents events from actually being sent when set to true. Defaults
                  to false.
                visibility: frontend
              customDimensionsMetrics:
                type: array
                description: Configuration informing how Analytics Context and Event Attributes
                  metadata will be captured in Google Analytics.
                items:
                  type: object
                  required:
                    - type
                    - index
                    - source
                    - key
                  properties:
                    type:
                      type: string
                      enum:
                        - dimension
                        - metric
                      description: Specifies whether the corresponding metadata should be collected as
                        a Google Analytics custom dimension or custom metric.
                      visibility: frontend
                    index:
                      type: number
                      description: The index of the Google Analytics custom dimension or metric that
                        the metadata should be written to.
                      visibility: frontend
                    source:
                      type: string
                      enum:
                        - context
                        - attributes
                      description: Specifies whether the desired value lives as an attribute on the
                        Analytics Context or the Event's Attributes.
                      visibility: frontend
                    key:
                      type: string
                      description: The property of the context or attributes that should be captured.
                        e.g. to capture the Plugin ID associated with an event,
                        the source should be set to "context" and the key should
                        be set to pluginId.
                      visibility: frontend
          newRelic:
            type: object
            required:
              - endpoint
              - accountId
              - applicationId
              - licenseKey
              - distributedTracingEnabled
              - cookiesEnabled
            properties:
              endpoint:
                type: string
                enum:
                  - bam.eu01.nr-data.net
                  - bam.nr-data.net
                description: Data ingestion endpoint to use, either bam.eu01.nr-data.net (EU) or
                  bam.nr-data.net (US)
                visibility: frontend
              accountId:
                type: string
                description: New Relic Account ID, e.g. 1234567
                visibility: frontend
              applicationId:
                type: string
                description: New Relic Application ID, e.g. 987654321
                visibility: frontend
              licenseKey:
                type: string
                description: New Relic License Key, e.g. NRJS-12a3456bc78de9123f4
                visibility: frontend
              distributedTracingEnabled:
                type: boolean
                description: Whether to enabled distributed tracing, defaults to false
                visibility: frontend
              cookiesEnabled:
                type: boolean
                description: Whether to enabled tracing of cookies, defaults to false
                visibility: frontend
      packageName:
        type: string
        description: >-
          The name of the app package (in most Backstage repositories, this is
          the "name" field in `packages/app/package.json`) that content should
          be served from. The same app package should be added as a dependency
          to the backend package in order for it to be accessible at runtime.


          In a typical setup with a single app package, this will default to 'app'.
      disableConfigInjection:
        type: boolean
        description: >-
          Disables the configuration injection. This can be useful if you're
          running in an environment with a read-only filesystem, or for some
          other reason don't want configuration to be injected.


          Note that this will cause the configuration used when building the app bundle to be used, unless a separate configuration loading strategy is set up.


          This also disables configuration injection though `APP_CONFIG_` environment variables.
      disableStaticFallbackCache:
        type: boolean
        description: By default the app backend plugin will cache previously deployed
          static assets in the database. If you disable this, it is recommended
          to set a `staticFallbackHandler` instead.
  allure:
    type: object
    properties:
      baseUrl:
        type: string
        visibility: frontend
  firehydrant:
    type: object
    properties:
      baseUrl:
        type: string
        visibility: frontend
  lighthouse:
    type: object
    description: Configuration options for the Lighthouse backend plugin.
    properties:
      baseUrl:
        type: string
        visibility: frontend
      schedule:
        anyOf:
          - $ref: "#/definitions/HumanDuration"
          - $ref: "#/definitions/TaskScheduleDefinitionConfig"
        description: Schedule of the audit
  nomad:
    type: object
    required:
      - addr
    properties:
      addr:
        type: string
        description: "The address of the Nomad API. See:
          https://developer.hashicorp.com/nomad/api-docs#addressing-and-ports"
        visibility: frontend
      token:
        type: string
        description: "The token to call the Nomad API with. See:
          https://developer.hashicorp.com/nomad/api-docs#authentication"
        visibility: secret
  auth:
    type: object
    description: Configuration that provides information on available configured
      authentication providers.
    properties:
      providers:
        type: object
        description: The available auth-provider options and attributes
        additionalProperties:
          type: object
          visibility: frontend
          additionalProperties: true
        properties:
          google:
            type: object
            visibility: frontend
            additionalProperties:
              type: object
              required:
                - clientId
                - clientSecret
              properties:
                clientId:
                  type: string
                clientSecret:
                  type: string
                  visibility: secret
                callbackUrl:
                  type: string
          github:
            type: object
            visibility: frontend
            additionalProperties:
              type: object
              required:
                - clientId
                - clientSecret
              properties:
                clientId:
                  type: string
                clientSecret:
                  type: string
                  visibility: secret
                callbackUrl:
                  type: string
                enterpriseInstanceUrl:
                  type: string
          saml:
            type: object
            required:
              - entryPoint
              - issuer
              - cert
            visibility: frontend
            properties:
              entryPoint:
                type: string
              logoutUrl:
                type: string
              issuer:
                type: string
              cert:
                type: string
                visibility: secret
              audience:
                type: string
              privateKey:
                type: string
                visibility: secret
              authnContext:
                type: array
                items:
                  type: string
              identifierFormat:
                type: string
              decryptionPvk:
                type: string
                visibility: secret
              signatureAlgorithm:
                type: string
                enum:
                  - sha256
                  - sha512
              digestAlgorithm:
                type: string
              acceptedClockSkewMs:
                type: number
          oauth2:
            type: object
            visibility: frontend
            additionalProperties:
              type: object
              required:
                - clientId
                - clientSecret
                - authorizationUrl
                - tokenUrl
              properties:
                clientId:
                  type: string
                clientSecret:
                  type: string
                  visibility: secret
                authorizationUrl:
                  type: string
                tokenUrl:
                  type: string
                scope:
                  type: string
                disableRefresh:
                  type: boolean
                includeBasicAuth:
                  type: boolean
          auth0:
            type: object
            visibility: frontend
            additionalProperties:
              type: object
              required:
                - clientId
                - clientSecret
                - domain
              properties:
                clientId:
                  type: string
                clientSecret:
                  type: string
                  visibility: secret
                domain:
                  type: string
                callbackUrl:
                  type: string
                audience:
                  type: string
                connection:
                  type: string
                connectionScope:
                  type: string
          onelogin:
            type: object
            visibility: frontend
            additionalProperties:
              type: object
              required:
                - clientId
                - clientSecret
                - issuer
              properties:
                clientId:
                  type: string
                clientSecret:
                  type: string
                  visibility: secret
                issuer:
                  type: string
                callbackUrl:
                  type: string
          awsalb:
            type: object
            required:
              - region
            visibility: frontend
            properties:
              iss:
                type: string
              region:
                type: string
          cfaccess:
            type: object
            required:
              - teamName
            visibility: frontend
            properties:
              teamName:
                type: string
          backstageTokenExpiration:
            $ref: "#/definitions/HumanDuration"
            description: The backstage token expiration.
          atlassian:
            type: object
            visibility: frontend
            additionalProperties:
              type: object
              required:
                - clientId
                - clientSecret
              properties:
                clientId:
                  type: string
                clientSecret:
                  type: string
                  visibility: secret
                audience:
                  type: string
                callbackUrl:
                  type: string
          gcpIap:
            type: object
            description: Configuration for the Google Cloud Platform Identity-Aware Proxy
              (IAP) auth provider.
            additionalProperties:
              type: object
              required:
                - audience
              properties:
                audience:
                  type: string
                  description: The audience to use when validating incoming JWT tokens. See
                    https://backstage.io/docs/auth/google/gcp-iap-auth
                jwtHeader:
                  type: string
                  description: The name of the header to read the JWT token from, defaults to
                    `'x-goog-iap-jwt-assertion'`.
          microsoft:
            type: object
            visibility: frontend
            additionalProperties:
              type: object
              required:
                - clientId
                - tenantId
                - clientSecret
              properties:
                clientId:
                  type: string
                tenantId:
                  type: string
                clientSecret:
                  type: string
                  visibility: secret
                domainHint:
                  type: string
                callbackUrl:
                  type: string
                additionalScopes:
                  type: array
                  items:
                    type: string
          gitlab:
            type: object
            visibility: frontend
            additionalProperties:
              type: object
              required:
                - clientId
                - clientSecret
              properties:
                clientId:
                  type: string
                clientSecret:
                  type: string
                  visibility: secret
                audience:
                  type: string
                callbackUrl:
                  type: string
          okta:
            type: object
            visibility: frontend
            additionalProperties:
              type: object
              required:
                - clientId
                - clientSecret
              properties:
                clientId:
                  type: string
                clientSecret:
                  type: string
                  visibility: secret
                audience:
                  type: string
                authServerId:
                  type: string
                idp:
                  type: string
                callbackUrl:
                  type: string
                additionalScopes:
                  type: string
          oidc:
            type: object
            visibility: frontend
            additionalProperties:
              type: object
              required:
                - clientId
                - clientSecret
                - metadataUrl
              properties:
                clientId:
                  type: string
                clientSecret:
                  type: string
                  visibility: secret
                metadataUrl:
                  type: string
                callbackUrl:
                  type: string
                tokenEndpointAuthMethod:
                  type: string
                tokenSignedResponseAlg:
                  type: string
                scope:
                  type: string
                prompt:
                  type: string
      environment:
        type: string
        description: "The 'environment' attribute added as an optional parameter to have
          configurable environment value for `auth.providers`. default value:
          'development' optional values: 'development' | 'production'"
        visibility: frontend
      autologout:
        type: object
        description: Autologout feature configuration
        properties:
          enabled:
            type: boolean
            description: Enable or disable the autologout feature
            visibility: frontend
          idleTimeoutMinutes:
            type: number
            description: Number of minutes after which the inactive user is logged out
              automatically. Default is 60 minutes (1 hour)
            visibility: frontend
          promptBeforeIdleSeconds:
            type: number
            description: Number of seconds before the idle timeout where the user will be
              asked if it's still active. A dialog will be shown. Default is 10
              seconds. Set to 0 seconds to disable the prompt.
            visibility: frontend
          useWorkerTimers:
            type: boolean
            description: Enable/disable the usage of worker thread timers instead of main
              thread timers. Default is true. If you experience some browser
              incompatibility, you may try to set this to false.
            visibility: frontend
          logoutIfDisconnected:
            type: boolean
            description: Enable/disable the automatic logout also on users that are logged
              in but with no Backstage tabs open. Default is true.
            visibility: frontend
      session:
        type: object
        properties:
          secret:
            type: string
            description: The secret attribute of session object.
            visibility: secret
      identityTokenAlgorithm:
        type: string
        description: 'JWS "alg" (Algorithm) Header Parameter value. Defaults to ES256.
          Must match one of the algorithms defined for IdentityClient. When
          setting a different algorithm, check if the `key` field of the
          `signing_keys` table can fit the length of the generated keys. If not,
          add a knex migration file in the migrations folder. More info on
          supported algorithms: https://github.com/panva/jose'
      keyStore:
        type: object
        description: To control how to store JWK data in auth-backend
        properties:
          provider:
            type: string
            enum:
              - database
              - memory
              - firestore
              - static
          firestore:
            type: object
            properties:
              host:
                type: string
                description: The host to connect to
              port:
                type: number
                description: The port to connect to
              ssl:
                type: boolean
                description: Whether to use SSL when connecting.
              projectId:
                type: string
                description: The Google Cloud Project ID
              keyFilename:
                type: string
                description: Local file containing the Service Account credentials. You can omit
                  this value to automatically read from
                  GOOGLE_APPLICATION_CREDENTIALS env which is useful for local
                  development.
              path:
                type: string
                description: The path to use for the collection. Defaults to 'sessions'
              timeout:
                type: number
                description: Timeout used for database operations. Defaults to 10000ms
          static:
            type: object
            required:
              - keys
            properties:
              keys:
                type: array
                description: Must be declared at least once and the first one will be used for
                  signing
                items:
                  type: object
                  required:
                    - publicKeyFile
                    - privateKeyFile
                    - keyId
                  properties:
                    publicKeyFile:
                      type: string
                      description: Path to the public key file in the SPKI format
                    privateKeyFile:
                      type: string
                      description: Path to the matching private key file in the PKCS#8 format
                    keyId:
                      type: string
                      description: id to uniquely identify this key within the JWK set
                    algorithm:
                      type: string
                      description: JWS "alg" (Algorithm) Header Parameter value. Defaults to ES256.
                        Must match the algorithm used to generate the keys in
                        the provided files
  techInsights:
    type: object
    description: Configuration options for the tech-insights plugin
    properties:
      factChecker:
        type: object
        properties:
          checks:
            type: object
            additionalProperties:
              $ref: "#/$defs/check"
      factRetrievers:
        type: object
        description: Configuration options for fact retrievers
        additionalProperties:
          type: object
          required:
            - cadence
          description: Configuration for a fact retriever and its registration identified
            by its name.
          properties:
            cadence:
              type: string
              description: A cron expression to indicate when the fact retriever should be
                triggered.
            initialDelay:
              $ref: "#/definitions/HumanDuration"
              description: Optional duration of the initial delay.
            lifecycle:
              anyOf:
                - type: object
                  properties:
                    timeToLive:
                      $ref: "#/definitions/HumanDuration"
                  required:
                    - timeToLive
                - type: object
                  properties:
                    maxItems:
                      type: number
                  required:
                    - maxItems
              description: Optional lifecycle definition indicating the cleanup logic of facts
                when this retriever is run.
            timeout:
              $ref: "#/definitions/HumanDuration"
              description: Optional duration to determine how long the fact retriever should
                be allowed to run, defaults to 5 minutes.
  backend:
    type: object
    required:
      - baseUrl
      - database
      - listen
    description: Generic backend configuration.
    properties:
      auth:
        type: object
        description: Backend configuration for when request authentication is enabled
        properties:
          keys:
            type: array
            description: Keys shared by all backends for signing and validating backend
              tokens.
            items:
              type: object
              required:
                - secret
              properties:
                secret:
                  type: string
                  description: Secret for generating tokens. Should be a base64 string,
                    recommended length is 24 bytes.
                  visibility: secret
      baseUrl:
        type: string
        description: The public absolute root URL that the backend is reachable at, from
          the browser's perspective.
        visibility: frontend
      listen:
        anyOf:
          - type: string
          - type: object
            properties:
              host:
                type: string
                description: Address of the interface that the backend should bind to.
              port:
                type:
                  - string
                  - number
                description: Port that the backend should listen to.
        description: Address that the backend should listen to.
      https:
        anyOf:
          - type: boolean
            const: true
          - type: object
            properties:
              certificate:
                type: object
                required:
                  - cert
                  - key
                description: Certificate configuration
                properties:
                  cert:
                    type: string
                    description: PEM encoded certificate. Use $file to load in a file
                  key:
                    type: string
                    description: PEM encoded certificate key. Use $file to load in a file.
                    visibility: secret
        description: >-
          HTTPS configuration for the backend. If omitted the backend will serve
          HTTP.


          Setting this to `true` will cause self-signed certificates to be generated, which can be useful for local development or other non-production scenarios.
      workingDirectory:
        type: string
        description: An absolute path to a directory that can be used as a working dir,
          for example as scratch space for large operations.
      database:
        type: object
        required:
          - client
          - connection
        description: Database connection configuration, select base database type using
          the `client` field
        properties:
          client:
            type: string
            enum:
              - better-sqlite3
              - sqlite3
              - pg
            description: Default database client to use
          connection:
            anyOf:
              - type: string
              - type: object
                properties:
                  password:
                    type: string
                    description: Password that belongs to the client User
                    visibility: secret
                additionalProperties:
                  $comment: ""
                  description: Other connection settings
            description: Base database connection string, or object with individual
              connection properties
            visibility: secret
          prefix:
            type: string
            description: Database name prefix override
          ensureExists:
            type: boolean
            description: Whether to ensure the given database exists by creating it if it
              does not. Defaults to true if unspecified.
          pluginDivisionMode:
            type: string
            enum:
              - database
              - schema
            description: >-
              How plugins databases are managed/divided in the provided database
              instance.


              `database` -> Plugins are each given their own database to manage their schemas/tables.


              `schema` -> Plugins will be given their own schema (in the specified/default database)             to manage their tables.


              NOTE: Currently only supported by the `pg` client.
            default: database
          role:
            type: string
            description: Configures the ownership of newly created schemas in pg databases.
          knexConfig:
            type: object
            description: Arbitrary config object to pass to knex when initializing
              (https://knexjs.org/#Installation-client). Most notable is the
              debug and asyncStackTraces booleans
          plugin:
            type: object
            description: Plugin specific database configuration and client override
            additionalProperties:
              type: object
              properties:
                client:
                  type: string
                  enum:
                    - better-sqlite3
                    - sqlite3
                    - pg
                  description: Database client override
                connection:
                  anyOf:
                    - type: string
                    - type: object
                  description: Database connection string or Knex object override
                  visibility: secret
                ensureExists:
                  type: boolean
                  description: Whether to ensure the given database exists by creating it if it
                    does not. Defaults to base config if unspecified.
                knexConfig:
                  type: object
                  description: >-
                    Arbitrary config object to pass to knex when initializing
                    (https://knexjs.org/#Installation-client). Most notable is
                    the debug and asyncStackTraces booleans.


                    This is merged recursively into the base knexConfig
                role:
                  type: string
                  description: Configures the ownership of newly created schemas in pg databases.
      cache:
        anyOf:
          - type: object
            properties:
              store:
                type: string
                const: memory
              defaultTtl:
                type: number
                description: An optional default TTL (in milliseconds).
            required:
              - store
          - type: object
            properties:
              store:
                type: string
                const: redis
              connection:
                type: string
                description: A redis connection string in the form
                  `redis://user:pass@host:port`.
                visibility: secret
              defaultTtl:
                type: number
                description: An optional default TTL (in milliseconds).
            required:
              - store
              - connection
          - type: object
            properties:
              store:
                type: string
                const: memcache
              connection:
                type: string
                description: A memcache connection string in the form `user:pass@host:port`.
                visibility: secret
              defaultTtl:
                type: number
                description: An optional default TTL (in milliseconds).
            required:
              - store
              - connection
        description: Cache connection configuration, select cache type using the `store`
          field
      cors:
        type: object
        properties:
          origin:
            anyOf:
              - type: string
              - type: array
                items:
                  type: string
          methods:
            anyOf:
              - type: string
              - type: array
                items:
                  type: string
          allowedHeaders:
            anyOf:
              - type: string
              - type: array
                items:
                  type: string
          exposedHeaders:
            anyOf:
              - type: string
              - type: array
                items:
                  type: string
          credentials:
            type: boolean
          maxAge:
            type: number
          preflightContinue:
            type: boolean
          optionsSuccessStatus:
            type: number
      reading:
        type: object
        description: Configuration related to URL reading, used for example for reading
          catalog info files, scaffolder templates, and techdocs content.
        properties:
          allow:
            type: array
            description: A list of targets to allow outgoing requests to. Users will be able
              to make requests on behalf of the backend to the targets that are
              allowed by this list.
            items:
              type: object
              required:
                - host
              properties:
                host:
                  type: string
                  description: A host to allow outgoing requests to, being either a full host or a
                    subdomain wildcard pattern with a leading `*`. For example
                    `example.com` and `*.example.com` are valid values,
                    `prod.*.example.com` is not. The host may also contain a
                    port, for example `example.com:8080`.
                paths:
                  type: array
                  description: An optional list of paths. In case they are present only targets
                    matching any of them will are allowed. You can use trailing
                    slashes to make sure only subdirectories are allowed, for
                    example `/mydir/` will allow targets with paths like
                    `/mydir/a` but will block paths like `/mydir2`.
                  items:
                    type: string
      csp:
        type: object
        description: >-
          Content Security Policy options.


          The keys are the plain policy ID, e.g. "upgrade-insecure-requests". The values are on the format that the helmet library expects them, as an array of strings. There is also the special value false, which means to remove the default value that Backstage puts in place for that policy.
        additionalProperties:
          anyOf:
            - type: array
              items:
                type: string
            - type: boolean
              const: false
  discovery:
    type: object
    required:
      - endpoints
    description: Discovery options.
    visibility: frontend
    properties:
      endpoints:
        type: array
        description: |-
          Endpoints

          A list of target baseUrls and the associated plugins.
        visibility: frontend
        items:
          type: object
          required:
            - target
            - plugins
          properties:
            target:
              anyOf:
                - type: string
                - type: object
                  required:
                    - external
                    - internal
                  properties:
                    external:
                      type: string
                      visibility: frontend
                    internal:
                      type: string
              description: >-
                The target baseUrl to use for the plugin


                Can be either a string or an object with internal and external keys. Targets with `{{pluginId}}` or `{{ pluginId }} in the url will be replaced with the pluginId.
              visibility: frontend
            plugins:
              type: array
              description: Array of plugins which use the target baseUrl.
              visibility: frontend
              items:
                type: string
  organization:
    type: object
    description: Configuration that provides information about the organization that
      the app is for.
    properties:
      name:
        type: string
        description: The name of the organization that the app belongs to.
        visibility: frontend
  homepage:
    type: object
    description: This config was used by the HomepageTimer but has been replaced  by
      the HeaderWorldClock in the home plugin
    deprecated: in favor of the HeaderWorldClock which is found in the home plugin
    properties:
      clocks:
        type: array
        items:
          type: object
          required:
            - label
            - timezone
          properties:
            label:
              type: string
              visibility: frontend
            timezone:
              type: string
              visibility: frontend
  enableExperimentalRedirectFlow:
    type: boolean
    description: Enable redirect authentication flow type, instead of a popup for
      authentication.
    visibility: frontend
  integrations:
    type: object
    description: Configuration for integrations towards various external repository
      provider systems
    visibility: frontend
    properties:
      azure:
        type: array
        description: Integration configuration for Azure
        items:
          type: object
          required:
            - host
          properties:
            host:
              type: string
              description: The hostname of the given Azure instance
              visibility: frontend
            token:
              type: string
              description: Token used to authenticate requests.
              visibility: secret
              deprecated: Use `credentials` instead.
            credential:
              type: object
              description: |-
                The credential to use for requests.

                If no credential is specified anonymous access is used.
              deepVisibility: secret
              deprecated: Use `credentials` instead.
              properties:
                clientId:
                  type: string
                clientSecret:
                  type: string
                tenantId:
                  type: string
                personalAccessToken:
                  type: string
            credentials:
              type: array
              description: >-
                The credentials to use for requests. If multiple credentials are
                specified the first one that matches the organization is used.
                If not organization matches the first credential without an
                organization is used.


                If no credentials are specified at all, either a default credential (for Azure DevOps) or anonymous access (for Azure DevOps Server) is used.
              deepVisibility: secret
              items:
                type: object
                properties:
                  clientId:
                    type: string
                  clientSecret:
                    type: string
                  tenantId:
                    type: string
                  personalAccessToken:
                    type: string
      bitbucket:
        type: array
        description: Integration configuration for Bitbucket
        deprecated: replaced by bitbucketCloud and bitbucketServer
        items:
          type: object
          required:
            - host
          properties:
            host:
              type: string
              description: The hostname of the given Bitbucket instance
              visibility: frontend
            token:
              type: string
              description: Token used to authenticate requests.
              visibility: secret
            apiBaseUrl:
              type: string
              description: The base url for the Bitbucket API, for example
                https://api.bitbucket.org/2.0
              visibility: frontend
            username:
              type: string
              description: The username to use for authenticated requests.
              visibility: secret
            appPassword:
              type: string
              description: Bitbucket app password used to authenticate requests.
              visibility: secret
      bitbucketCloud:
        type: array
        description: Integration configuration for Bitbucket Cloud
        items:
          type: object
          required:
            - username
            - appPassword
          properties:
            username:
              type: string
              description: The username to use for authenticated requests.
              visibility: secret
            appPassword:
              type: string
              description: Bitbucket Cloud app password used to authenticate requests.
              visibility: secret
      bitbucketServer:
        type: array
        description: Integration configuration for Bitbucket Server
        items:
          type: object
          required:
            - host
          properties:
            host:
              type: string
              description: The hostname of the given Bitbucket Server instance
              visibility: frontend
            token:
              type: string
              description: Token used to authenticate requests.
              visibility: secret
            username:
              type: string
              description: Username used to authenticate requests with Basic Auth.
              visibility: secret
            password:
              type: string
              description: Password (or token as password) used to authenticate requests with
                Basic Auth.
              visibility: secret
            apiBaseUrl:
              type: string
              description: The base url for the Bitbucket Server API, for example
                https://<host>/rest/api/1.0
              visibility: frontend
      gerrit:
        type: array
        description: Integration configuration for Gerrit
        items:
          type: object
          required:
            - host
          properties:
            host:
              type: string
              description: The hostname of the given Gerrit instance
              visibility: frontend
            baseUrl:
              type: string
              description: The base url for the Gerrit instance.
              visibility: frontend
            cloneUrl:
              type: string
              description: The base url for cloning repos.
              visibility: frontend
            username:
              type: string
              description: The username to use for authenticated requests.
              visibility: secret
            password:
              type: string
              description: Gerrit password used to authenticate requests. This can be either a
                password or a generated access token.
              visibility: secret
      github:
        type: array
        description: Integration configuration for GitHub
        items:
          type: object
          required:
            - host
          properties:
            host:
              type: string
              description: The hostname of the given GitHub instance
              visibility: frontend
            token:
              type: string
              description: Token used to authenticate requests.
              visibility: secret
            apiBaseUrl:
              type: string
              description: The base url for the GitHub API, for example https://api.github.com
              visibility: frontend
            rawBaseUrl:
              type: string
              description: The base url for GitHub raw resources, for example
                https://raw.githubusercontent.com
              visibility: frontend
            apps:
              type: array
              description: GitHub Apps configuration
              items:
                type: object
                required:
                  - appId
                  - privateKey
                  - webhookSecret
                  - clientId
                  - clientSecret
                properties:
                  appId:
                    type:
                      - number
                      - string
                    description: The numeric GitHub App ID, string for environment variables
                  privateKey:
                    type: string
                    description: The private key to use for auth against the app
                    visibility: secret
                  webhookSecret:
                    type: string
                    description: The secret used for webhooks
                    visibility: secret
                  clientId:
                    type: string
                    description: The client ID to use
                  clientSecret:
                    type: string
                    description: The client secret to use
                    visibility: secret
                  allowedInstallationOwners:
                    type: array
                    description: "List of installation owners allowed to be used by this GitHub app.
                      The GitHub UI does not provide a way to list the
                      installations. However you can list the installations with
                      the GitHub API. You can find the list of installations
                      here: https://api.github.com/app/installations The
                      relevant documentation for this is here.
                      https://docs.github.com/en/rest/reference/apps#list-insta\
                      llations-for-the-authenticated-app--code-samples"
                    items:
                      type: string
      gitlab:
        type: array
        description: Integration configuration for GitLab
        items:
          type: object
          required:
            - host
          properties:
            host:
              type: string
              description: The host of the target that this matches on, e.g. "gitlab.com".
              visibility: frontend
            apiBaseUrl:
              type: string
              description: >-
                The base URL of the API of this provider, e.g.
                "https://gitlab.com/api/v4", with no trailing slash.


                May be omitted specifically for public GitLab; then it will be deduced.
              visibility: frontend
            token:
              type: string
              description: |-
                The authorization token to use for requests to this provider.

                If no token is specified, anonymous access is used.
              visibility: secret
            baseUrl:
              type: string
              description: >-
                The baseUrl of this provider, e.g. "https://gitlab.com", which
                is passed into the GitLab client.


                If no baseUrl is provided, it will default to https://${host}.
              visibility: frontend
      googleGcs:
        type: object
        description: Integration configuration for Google Cloud Storage
        properties:
          clientEmail:
            type: string
            description: Service account email used to authenticate requests.
          privateKey:
            type: string
            description: Service account private key used to authenticate requests.
            visibility: secret
      awsS3:
        type: array
        description: Integration configuration for AWS S3 Service
        items:
          type: object
          properties:
            endpoint:
              type: string
              description: AWS Endpoint. The endpoint URI to send requests to. The default
                endpoint is built from the configured region.
              visibility: frontend
            s3ForcePathStyle:
              type: boolean
              description: Whether to use path style URLs when communicating with S3. Defaults
                to false. This allows providers like LocalStack, Minio and
                Wasabi (and possibly others) to be used.
              visibility: frontend
            accessKeyId:
              type: string
              description: Account access key used to authenticate requests.
            secretAccessKey:
              type: string
              description: Account secret key used to authenticate requests.
              visibility: secret
            roleArn:
              type: string
              description: ARN of the role to be assumed
            externalId:
              type: string
              description: External ID to use when assuming role
      gitea:
        type: array
        description: Integration configuration for Gitea
        items:
          type: object
          required:
            - host
          properties:
            host:
              type: string
              description: The hostname of the given Gitea instance
              visibility: frontend
            baseUrl:
              type: string
              description: The base url for the Gitea instance.
              visibility: frontend
            username:
              type: string
              description: The username to use for authenticated requests.
              visibility: secret
            password:
              type: string
              description: Gitea password used to authenticate requests. This can be either a
                password or a generated access token.
              visibility: secret
  aws:
    type: object
    description: Configuration for access to AWS accounts
    properties:
      accountDefaults:
        type: object
        description: Defaults for retrieving AWS account credentials
        properties:
          roleName:
            type: string
            description: The IAM role to assume to retrieve temporary AWS credentials
          partition:
            type: string
            description: The AWS partition of the IAM role, e.g. "aws", "aws-cn"
          region:
            type: string
            description: The STS regional endpoint to use when retrieving temporary AWS
              credentials, e.g. "ap-northeast-1"
          externalId:
            type: string
            description: The unique identifier needed to assume the role to retrieve
              temporary AWS credentials
            visibility: secret
      mainAccount:
        type: object
        description: Main account to use for retrieving AWS account credentials
        properties:
          accessKeyId:
            type: string
            description: The access key ID for a set of static AWS credentials
            visibility: secret
          secretAccessKey:
            type: string
            description: The secret access key for a set of static AWS credentials
            visibility: secret
          profile:
            type: string
            description: The configuration profile from a credentials file at
              ~/.aws/credentials and a configuration file at ~/.aws/config.
          region:
            type: string
            description: The STS regional endpoint to use for the main account, e.g.
              "ap-northeast-1"
      accounts:
        type: array
        description: Configuration for retrieving AWS accounts credentials
        items:
          type: object
          required:
            - accountId
          properties:
            accountId:
              type: string
              description: The account ID of the target account that this matches on, e.g.
                "123456789012"
            accessKeyId:
              type: string
              description: The access key ID for a set of static AWS credentials
              visibility: secret
            secretAccessKey:
              type: string
              description: The secret access key for a set of static AWS credentials
              visibility: secret
            profile:
              type: string
              description: The configuration profile from a credentials file at
                ~/.aws/credentials and a configuration file at ~/.aws/config.
            roleName:
              type: string
              description: The IAM role to assume to retrieve temporary AWS credentials
            partition:
              type: string
              description: The AWS partition of the IAM role, e.g. "aws", "aws-cn"
            region:
              type: string
              description: The STS regional endpoint to use when retrieving temporary AWS
                credentials, e.g. "ap-northeast-1"
            externalId:
              type: string
              description: The unique identifier needed to assume the role to retrieve
                temporary AWS credentials
              visibility: secret
  airbrake:
    type: object
    required:
      - apiKey
    description: Configuration options for the Airbrake plugin
    properties:
      apiKey:
        type: string
        description: "The API Key to authenticate requests. More details on how to get
          this here: https://airbrake.io/docs/api/#authentication"
        visibility: secret
  apacheAirflow:
    type: object
    required:
      - baseUrl
    description: Configurations for the Apache Airflow plugin
    properties:
      baseUrl:
        type: string
        description: The base url of the Apache Airflow installation.
        visibility: frontend
  azureDevOps:
    type: object
    required:
      - host
      - token
      - organization
    description: Configuration options for the azure-devops-backend plugin
    properties:
      host:
        type: string
        description: The hostname of the given Azure instance
      token:
        type: string
        description: Token used to authenticate requests.
        visibility: secret
      organization:
        type: string
        description: The organization of the given Azure instance
  catalog:
    type: object
    description: Configuration options for the catalog plugin.
    properties:
      rules:
        type: array
        description: >-
          Rules to apply to all catalog entities, from any location.


          An undefined list of matchers means match all, an empty list of matchers means match none.


          This is commonly used to put in what amounts to an allowlist of kinds that regular users of Backstage are permitted to register locations for. This can be used to stop them from registering yaml files describing for example a Group entity called "admin" that they make themselves members of, or similar.
        items:
          type: object
          required:
            - allow
          properties:
            allow:
              type: array
              description: |-
                Allow entities of these particular kinds.

                E.g. ["Component", "API", "Template", "Location"]
              items:
                type: string
            locations:
              type: array
              description: >-
                Limit this rule to a specific location


                Example with a fixed location  { "type": "url", "exact": "https://github.com/a/b/blob/file.yaml"}


                Example using a Regex  { "type": "url", "pattern": "https://github.com/org/*\/blob/master/*.yaml"}


                Using both exact and pattern will result in an error starting the application
              items:
                type: object
                required:
                  - type
                properties:
                  type:
                    type: string
                    description: The type of location, e.g. "url".
                  exact:
                    type: string
                    description: >-
                      The exact location, e.g.
                      "https://github.com/org/repo/blob/master/users.yaml".


                      The exact location can also be used to match on locations that contain glob characters themselves, e.g. "https://github.com/org/*\/blob/master/*.yaml".
                  pattern:
                    type: string
                    description: The pattern allowed for the location, e.g.
                      "https://github.com/org/*\/blob/master/*.yaml".
      readonly:
        type: boolean
        description: >-
          Readonly defines whether the catalog allows writes after startup.


          Setting 'readonly=false' allows users to register their own components. This is the default value.


          Setting 'readonly=true' configures catalog to only allow reads. This can be used in combination with static locations to only serve operator provided locations. Effectively this removes the ability to register new components to a running backstage instance.
      locations:
        type: array
        description: >-
          A set of static locations that the catalog shall always keep itself
          up-to-date with. This is commonly used for large, permanent
          integrations that are defined by the Backstage operators at an
          organization, rather than individual things that users register
          dynamically.


          These have (optional) rules of their own. These override what the global rules above specify. This way, you can prevent everybody from register e.g. User and Group entities, except for one or a few static locations that have those two kinds explicitly allowed.


          For example:


          ```yaml rules:   - allow: [Component, API, Template, Location] locations:   - type: url     target: https://github.com/org/repo/blob/master/users.yaml     rules:       - allow: [User, Group]   - type: url     target: https://github.com/org/repo/blob/master/systems.yaml     rules:       - allow: [System] ```
        items:
          type: object
          required:
            - type
            - target
          properties:
            type:
              type: string
              description: The type of location, e.g. "url".
            target:
              type: string
              description: The target URL of the location, e.g.
                "https://github.com/org/repo/blob/master/users.yaml".
            rules:
              type: array
              description: |-
                Optional extra rules that apply to this particular location.

                These override the global rules above.
              items:
                type: object
                required:
                  - allow
                properties:
                  allow:
                    type: array
                    description: |-
                      Allow entities of these particular kinds.

                      E.g. ["Group", "User"]
                    items:
                      type: string
      orphanStrategy:
        type: string
        enum:
          - keep
          - delete
        description: The strategy to use for entities that are orphaned, i.e. no longer
          have any other entities or providers referencing them. The default
          value is "keep".
      stitchingStrategy:
        anyOf:
          - type: object
            properties:
              mode:
                type: string
                const: immediate
                description: Perform stitching in-band immediately when needed
            required:
              - mode
          - type: object
            properties:
              mode:
                type: string
                const: deferred
                description: Defer stitching to be performed asynchronously
            required:
              - mode
        description: The strategy to use when stitching together the final entities.
      processingInterval:
        $ref: "#/definitions/HumanDuration"
        description: The interval at which the catalog should process its entities.
      experimentalPagination:
        anyOf:
          - type: boolean
          - type: object
            properties:
              limit:
                type: number
        deepVisibility: frontend
      providers:
        type: object
        description: List of provider-specific options and attributes
        properties:
          azureDevOps:
            type: object
            description: AzureDevopsEntityProvider configuration
            additionalProperties:
              type: object
              required:
                - host
                - organization
                - project
              properties:
                host:
                  type: string
                  description: (Optional) The DevOps host; leave empty for `dev.azure.com`,
                    otherwise set to your self-hosted instance host.
                organization:
                  type: string
                  description: (Required) Your organization slug.
                project:
                  type: string
                  description: (Required) Your project slug.
                repository:
                  type: string
                  description: (Optional) The repository name. Wildcards are supported as show on
                    the examples above. If not set, all repositories will be
                    searched.
                path:
                  type: string
                  description: (Optional) Where to find catalog-info.yaml files. Wildcards are
                    supported. If not set, defaults to /catalog-info.yaml.
                schedule:
                  $ref: "#/definitions/TaskScheduleDefinitionConfig"
                  description: (Optional) TaskScheduleDefinition for the refresh.
          awsS3:
            anyOf:
              - type: object
                properties:
                  bucketName:
                    type: string
                    description: (Required) AWS S3 Bucket Name
                  prefix:
                    type: string
                    description: (Optional) AWS S3 Object key prefix If not set, all keys will be
                      accepted, no filtering will be applied.
                  region:
                    type: string
                    description: (Optional) AWS Region. If not set, AWS_REGION environment variable
                      or aws config file will be used.
                  accountId:
                    type: string
                    description: (Optional) AWS Account id. If not set, main account is used.
                  schedule:
                    $ref: "#/definitions/TaskScheduleDefinitionConfig"
                    description: (Optional) TaskScheduleDefinition for the refresh.
                required:
                  - bucketName
              - type: object
                additionalProperties:
                  type: object
                  required:
                    - bucketName
                  properties:
                    bucketName:
                      type: string
                      description: (Required) AWS S3 Bucket Name
                    prefix:
                      type: string
                      description: (Optional) AWS S3 Object key prefix If not set, all keys will be
                        accepted, no filtering will be applied.
                    region:
                      type: string
                      description: (Optional) AWS Region. If not set, AWS_REGION environment variable
                        or aws config file will be used.
                    accountId:
                      type: string
                      description: (Optional) AWS Account id. If not set, main account is used.
                    schedule:
                      $ref: "#/definitions/TaskScheduleDefinitionConfig"
                      description: (Optional) TaskScheduleDefinition for the refresh.
            description: |-
              AwsS3EntityProvider configuration

              Uses "default" as default id for the single config variant.
          backstageOpenapi:
            type: object
            required:
              - plugins
            description: BackstageOpenApiEntityProvider configuration
            properties:
              plugins:
                type: array
                description: A list of plugins, whose OpenAPI specs you want to collate in
                  `InternalOpenApiDocumentationProvider`.
                items:
                  type: string
          bitbucketServer:
            anyOf:
              - type: object
                properties:
                  catalogPath:
                    type: string
                    description: (Optional) Path to the catalog file. Default to
                      "/catalog-info.yaml".
                    visibility: frontend
                  filters:
                    type: object
                    description: (Optional) Filters applied to discovered catalog files in
                      repositories.
                    visibility: frontend
                    properties:
                      repoSlug:
                        type: string
                        description: (Optional) Regular expression filter for the repository slug.
                        visibility: frontend
                      projectKey:
                        type: string
                        description: (Optional) Regular expression filter for the project key.
                        visibility: frontend
                  schedule:
                    $ref: "#/definitions/TaskScheduleDefinitionConfig"
                    description: (Optional) TaskScheduleDefinition for the refresh.
              - type: object
                additionalProperties:
                  type: object
                  properties:
                    catalogPath:
                      type: string
                      description: (Optional) Path to the catalog file. Default to
                        "/catalog-info.yaml".
                      visibility: frontend
                    filters:
                      type: object
                      description: (Optional) Filters applied to discovered catalog files in
                        repositories.
                      visibility: frontend
                      properties:
                        repoSlug:
                          type: string
                          description: (Optional) Regular expression filter for the repository slug.
                          visibility: frontend
                        projectKey:
                          type: string
                          description: (Optional) Regular expression filter for the project key.
                          visibility: frontend
                    schedule:
                      $ref: "#/definitions/TaskScheduleDefinitionConfig"
                      description: (Optional) TaskScheduleDefinition for the refresh.
            description: |-
              BitbucketServerEntityProvider configuration

              Uses "default" as default id for the single config variant.
          gerrit:
            type: object
            description: |-
              GerritEntityProvider configuration

              Maps provider id with configuration.
            additionalProperties:
              type: object
              required:
                - host
                - query
              properties:
                host:
                  type: string
                  description: (Required) The host of the Gerrit integration to use.
                query:
                  type: string
                  description: (Required) The query to use for the "List Projects" API call. Used
                    to limit the scope of the projects that the provider tries
                    to ingest.
                branch:
                  type: string
                  description: (Optional) Branch. The branch where the provider will try to find
                    entities. Defaults to "master".
          github:
            anyOf:
              - type: object
                properties:
                  host:
                    type: string
                    description: "(Optional) The hostname of your GitHub Enterprise instance.
                      Default: `github.com`."
                  organization:
                    type: string
                    description: (Required) Name of your organization account/workspace.
                  catalogPath:
                    type: string
                    description: "(Optional) Path where to look for `catalog-info.yaml` files. You
                      can use wildcards - `*` or `**` - to search the path
                      and/or the filename Default: `/catalog-info.yaml`."
                  filters:
                    type: object
                    description: (Optional) Filter configuration.
                    properties:
                      branch:
                        type: string
                        description: (Optional) String used to filter results based on the branch name.
                      repository:
                        type: string
                        description: (Optional) Regular expression used to filter results based on the
                          repository name.
                      allowForks:
                        type: boolean
                        description: (Optional) Allow Forks to be evaluated.
                      topic:
                        type: object
                        description: (Optional) GitHub topic-based filters.
                        properties:
                          include:
                            type: array
                            description: >-
                              (Optional) An array of strings used to filter in
                              results based on their associated GitHub topics.
                              If configured, only repositories with one (or
                              more) topic(s) present in the inclusion filter
                              will be ingested.


                              If `include` and `exclude` are used, `exclude` has higher priority.
                            items:
                              type: string
                          exclude:
                            type: array
                            description: >-
                              (Optional) An array of strings used to filter out
                              results based on their associated GitHub topics.
                              If configured, all repositories _except_ those
                              with one (or more) topics(s) present in the
                              exclusion filter will be ingested.


                              If `include` and `exclude` are used, `exclude` has higher priority.
                            items:
                              type: string
                      visibility:
                        type: array
                        description: (Optional) GitHub repository visibility filter.
                        items:
                          type: string
                          enum:
                            - private
                            - internal
                            - public
                  schedule:
                    $ref: "#/definitions/TaskScheduleDefinitionConfig"
                    description: (Optional) TaskScheduleDefinition for the refresh.
                required:
                  - organization
              - type: object
                additionalProperties:
                  type: object
                  required:
                    - organization
                  properties:
                    host:
                      type: string
                      description: "(Optional) The hostname of your GitHub Enterprise instance.
                        Default: `github.com`."
                    organization:
                      type: string
                      description: (Required) Name of your organization account/workspace.
                    catalogPath:
                      type: string
                      description: "(Optional) Path where to look for `catalog-info.yaml` files. You
                        can use wildcards - `*` or `**` - to search the path
                        and/or the filename Default: `/catalog-info.yaml`."
                    filters:
                      type: object
                      description: (Optional) Filter configuration.
                      properties:
                        branch:
                          type: string
                          description: (Optional) String used to filter results based on the branch name.
                        repository:
                          type: string
                          description: (Optional) Regular expression used to filter results based on the
                            repository name.
                        allowForks:
                          type: boolean
                          description: (Optional) GitHub topic-based filters.
                        topic:
                          type: object
                          description: (Optional) Allow Forks to be evaluated.
                          properties:
                            include:
                              type: array
                              description: >-
                                (Optional) An array of strings used to filter in
                                results based on their associated GitHub topics.
                                If configured, only repositories with one (or
                                more) topic(s) present in the inclusion filter
                                will be ingested.


                                If `include` and `exclude` are used, `exclude` has higher priority.
                              items:
                                type: string
                            exclude:
                              type: array
                              description: >-
                                (Optional) An array of strings used to filter
                                out results based on their associated GitHub
                                topics. If configured, all repositories _except_
                                those with one (or more) topics(s) present in
                                the exclusion filter will be ingested.


                                If `include` and `exclude` are used, `exclude` has higher priority.
                              items:
                                type: string
                        visibility:
                          type: array
                          description: (Optional) GitHub repository visibility filter.
                          items:
                            type: string
                            enum:
                              - private
                              - internal
                              - public
                    schedule:
                      $ref: "#/definitions/TaskScheduleDefinitionConfig"
                      description: (Optional) TaskScheduleDefinition for the refresh.
            description: |-
              GithubEntityProvider configuration

              Uses "default" as default id for the single config variant.
          githubOrg:
            anyOf:
              - type: object
                properties:
                  id:
                    type: string
                    description: A stable id for this provider. Entities from this provider will be
                      associated with this ID, so you should take care not to
                      change it over time since that may lead to orphaned
                      entities and/or conflicts.
                    examples:
                      - ghe
                  githubUrl:
                    type: string
                    description: The target that this provider should consume.
                    examples:
                      - https://mycompany.github.com
                  orgs:
                    type: array
                    description: The list of the GitHub orgs to consume. By default will consume all
                      accessible orgs on the given GitHub instance (support for
                      GitHub App integration only).
                    items:
                      type: string
                  schedule:
                    $ref: "#/definitions/TaskScheduleDefinitionConfig"
                    description: The refresh schedule to use.
                required:
                  - id
                  - githubUrl
                  - schedule
              - type: array
                items:
                  type: object
                  required:
                    - id
                    - githubUrl
                    - schedule
                  properties:
                    id:
                      type: string
                      description: A stable id for this provider. Entities from this provider will be
                        associated with this ID, so you should take care not to
                        change it over time since that may lead to orphaned
                        entities and/or conflicts.
                      examples:
                        - ghe
                    githubUrl:
                      type: string
                      description: The target that this provider should consume.
                      examples:
                        - https://mycompany.github.com
                    orgs:
                      type: array
                      description: The list of the GitHub orgs to consume. By default will consume all
                        accessible orgs on the given GitHub instance (support
                        for GitHub App integration only).
                      items:
                        type: string
                    schedule:
                      $ref: "#/definitions/TaskScheduleDefinitionConfig"
                      description: The refresh schedule to use.
            description: Configuration for catalogModuleGithubOrgEntityProvider
          gcp:
            type: object
            description: GCPCatalogModuleConfig configuration
            properties:
              gke:
                type: object
                required:
                  - parents
                  - schedule
                description: Config for GKE clusters
                properties:
                  parents:
                    type: array
                    description: Locations to list clusters from
                    items:
                      type: string
                  schedule:
                    $ref: "#/definitions/TaskScheduleDefinitionConfig"
                    description: (Optional) TaskScheduleDefinition for the refresh.
          bitbucketCloud:
            anyOf:
              - type: object
                properties:
                  catalogPath:
                    type: string
                    description: (Optional) Path to the catalog file. Default to
                      "/catalog-info.yaml".
                    visibility: frontend
                  workspace:
                    type: string
                    description: (Required) Your workspace.
                    visibility: frontend
                  filters:
                    type: object
                    description: (Optional) Filters applied to discovered catalog files in
                      repositories.
                    visibility: frontend
                    properties:
                      repoSlug:
                        type: string
                        description: (Optional) Regular expression filter for the repository slug.
                        visibility: frontend
                      projectKey:
                        type: string
                        description: (Optional) Regular expression filter for the project key.
                        visibility: frontend
                  schedule:
                    $ref: "#/definitions/TaskScheduleDefinitionConfig"
                    description: (Optional) TaskScheduleDefinition for the discovery.
                required:
                  - workspace
              - type: object
                additionalProperties:
                  type: object
                  required:
                    - workspace
                  properties:
                    catalogPath:
                      type: string
                      description: (Optional) Path to the catalog file. Default to
                        "/catalog-info.yaml".
                      visibility: frontend
                    workspace:
                      type: string
                      description: (Required) Your workspace.
                      visibility: frontend
                    filters:
                      type: object
                      description: (Optional) Filters applied to discovered catalog files in
                        repositories.
                      visibility: frontend
                      properties:
                        repoSlug:
                          type: string
                          description: (Optional) Regular expression filter for the repository slug.
                          visibility: frontend
                        projectKey:
                          type: string
                          description: (Optional) Regular expression filter for the project key.
                          visibility: frontend
                    schedule:
                      $ref: "#/definitions/TaskScheduleDefinitionConfig"
                      description: (Optional) TaskScheduleDefinition for the discovery.
            description: |-
              BitbucketCloudEntityProvider configuration

              Uses "default" as default id for the single config variant.
          microsoftGraphOrg:
            anyOf:
              - type: object
                properties:
                  target:
                    type: string
                    description: The prefix of the target that this matches on, e.g.
                      "https://graph.microsoft.com/v1.0", with no trailing
                      slash.
                  authority:
                    type: string
                    description: |-
                      The auth authority used.

                      Default value "https://login.microsoftonline.com"
                  tenantId:
                    type: string
                    description: The tenant whose org data we are interested in.
                  clientId:
                    type: string
                    description: The OAuth client ID to use for authenticating requests.
                  clientSecret:
                    type: string
                    description: The OAuth client secret to use for authenticating requests.
                    visibility: secret
                  queryMode:
                    type: string
                    description: >-
                      By default, the Microsoft Graph API only provides the
                      basic feature set for querying. Certain features are
                      limited to advanced query capabilities (see
                      https://docs.microsoft.com/en-us/graph/aad-advanced-queries)
                      and need to be enabled.


                      Some features like `$expand` are not available for advanced queries, though.
                  user:
                    type: object
                    properties:
                      expand:
                        type: string
                        description: |-
                          The "expand" argument to apply to users.

                          E.g. "manager".
                      filter:
                        type: string
                        description: |-
                          The filter to apply to extract users.

                          E.g. "accountEnabled eq true and userType eq 'member'"
                  group:
                    type: object
                    properties:
                      expand:
                        type: string
                        description: |-
                          The "expand" argument to apply to groups.

                          E.g. "member".
                      filter:
                        type: string
                        description: >-
                          The filter to apply to extract groups.


                          E.g. "securityEnabled eq false and mailEnabled eq true"
                      search:
                        type: string
                        description: >-
                          The search criteria to apply to extract users by
                          groups memberships.


                          E.g. "\"displayName:-team\"" would only match groups which contain '-team'
                      select:
                        type: array
                        description: |-
                          The fields to be fetched on query.

                          E.g. ["id", "displayName", "description"]
                        items:
                          type: string
                  userGroupMember:
                    type: object
                    properties:
                      filter:
                        type: string
                        description: >-
                          The filter to apply to extract users by groups
                          memberships.


                          E.g. "displayName eq 'Backstage Users'"
                      search:
                        type: string
                        description: >-
                          The search criteria to apply to extract groups.


                          E.g. "\"displayName:-team\"" would only match groups which contain '-team'
                  schedule:
                    $ref: "#/definitions/TaskScheduleDefinitionConfig"
                    description: (Optional) TaskScheduleDefinition for the refresh.
                required:
                  - target
                  - tenantId
              - type: object
                additionalProperties:
                  type: object
                  required:
                    - target
                    - tenantId
                    - clientId
                    - clientSecret
                  properties:
                    target:
                      type: string
                      description: The prefix of the target that this matches on, e.g.
                        "https://graph.microsoft.com/v1.0", with no trailing
                        slash.
                    authority:
                      type: string
                      description: |-
                        The auth authority used.

                        Default value "https://login.microsoftonline.com"
                    tenantId:
                      type: string
                      description: The tenant whose org data we are interested in.
                    clientId:
                      type: string
                      description: The OAuth client ID to use for authenticating requests.
                    clientSecret:
                      type: string
                      description: The OAuth client secret to use for authenticating requests.
                      visibility: secret
                    queryMode:
                      type: string
                      description: >-
                        By default, the Microsoft Graph API only provides the
                        basic feature set for querying. Certain features are
                        limited to advanced query capabilities (see
                        https://docs.microsoft.com/en-us/graph/aad-advanced-queries)
                        and need to be enabled.


                        Some features like `$expand` are not available for advanced queries, though.
                    user:
                      type: object
                      properties:
                        filter:
                          type: string
                          description: >-
                            The filter to apply to extract users.


                            E.g. "accountEnabled eq true and userType eq 'member'"
                    group:
                      type: object
                      properties:
                        filter:
                          type: string
                          description: >-
                            The filter to apply to extract groups.


                            E.g. "securityEnabled eq false and mailEnabled eq true"
                        search:
                          type: string
                          description: >-
                            The search criteria to apply to extract users by
                            groups memberships.


                            E.g. "\"displayName:-team\"" would only match groups which contain '-team'
                        select:
                          type: array
                          description: |-
                            The fields to be fetched on query.

                            E.g. ["id", "displayName", "description"]
                          items:
                            type: string
                    userGroupMember:
                      type: object
                      properties:
                        filter:
                          type: string
                          description: >-
                            The filter to apply to extract users by groups
                            memberships.


                            E.g. "displayName eq 'Backstage Users'"
                        search:
                          type: string
                          description: >-
                            The search criteria to apply to extract groups.


                            E.g. "\"displayName:-team\"" would only match groups which contain '-team'
                    schedule:
                      $ref: "#/definitions/TaskScheduleDefinitionConfig"
                      description: (Optional) TaskScheduleDefinition for the refresh.
            description: MicrosoftGraphOrgEntityProvider configuration.
          gitlab:
            type: object
            description: GitlabDiscoveryEntityProvider configuration
            additionalProperties:
              type: object
              required:
                - host
              properties:
                host:
                  type: string
                  description: (Required) Gitlab's host name.
                group:
                  type: string
                  description: (Optional) Gitlab's group[/subgroup] where the discovery is done.
                    If not defined the whole instance will be scanned.
                branch:
                  type: string
                  description: (Optional) Default branch to read the catalog-info.yaml file. If
                    not set, 'master' will be used.
                entityFilename:
                  type: string
                  description: (Optional) The name used for the catalog file. If not set,
                    'catalog-info.yaml' will be used.
                schedule:
                  $ref: "#/definitions/TaskScheduleDefinitionConfig"
                  description: (Optional) TaskScheduleDefinition for the refresh.
                projectPattern:
                  type: string
                  description: (Optional) RegExp for the Project Name Pattern
                userPattern:
                  type: string
                  description: (Optional) RegExp for the User Name Pattern
                groupPattern:
                  type: string
                  description: (Optional) RegExp for the Group Name Pattern
                skipForkedRepos:
                  type: boolean
                  description: (Optional) Skip forked repository
          puppetdb:
            anyOf:
              - type: object
                properties:
                  baseUrl:
                    type: string
                    description: (Required) The base URL of PuppetDB API instance.
                  query:
                    type: string
                    description: (Optional) PQL query to filter PuppetDB nodes.
                  schedule:
                    $ref: "#/definitions/TaskScheduleDefinition"
                    description: (Optional) Task schedule definition for the refresh.
                required:
                  - baseUrl
              - type: object
                additionalProperties:
                  type: object
                  required:
                    - baseUrl
                  properties:
                    baseUrl:
                      type: string
                      description: (Required) The base URL of PuppetDB API instance.
                    query:
                      type: string
                      description: (Optional) PQL query to filter PuppetDB nodes.
                    schedule:
                      $ref: "#/definitions/TaskScheduleDefinition"
                      description: (Optional) Task schedule definition for the refresh.
            description: PuppetDB Entity Provider configuration. Uses "default" as default
              ID for the single config variant.
      processors:
        type: object
        description: List of processor-specific options and attributes
        properties:
          awsOrganization:
            type: object
            required:
              - provider
            description: AwsOrganizationCloudAccountProcessor configuration
            properties:
              provider:
                type: object
                properties:
                  roleArn:
                    type: string
                    description: The role to be assumed by this processor
          githubMultiOrg:
            type: object
            required:
              - orgs
            description: GithubMultiOrgReaderProcessor configuration
            properties:
              orgs:
                type: array
                description: The configuration parameters for each GitHub org to process.
                items:
                  type: object
                  required:
                    - name
                  properties:
                    name:
                      type: string
                      description: The name of the GitHub org to process.
                    groupNamespace:
                      type: string
                      description: |-
                        The namespace of the group created for this org.

                        Defaults to org name if omitted.
                    userNamespace:
                      type: string
                      description: |-
                        The namespace of the users created from this org.

                        Defaults to empty string if omitted.
          ldapOrg:
            type: object
            required:
              - providers
            description: LdapOrgReaderProcessor configuration
            properties:
              providers:
                type: array
                description: The configuration parameters for each single LDAP provider.
                items:
                  type: object
                  required:
                    - target
                    - users
                    - groups
                  properties:
                    target:
                      type: string
                      description: The prefix of the target that this matches on, e.g.
                        "ldaps://ds.example.net", with no trailing slash.
                    bind:
                      type: object
                      required:
                        - dn
                        - secret
                      description: The settings to use for the bind command. If none are specified,
                        the bind command is not issued.
                      properties:
                        dn:
                          type: string
                          description: >-
                            The DN of the user to auth as.


                            E.g. "uid=ldap-robot,ou=robots,ou=example,dc=example,dc=net"
                        secret:
                          type: string
                          description: The secret of the user to auth as (its password).
                          visibility: secret
                    tls:
                      type: object
                      description: TLS settings
                      properties:
                        rejectUnauthorized:
                          type: boolean
                    users:
                      type: object
                      required:
                        - dn
                        - options
                      description: The settings that govern the reading and interpretation of users.
                      properties:
                        dn:
                          type: string
                          description: |-
                            The DN under which users are stored.

                            E.g. "ou=people,ou=example,dc=example,dc=net"
                        options:
                          type: object
                          description: >-
                            The search options to use. The default is scope
                            "one" and attributes "*" and "+".


                            It is common to want to specify a filter, to narrow down the set of matching items.
                          properties:
                            scope:
                              type: string
                              enum:
                                - base
                                - one
                                - sub
                            filter:
                              type: string
                            attributes:
                              anyOf:
                                - type: string
                                - type: array
                                  items:
                                    type: string
                            sizeLimit:
                              type: number
                            timeLimit:
                              type: number
                            derefAliases:
                              type: number
                            typesOnly:
                              type: boolean
                            paged:
                              anyOf:
                                - type: boolean
                                - type: object
                                  properties:
                                    pageSize:
                                      type: number
                                    pagePause:
                                      type: boolean
                        set:
                          type: object
                          description: >-
                            JSON paths (on a.b.c form) and hard coded values to
                            set on those paths.


                            This can be useful for example if you want to hard code a namespace or similar on the generated entities.
                        map:
                          type: object
                          description: Mappings from well known entity fields, to LDAP attribute names
                          properties:
                            rdn:
                              type: string
                              description: The name of the attribute that holds the relative distinguished
                                name of each entry. Defaults to "uid".
                            name:
                              type: string
                              description: The name of the attribute that shall be used for the value of the
                                metadata.name field of the entity. Defaults to
                                "uid".
                            description:
                              type: string
                              description: The name of the attribute that shall be used for the value of the
                                metadata.description field of the entity.
                            displayName:
                              type: string
                              description: The name of the attribute that shall be used for the value of the
                                spec.profile.displayName field of the entity.
                                Defaults to "cn".
                            email:
                              type: string
                              description: The name of the attribute that shall be used for the value of the
                                spec.profile.email field of the entity. Defaults
                                to "mail".
                            picture:
                              type: string
                              description: The name of the attribute that shall be used for the value of the
                                spec.profile.picture field of the entity.
                            memberOf:
                              type: string
                              description: The name of the attribute that shall be used for the values of the
                                spec.memberOf field of the entity. Defaults to
                                "memberOf".
                    groups:
                      type: object
                      required:
                        - dn
                        - options
                      description: The settings that govern the reading and interpretation of groups.
                      properties:
                        dn:
                          type: string
                          description: |-
                            The DN under which groups are stored.

                            E.g. "ou=people,ou=example,dc=example,dc=net"
                        options:
                          type: object
                          description: >-
                            The search options to use. The default is scope
                            "one" and attributes "*" and "+".


                            It is common to want to specify a filter, to narrow down the set of matching items.
                          properties:
                            scope:
                              type: string
                              enum:
                                - base
                                - one
                                - sub
                            filter:
                              type: string
                            attributes:
                              anyOf:
                                - type: string
                                - type: array
                                  items:
                                    type: string
                            sizeLimit:
                              type: number
                            timeLimit:
                              type: number
                            derefAliases:
                              type: number
                            typesOnly:
                              type: boolean
                            paged:
                              anyOf:
                                - type: boolean
                                - type: object
                                  properties:
                                    pageSize:
                                      type: number
                                    pagePause:
                                      type: boolean
                        set:
                          type: object
                          description: >-
                            JSON paths (on a.b.c form) and hard coded values to
                            set on those paths.


                            This can be useful for example if you want to hard code a namespace or similar on the generated entities.
                        map:
                          type: object
                          description: Mappings from well known entity fields, to LDAP attribute names
                          properties:
                            rdn:
                              type: string
                              description: The name of the attribute that holds the relative distinguished
                                name of each entry. Defaults to "cn".
                            name:
                              type: string
                              description: The name of the attribute that shall be used for the value of the
                                metadata.name field of the entity. Defaults to
                                "cn".
                            description:
                              type: string
                              description: The name of the attribute that shall be used for the value of the
                                metadata.description field of the entity.
                                Defaults to "description".
                            type:
                              type: string
                              description: The name of the attribute that shall be used for the value of the
                                spec.type field of the entity. Defaults to
                                "groupType".
                            displayName:
                              type: string
                              description: The name of the attribute that shall be used for the value of the
                                spec.profile.displayName field of the entity.
                                Defaults to "cn".
                            email:
                              type: string
                              description: The name of the attribute that shall be used for the value of the
                                spec.profile.email field of the entity.
                            picture:
                              type: string
                              description: The name of the attribute that shall be used for the value of the
                                spec.profile.picture field of the entity.
                            memberOf:
                              type: string
                              description: The name of the attribute that shall be used for the values of the
                                spec.parent field of the entity. Defaults to
                                "memberOf".
                            members:
                              type: string
                              description: The name of the attribute that shall be used for the values of the
                                spec.children field of the entity. Defaults to
                                "member".
          microsoftGraphOrg:
            type: object
            required:
              - providers
            description: MicrosoftGraphOrgReaderProcessor configuration
            deprecated: Use `catalog.providers.microsoftGraphOrg` instead.
            properties:
              providers:
                type: array
                description: The configuration parameters for each single Microsoft Graph
                  provider.
                items:
                  type: object
                  required:
                    - target
                    - tenantId
                  properties:
                    target:
                      type: string
                      description: The prefix of the target that this matches on, e.g.
                        "https://graph.microsoft.com/v1.0", with no trailing
                        slash.
                    authority:
                      type: string
                      description: |-
                        The auth authority used.

                        Default value "https://login.microsoftonline.com"
                    tenantId:
                      type: string
                      description: The tenant whose org data we are interested in.
                    clientId:
                      type: string
                      description: The OAuth client ID to use for authenticating requests.
                    clientSecret:
                      type: string
                      description: The OAuth client secret to use for authenticating requests.
                      visibility: secret
                    userFilter:
                      type: string
                      description: |-
                        The filter to apply to extract users.

                        E.g. "accountEnabled eq true and userType eq 'member'"
                    groupFilter:
                      type: string
                      description: |-
                        The filter to apply to extract groups.

                        E.g. "securityEnabled eq false and mailEnabled eq true"
                    userSelect:
                      type: array
                      description: |-
                        The fields to be fetched on query.

                        E.g. ["id", "displayName", "description"]
                      items:
                        type: string
                    groupSearch:
                      type: string
                      description: >-
                        The search criteria to apply to extract users by groups
                        memberships.


                        E.g. "\"displayName:-team\"" would only match groups which contain '-team'
                    groupSelect:
                      type: array
                      description: |-
                        The fields to be fetched on query.

                        E.g. ["id", "displayName", "description"]
                      items:
                        type: string
                    userGroupMemberFilter:
                      type: string
                      description: >-
                        The filter to apply to extract users by groups
                        memberships.


                        E.g. "displayName eq 'Backstage Users'"
                    userGroupMemberSearch:
                      type: string
                      description: >-
                        The search criteria to apply to extract groups.


                        E.g. "\"displayName:-team\"" would only match groups which contain '-team'
      import:
        type: object
        description: List of import flow specific options and attributes
        properties:
          entityFilename:
            type: string
            description: Catalog entity descriptor filename, defaults to "catalog-info.yaml"
            visibility: frontend
          pullRequestBranchName:
            type: string
            description: 'A branch name used in pull request when registering existing
              component via UI Valid git refname required, see:
              https://git-scm.com/docs/git-check-ref-format Defaults to
              "backstage-integration"'
            visibility: frontend
  ldap:
    type: object
    required:
      - providers
    description: LdapOrgEntityProvider / LdapOrgReaderProcessor configuration
    properties:
      providers:
        type: array
        description: The configuration parameters for each single LDAP provider.
        items:
          type: object
          required:
            - target
            - users
            - groups
          properties:
            target:
              type: string
              description: The prefix of the target that this matches on, e.g.
                "ldaps://ds.example.net", with no trailing slash.
            bind:
              type: object
              required:
                - dn
                - secret
              description: The settings to use for the bind command. If none are specified,
                the bind command is not issued.
              properties:
                dn:
                  type: string
                  description: |-
                    The DN of the user to auth as.

                    E.g. "uid=ldap-robot,ou=robots,ou=example,dc=example,dc=net"
                secret:
                  type: string
                  description: The secret of the user to auth as (its password).
                  visibility: secret
            tls:
              type: object
              description: TLS settings
              properties:
                rejectUnauthorized:
                  type: boolean
            users:
              type: object
              required:
                - dn
                - options
              description: The settings that govern the reading and interpretation of users.
              properties:
                dn:
                  type: string
                  description: |-
                    The DN under which users are stored.

                    E.g. "ou=people,ou=example,dc=example,dc=net"
                options:
                  type: object
                  description: >-
                    The search options to use. The default is scope "one" and
                    attributes "*" and "+".


                    It is common to want to specify a filter, to narrow down the set of matching items.
                  properties:
                    scope:
                      type: string
                      enum:
                        - base
                        - one
                        - sub
                    filter:
                      type: string
                    attributes:
                      anyOf:
                        - type: string
                        - type: array
                          items:
                            type: string
                    sizeLimit:
                      type: number
                    timeLimit:
                      type: number
                    derefAliases:
                      type: number
                    typesOnly:
                      type: boolean
                    paged:
                      anyOf:
                        - type: boolean
                        - type: object
                          properties:
                            pageSize:
                              type: number
                            pagePause:
                              type: boolean
                set:
                  type: object
                  description: >-
                    JSON paths (on a.b.c form) and hard coded values to set on
                    those paths.


                    This can be useful for example if you want to hard code a namespace or similar on the generated entities.
                map:
                  type: object
                  description: Mappings from well known entity fields, to LDAP attribute names
                  properties:
                    rdn:
                      type: string
                      description: The name of the attribute that holds the relative distinguished
                        name of each entry. Defaults to "uid".
                    name:
                      type: string
                      description: The name of the attribute that shall be used for the value of the
                        metadata.name field of the entity. Defaults to "uid".
                    description:
                      type: string
                      description: The name of the attribute that shall be used for the value of the
                        metadata.description field of the entity.
                    displayName:
                      type: string
                      description: The name of the attribute that shall be used for the value of the
                        spec.profile.displayName field of the entity. Defaults
                        to "cn".
                    email:
                      type: string
                      description: The name of the attribute that shall be used for the value of the
                        spec.profile.email field of the entity. Defaults to
                        "mail".
                    picture:
                      type: string
                      description: The name of the attribute that shall be used for the value of the
                        spec.profile.picture field of the entity.
                    memberOf:
                      type: string
                      description: The name of the attribute that shall be used for the values of the
                        spec.memberOf field of the entity. Defaults to
                        "memberOf".
            groups:
              type: object
              required:
                - dn
                - options
              description: The settings that govern the reading and interpretation of groups.
              properties:
                dn:
                  type: string
                  description: |-
                    The DN under which groups are stored.

                    E.g. "ou=people,ou=example,dc=example,dc=net"
                options:
                  type: object
                  description: >-
                    The search options to use. The default is scope "one" and
                    attributes "*" and "+".


                    It is common to want to specify a filter, to narrow down the set of matching items.
                  properties:
                    scope:
                      type: string
                      enum:
                        - base
                        - one
                        - sub
                    filter:
                      type: string
                    attributes:
                      anyOf:
                        - type: string
                        - type: array
                          items:
                            type: string
                    sizeLimit:
                      type: number
                    timeLimit:
                      type: number
                    derefAliases:
                      type: number
                    typesOnly:
                      type: boolean
                    paged:
                      anyOf:
                        - type: boolean
                        - type: object
                          properties:
                            pageSize:
                              type: number
                            pagePause:
                              type: boolean
                set:
                  type: object
                  description: >-
                    JSON paths (on a.b.c form) and hard coded values to set on
                    those paths.


                    This can be useful for example if you want to hard code a namespace or similar on the generated entities.
                map:
                  type: object
                  description: Mappings from well known entity fields, to LDAP attribute names
                  properties:
                    rdn:
                      type: string
                      description: The name of the attribute that holds the relative distinguished
                        name of each entry. Defaults to "cn".
                    name:
                      type: string
                      description: The name of the attribute that shall be used for the value of the
                        metadata.name field of the entity. Defaults to "cn".
                    description:
                      type: string
                      description: The name of the attribute that shall be used for the value of the
                        metadata.description field of the entity. Defaults to
                        "description".
                    type:
                      type: string
                      description: The name of the attribute that shall be used for the value of the
                        spec.type field of the entity. Defaults to "groupType".
                    displayName:
                      type: string
                      description: The name of the attribute that shall be used for the value of the
                        spec.profile.displayName field of the entity. Defaults
                        to "cn".
                    email:
                      type: string
                      description: The name of the attribute that shall be used for the value of the
                        spec.profile.email field of the entity.
                    picture:
                      type: string
                      description: The name of the attribute that shall be used for the value of the
                        spec.profile.picture field of the entity.
                    memberOf:
                      type: string
                      description: The name of the attribute that shall be used for the values of the
                        spec.parent field of the entity. Defaults to "memberOf".
                    members:
                      type: string
                      description: The name of the attribute that shall be used for the values of the
                        spec.children field of the entity. Defaults to "member".
  costInsights:
    type: object
    required:
      - engineerCost
    properties:
      engineerCost:
        type: number
        visibility: frontend
      engineerThreshold:
        type: number
        visibility: frontend
      hideTrendLine:
        type: boolean
        visibility: frontend
      baseCurrency:
        type: object
        visibility: frontend
        properties:
          locale:
            type: string
            visibility: frontend
          options:
            type: object
            properties:
              localeMatcher:
                type: string
                visibility: frontend
              style:
                type: string
                visibility: frontend
              currency:
                type: string
                visibility: frontend
              currencySign:
                type: string
                visibility: frontend
              useGrouping:
                type: boolean
                visibility: frontend
              minimumIntegerDigits:
                type: number
                visibility: frontend
              minimumFractionDigits:
                type: number
                visibility: frontend
              maximumFractionDigits:
                type: number
                visibility: frontend
              minimumSignificantDigits:
                type: number
                visibility: frontend
              maximumSignificantDigits:
                type: number
                visibility: frontend
      products:
        type: object
        additionalProperties:
          type: object
          required:
            - name
          properties:
            name:
              type: string
              visibility: frontend
            icon:
              type: string
              enum:
                - compute
                - data
                - database
                - storage
                - search
                - ml
              visibility: frontend
      metrics:
        type: object
        additionalProperties:
          type: object
          required:
            - name
          properties:
            name:
              type: string
              visibility: frontend
            default:
              type: boolean
              visibility: frontend
      currencies:
        type: object
        additionalProperties:
          type: object
          required:
            - label
            - unit
          properties:
            label:
              type: string
              visibility: frontend
            unit:
              type: string
              visibility: frontend
            kind:
              type: string
              visibility: frontend
            prefix:
              type: string
              visibility: frontend
            rate:
              type: number
              visibility: frontend
            default:
              type: boolean
              visibility: frontend
  dynatrace:
    type: object
    required:
      - baseUrl
    description: dynatrace config
    visibility: frontend
    properties:
      baseUrl:
        type: string
        description: base url for links
        visibility: frontend
  codescene:
    type: object
    required:
      - baseUrl
    description: Configuration options for the CodeScene plugin
    properties:
      baseUrl:
        type: string
        description: The base url of the CodeScene installation.
        visibility: frontend
  devTools:
    type: object
    description: DevTools configuration.
    properties:
      externalDependencies:
        type: object
        description: External dependency configuration.
        properties:
          endpoints:
            type: array
            description: The list of endpoints to check.
            items:
              type: object
              required:
                - name
                - type
                - target
              properties:
                name:
                  type: string
                  description: The name of the endpoint.
                type:
                  type: string
                  description: Type of check to perform; currently fetch or ping
                target:
                  type: string
                  description: The target of the endpoint; currently either a URL for fetch or
                    server name for ping.
      info:
        type: object
        description: Info configuration
        properties:
          packagePrefixes:
            type: array
            description: A list of package prefixes that DevTools will use for filtering all
              available dependencies (default is ["@backstage"])
            items:
              type: string
  events:
    type: object
    properties:
      modules:
        type: object
        properties:
          awsSqs:
            type: object
            description: events-backend-module-aws-sqs plugin configuration.
            properties:
              awsSqsConsumingEventPublisher:
                type: object
                required:
                  - topics
                description: Configuration for AwsSqsConsumingEventPublisher.
                properties:
                  topics:
                    type: object
                    description: Contains a record per topic for which an AWS SQS queue should be
                      used as source of events.
                    additionalProperties:
                      type: object
                      required:
                        - queue
                        - timeout
                        - waitTimeAfterEmptyReceive
                      properties:
                        queue:
                          type: object
                          required:
                            - region
                            - url
                            - visibilityTimeout
                            - waitTime
                          description: (Required) Queue-related configuration.
                          properties:
                            region:
                              type: string
                              description: (Required) The region of the AWS SQS queue.
                            url:
                              type: string
                              description: (Required) The absolute URL for the AWS SQS queue to be used.
                            visibilityTimeout:
                              $ref: "#/definitions/HumanDuration"
                              description: (Optional) Visibility timeout for messages in flight.
                            waitTime:
                              $ref: "#/definitions/HumanDuration"
                              description: "(Optional) Wait time when polling for available messages. Default:
                                20 seconds."
                        timeout:
                          $ref: "#/definitions/HumanDuration"
                          description: >-
                            (Optional) Timeout for the task execution which
                            includes polling for messages and publishing the
                            events to the event broker and the wait time after
                            empty receives.


                            Must be greater than `queue.waitTime` + `waitTimeAfterEmptyReceive`.
                        waitTimeAfterEmptyReceive:
                          $ref: "#/definitions/HumanDuration"
                          description: "(Optional) Wait time before polling again if no message was
                            received. Default: 1 minute."
          github:
            type: object
            description: events-backend-module-github plugin configuration.
            properties:
              webhookSecret:
                type: string
                description: >-
                  Secret token for webhook requests used to verify signatures.


                  See https://docs.github.com/en/developers/webhooks-and-events/webhooks/securing-your-webhooks for more details.
                visibility: secret
          gitlab:
            type: object
            description: events-backend-module-gitlab plugin configuration.
            properties:
              webhookSecret:
                type: string
                description: >-
                  Secret token for webhook requests used to verify tokens.


                  See https://docs.gitlab.com/ee/user/project/integrations/webhooks.html#validate-payloads-by-using-a-secret-token for more details.
                visibility: secret
      http:
        type: object
        properties:
          topics:
            type: array
            description: Topics for which a route has to be registered at which we can
              receive events via HTTP POST requests (i.e. received from
              webhooks).
            items:
              type: string
  explore:
    type: object
    properties:
      tools:
        type: array
        description: Tools to be used for the explore tool provider.
        items:
          type: object
          required:
            - title
            - url
            - image
          properties:
            title:
              type: string
            description:
              type: string
            url:
              type: string
            image:
              type: string
            tags:
              type: array
              items:
                type: string
            lifecycle:
              type: string
  ilert:
    type: object
    required:
      - baseUrl
    properties:
      baseUrl:
        type: string
        description: "Domain used by users to access iLert web UI. Example:
          https://my-app.ilert.com/"
        visibility: frontend
      proxyPath:
        type: string
        description: Path to use for requests via the proxy, defaults to /ilert/api
        visibility: frontend
  jenkins:
    type: object
    properties:
      baseUrl:
        type: string
        description: Default instance baseUrl, can be specified on a named instance
          called "default"
      username:
        type: string
        description: Default instance username, can be specified on a named instance
          called "default"
      apiKey:
        type: string
        description: Default Instance apiKey, can be specified on a named instance
          called "default"
        visibility: secret
      instances:
        type: array
        items:
          type: object
          required:
            - name
            - baseUrl
            - username
            - apiKey
          properties:
            name:
              type: string
              description: >-
                Name of the instance, this will be used in an annotation on
                catalog entities to refer to jobs on this instance.


                Use a name of "default" to specify the jenkins instance details if the annotation doesn't explicitly name an instance.
            baseUrl:
              type: string
            username:
              type: string
            apiKey:
              type: string
              visibility: secret
            extraRequestHeaders:
              type: object
              additionalProperties:
                anyOf:
                  - type: string
                  - not:
                      anyOf:
                        - {}
              properties:
                Authorization:
                  type: string
                  visibility: secret
                authorization:
                  type: string
                  visibility: secret
  home:
    type: object
    properties:
      topVisits:
        type: object
        description: Top visited plugin
        visibility: frontend
        properties:
          filterBy:
            type: array
            description: Filter By config
            visibility: frontend
            items:
              type: object
              required:
                - field
                - operator
                - value
              properties:
                field:
                  type: string
                  visibility: frontend
                operator:
                  type: string
                  visibility: frontend
                value:
                  type:
                    - string
                    - number
                  visibility: frontend
      recentVisits:
        type: object
        description: Recent visited plugin
        visibility: frontend
        properties:
          filterBy:
            type: array
            description: Filter By config
            visibility: frontend
            items:
              type: object
              required:
                - field
                - operator
                - value
              properties:
                field:
                  type: string
                  visibility: frontend
                operator:
                  type: string
                  visibility: frontend
                value:
                  type:
                    - string
                    - number
                  visibility: frontend
  fossa:
    type: object
    properties:
      organizationId:
        type: string
        description: The organization id in fossa.
        visibility: frontend
      externalLinkBaseUrl:
        type: string
        description: The base url to use for external links (from Backstage to Fossa).
        visibility: frontend
  kafka:
    type: object
    required:
      - clientId
      - clusters
    properties:
      clientId:
        type: string
        description: Client ID used to Backstage uses to identify when connecting to the
          Kafka cluster.
      clusters:
        type: array
        items:
          type: object
          required:
            - brokers
            - name
          properties:
            name:
              type: string
              description: Cluster name
              visibility: frontend
            brokers:
              type: array
              description: List of brokers in the Kafka cluster to connect to.
              items:
                type: string
            ssl:
              anyOf:
                - type: object
                  properties:
                    ca:
                      type: array
                      items:
                        type: string
                    key:
                      type: string
                      visibility: secret
                    cert:
                      type: string
                    rejectUnauthorized:
                      type: boolean
                - type: boolean
              description: Optional SSL connection parameters to connect to the cluster.
                Passed directly to Node tls.connect. See
                https://nodejs.org/dist/latest-v8.x/docs/api/tls.html#tls_tls_createsecurecontext_options
            sasl:
              type: object
              required:
                - mechanism
                - username
                - password
              description: Optional SASL connection parameters.
              properties:
                mechanism:
                  type: string
                  enum:
                    - plain
                    - scram-sha-256
                    - scram-sha-512
                username:
                  type: string
                password:
                  type: string
                  visibility: secret
            dashboardUrl:
              type: string
              description: Cluster dashboard url
              visibility: frontend
  kubernetes:
    type: object
    required:
      - serviceLocatorMethod
      - clusterLocatorMethods
    properties:
      objectTypes:
        type: array
        items:
          type: string
          enum:
            - pods
            - services
            - configmaps
            - deployments
            - limitranges
            - replicasets
            - horizontalpodautoscalers
            - jobs
            - cronjobs
            - ingresses
            - customresources
            - statefulsets
            - daemonsets
      serviceLocatorMethod:
        type: object
        required:
          - type
        properties:
          type:
            type: string
            const: multiTenant
      clusterLocatorMethods:
        type: array
        items:
          anyOf:
            - type: object
              properties:
                type:
                  type: string
                  const: config
                  visibility: frontend
                clusters:
                  type: array
                  items:
                    type: object
                    required:
                      - url
                      - name
                    properties:
                      url:
                        type: string
                        visibility: frontend
                      name:
                        type: string
                        visibility: frontend
                      serviceAccountToken:
                        type: string
                        visibility: secret
                      authProvider:
                        type: string
                        enum:
                          - aks
                          - aws
                          - azure
                          - google
                          - googleServiceAccount
                          - oidc
                          - serviceAccount
                        visibility: frontend
                      authMetadata:
                        type: object
                        visibility: secret
                      oidcTokenProvider:
                        type: string
                        visibility: frontend
                      skipTLSVerify:
                        type: boolean
                        visibility: frontend
                      skipMetricsLookup:
                        type: boolean
                        visibility: frontend
                      caData:
                        type: string
                        visibility: secret
                      caFile:
                        type: string
                        visibility: secret
              required:
                - type
                - clusters
            - type: object
              properties:
                type:
                  type: string
                  const: catalog
                  visibility: frontend
              required:
                - type
            - type: object
              properties:
                type:
                  type: string
                  const: localKubectlProxy
                  visibility: frontend
              required:
                - type
            - type: object
              properties:
                type:
                  type: string
                  const: gke
                  visibility: frontend
                projectId:
                  type: string
                  visibility: frontend
                region:
                  type: string
                  visibility: frontend
                authProvider:
                  type: string
                  visibility: frontend
                skipTLSVerify:
                  type: boolean
                  visibility: frontend
                skipMetricsLookup:
                  type: boolean
                  visibility: frontend
              required:
                - type
                - projectId
      customResources:
        type: array
        items:
          type: object
          required:
            - group
            - apiVersion
            - plural
          properties:
            group:
              type: string
            apiVersion:
              type: string
            plural:
              type: string
      apiVersionOverrides:
        type: object
        description: (Optional) API Version Overrides If set, the specified api version
          will be used to make requests for the corresponding object. If running
          a legacy Kubernetes version, you may use this to override the default
          api versions that are not supported in your cluster.
        properties:
          pods:
            type: string
          services:
            type: string
          configmaps:
            type: string
          deployments:
            type: string
          limitranges:
            type: string
          replicasets:
            type: string
          horizontalpodautoscalers:
            type: string
          jobs:
            type: string
          cronjobs:
            type: string
          ingresses:
            type: string
          customresources:
            type: string
          statefulsets:
            type: string
          daemonsets:
            type: string
      podExecTerminal:
        type: object
        description: Pod Exec Terminal config
        properties:
          enabled:
            type: boolean
            description: Enable `PodExecTerminal` UI feature
            visibility: frontend
  gocd:
    type: object
    required:
      - baseUrl
    description: Configurations for the GoCD plugin
    properties:
      baseUrl:
        type: string
        description: The base url of the GoCD installation.
        visibility: frontend
  octopusdeploy:
    type: object
    properties:
      webBaseUrl:
        type: string
        description: Frontend Web UI Base URL for deep links to UI
        visibility: frontend
  opencost:
    type: object
    required:
      - baseUrl
    description: Configurations for the OpenCost plugin
    visibility: frontend
    properties:
      baseUrl:
        type: string
        description: The base URL for the OpenCost API
        visibility: frontend
  pagerDuty:
    type: object
    description: Configuration for the PagerDuty plugin
    visibility: frontend
    properties:
      eventsBaseUrl:
        type: string
        description: Optional Events Base URL to override the default.
        visibility: frontend
  periskop:
    type: object
    required:
      - instances
    description: Configuration options for the periskop plugin
    properties:
      instances:
        type: array
        description: Integration configuration for the periskop servers
        visibility: frontend
        items:
          type: object
          required:
            - name
            - url
          properties:
            name:
              type: string
              description: The name of the given Periskop instance
              visibility: frontend
            url:
              type: string
              description: The hostname of the given Periskop instance
              visibility: frontend
  playlist:
    type: object
    properties:
      title:
        type: string
        description: (Optional) The title that will shown in the UI; Defaults
          to`Playlist` if undefined.
        visibility: frontend
  proxy:
    type: object
    properties:
      skipInvalidProxies:
        type: boolean
        description: Rather than failing to start up, the proxy backend will instead
          just warn on invalid endpoints.
      reviveConsumedRequestBodies:
        type: boolean
        description: Revive request bodies that have already been consumed by earlier
          middleware.
      endpoints:
        type: object
        description: A list of forwarding-proxies. Each key is a route to match, below
          the prefix that the proxy plugin is mounted on. It must start with a
          '/'.
        additionalProperties:
          anyOf:
            - type: string
            - type: object
              properties:
                target:
                  type: string
                  description: Target of the proxy. Url string to be parsed with the url module.
                headers:
                  type: object
                  description: Object with extra headers to be added to target requests.
                  additionalProperties:
                    anyOf:
                      - type: string
                      - not:
                          anyOf:
                            - {}
                  properties:
                    Authorization:
                      type: string
                      visibility: secret
                    authorization:
                      type: string
                      visibility: secret
                    X-Api-Key:
                      type: string
                      visibility: secret
                    x-api-key:
                      type: string
                      visibility: secret
                changeOrigin:
                  type: boolean
                  description: "Changes the origin of the host header to the target URL. Default:
                    true."
                pathRewrite:
                  type: object
                  description: Rewrite target's url path. Object-keys will be used as RegExp to
                    match paths. If pathRewrite is not specified, it is set to a
                    single rewrite that removes the entire prefix and route.
                  additionalProperties:
                    type: string
                allowedMethods:
                  type: array
                  description: "Limit the forwarded HTTP methods, for example allowedMethods:
                    ['GET'] to enforce read-only access."
                  items:
                    type: string
                allowedHeaders:
                  type: array
                  description: Limit the forwarded HTTP methods. By default, only the headers that
                    are considered safe for CORS and headers that are set by the
                    proxy will be forwarded.
                  items:
                    type: string
              required:
                - target
  linguist:
    type: object
    description: Configuration options for the linguist plugin
    properties:
      schedule:
        $ref: "#/definitions/TaskScheduleDefinition"
      batchSize:
        type: number
        default: 20
      useSourceLocation:
        type: boolean
        default: false
      age:
        $ref: "#/definitions/HumanDuration"
        description: Refresh generated language breakdown
      kind:
        type: array
        default:
          - API
          - Component
          - Template
        items:
          type: string
      linguistJsOptions:
        $ref: "#/definitions/Options"
        description: "[linguist-js](https://www.npmjs.com/package/linguist-js) options"
      tagsProcessor:
        type: object
        description: Options for the tags processor
        properties:
          bytesThreshold:
            type: number
            description: Determines how many bytes of a language should be in a repo for it
              to be added as an entity tag. Defaults to 0.
          languageTypes:
            type: array
            description: The types of linguist languages that should be processed. Can be
              any of "programming", "data", "markup", "prose". Defaults to
              ["programming"].
            items:
              type: string
          languageMap:
            type: object
            description: A custom mapping of linguist languages to how they should be
              rendered as entity tags. If a language is mapped to '' it will not
              be included as a tag.
            additionalProperties:
              anyOf:
                - type: string
                - not:
                    anyOf:
                      - {}
          cacheTTL:
            $ref: "#/definitions/HumanDuration"
            description: How long to cache entity languages for in memory. Used to avoid
              constant db hits during processing. Defaults to 30 minutes.
  rollbar:
    type: object
    description: Configuration options for the rollbar plugin
    required:
      - accountToken
    properties:
      organization:
        type: string
        description: The Rollbar organization name. This can be omitted by using the
          `rollbar.com/project-slug` annotation.
        visibility: frontend
      accountToken:
        type: string
        description: The authentication token for accessing the Rollbar API
        visibility: secret
  permission:
    type: object
    description: Configuration options for Backstage permissions and authorization
    properties:
      enabled:
        type: boolean
        description: Whether authorization is enabled in Backstage. Defaults to false,
          which means authorization requests will be automatically allowed
          without invoking the authorization policy.
        visibility: frontend
  confluence:
    type: object
    required:
      - baseUrl
      - auth
    description: Configuration options for the Confluence to Markdown action
    properties:
      baseUrl:
        type: string
        description: The base URL for accessing the Confluence API
      auth:
        type: object
        required:
          - type
        properties:
          type:
            type: string
            enum:
              - basic
              - bearer
              - userpass
            description: Authentication method - basic, bearer, username/password
          token:
            type: string
            description: Token used for the basic and bearer auth methods
            visibility: secret
          email:
            type: string
            description: Email used with the token for the basic auth method
            visibility: secret
          username:
            type: string
            description: Username used with the Username/Password auth method
            visibility: secret
          password:
            type: string
            description: Password used with the Username/Password auth method
            visibility: secret
  search:
    type: object
    description: Configuration options for the search plugin
    properties:
      query:
        type: object
        description: An object representing the default search query configuration. By
          configuring and modifying the values of this object, you can customize
          the default values of the search queries and define how it behaves by
          default.
        properties:
          pageLimit:
            type: number
            enum:
              - 10
              - 25
              - 50
              - 100
            description: A number indicating the maximum number of results to be returned
              per page during pagination.
            visibility: frontend
      collators:
        type: object
        properties:
          catalog:
            type: object
            description: Configuration options for
              `@backstage/plugin-search-backend-module-catalog`
            properties:
              locationTemplate:
                type: string
                description: >-
                  A templating string with placeholders, to form the final
                  location of the entity.


                  Defaults to '/catalog/:namespace/:kind/:name'
              filter:
                type: object
                description: >-
                  A filter expression passed to the catalog client, to select
                  what entities to collate.


                  Defaults to no filter, ie indexing all entities.
              batchSize:
                type: number
                description: >-
                  The number of entities to process at a time. Keep this at a
                  reasonable number to avoid overloading either the catalog or
                  the search backend.


                  Defaults to 500
              schedule:
                $ref: "#/definitions/TaskScheduleDefinitionConfig"
                description: The schedule for how often to run the collation job.
          techdocs:
            type: object
            description: Configuration options for
              `@backstage/plugin-search-backend-module-techdocs`
            properties:
              schedule:
                $ref: "#/definitions/TaskScheduleDefinitionConfig"
                description: The schedule for how often to run the collation job.
              locationTemplate:
                type: string
                description: >-
                  A templating string with placeholders, to form the final
                  location of the entity.


                  Defaults to `'/docs/:namespace/:kind/:name/:path'`.
              parallelismLimit:
                type: number
                description: >-
                  An abstract value that controls the concurrency level of the
                  collation process. Increasing this value will both increase
                  the number of entities fetched at a time from the catalog, as
                  well as how many things are being processed concurrently.


                  Defaults to `10`.
              legacyPathCasing:
                type: boolean
                description: Defaults to `false`.
          explore:
            type: object
            description: Configuration options for
              `@backstage/plugin-search-backend-module-explore`
            properties:
              schedule:
                $ref: "#/definitions/TaskScheduleDefinitionConfig"
                description: The schedule for how often to run the collation job.
      maxPageLimit:
        type: number
        description: Sets the maximum max page limit size. Defaults to 100.
      maxTermLength:
        type: number
        description: Sets the maximum term length for the search string. Defaults to 100.
      permissions:
        type: object
        description: Options related to the search integration with the Backstage
          permissions system
        properties:
          queryLatencyBudgetMs:
            type: number
            description: >-
              Limits the amount of time the search backend will spend retrieving
              and authorizing results from the search engine when permissions
              are enabled. When the latency of the query endpoint reaches this
              threshold, the results obtained up until that point will be
              returned, even if the page is incomplete.


              This limit is only expected to be hit for broad queries from users with extremely restrictive visibility, or for very high page offsets.
            default: 1000
      pg:
        type: object
        description: Options for PG
        properties:
          highlightOptions:
            type: object
            description: Options for configuring highlight settings See
              https://www.postgresql.org/docs/current/textsearch-controls.html#TEXTSEARCH-HEADLINE
            properties:
              useHighlight:
                type: boolean
                description: Used to enable to disable the highlight feature. The default value
                  is true
              maxWords:
                type: number
                description: Used to set the longest headlines to output. The default value is
                  35.
              minWords:
                type: number
                description: Used to set the shortest headlines to output. The default value is
                  15.
              shortWord:
                type: number
                description: Words of this length or less will be dropped at the start and end
                  of a headline, unless they are query terms. The default value
                  of three (3) eliminates common English articles.
              highlightAll:
                type: boolean
                description: If true the whole document will be used as the headline, ignoring
                  the preceding three parameters. The default is false.
              maxFragments:
                type: number
                description: Maximum number of text fragments to display. The default value of
                  zero selects a non-fragment-based headline generation method.
                  A value greater than zero selects fragment-based headline
                  generation (see the linked documentation above for more
                  details).
              fragmentDelimiter:
                type: string
                description: Delimiter string used to concatenate fragments. Defaults to " ...
                  ".
          indexerBatchSize:
            type: number
            description: Batch size to use when indexing
      elasticsearch:
        type: object
        description: Options for ElasticSearch
        properties:
          batchSize:
            type: number
            description: Batch size for elastic search indexing tasks. Defaults to 1000.
          highlightOptions:
            type: object
            description: Options for configuring highlight settings See
              https://www.elastic.co/guide/en/elasticsearch/reference/7.17/highlighting.html
            properties:
              fragmentSize:
                type: number
                description: The size of the highlighted fragment in characters. Defaults to
                  1000.
              numFragments:
                type: number
                description: Number of result fragments to extract. Fragments will be
                  concatenated with `fragmentDelimiter`. Defaults to 1.
              fragmentDelimiter:
                type: string
                description: Delimiter string used to concatenate fragments. Defaults to " ...
                  ".
          indexTemplates:
            type: array
            description: Elasticsearch specific index template bodies
            items:
              type: object
              required:
                - name
                - body
              properties:
                name:
                  type: string
                body:
                  type: object
                  required:
                    - index_patterns
                  properties:
                    index_patterns:
                      type: array
                      description: Array of wildcard (*) expressions used to match the names of data
                        streams and indices during creation.
                      items:
                        type: string
                    composed_of:
                      type: array
                      description: An ordered list of component template names. Component templates
                        are merged in the order specified, meaning that the last
                        component template specified has the highest precedence.
                      items:
                        type: string
                    template:
                      type: object
                      description: See available properties of template
                        https://www.elastic.co/guide/en/elasticsearch/reference/7.15/indices-put-template.html#put-index-template-api-request-body
                      additionalProperties:
                        $comment: ""
          clientOptions:
            anyOf:
              - type: object
                properties:
                  provider:
                    type: string
                    const: elastic
                  cloudId:
                    type: string
                    description: "Elastic.co CloudID See:
                      https://www.elastic.co/guide/en/elasticsearch/client/java\
                      script-api/current/client-connecting.html#authentication"
                  auth:
                    type: object
                    required:
                      - username
                      - password
                    properties:
                      username:
                        type: string
                      password:
                        type: string
                        visibility: secret
                  ssl:
                    type: object
                    properties:
                      rejectUnauthorized:
                        type: boolean
                        description: If true the server will reject any connection which is not
                          authorized with the list of supplied CAs.
                        default: true
                required:
                  - auth
                  - cloudId
                  - provider
              - type: object
                properties:
                  provider:
                    type: string
                    const: aws
                  node:
                    type: string
                    description: Node configuration. URL AWS ES endpoint to connect to. Eg.
                      https://my-es-cluster.eu-west-1.es.amazonaws.com
                  region:
                    type: string
                    description: The AWS region. Only needed if using a custom DNS record.
                  service:
                    type: string
                    enum:
                      - es
                      - aoss
                    description: The AWS service used for request signature. Either 'es' for
                      "Managed Clusters" or 'aoss' for "Serverless". Only needed
                      if using a custom DNS record.
                  ssl:
                    type: object
                    properties:
                      rejectUnauthorized:
                        type: boolean
                        description: If true the server will reject any connection which is not
                          authorized with the list of supplied CAs.
                        default: true
                required:
                  - node
                  - provider
              - type: object
                properties:
                  node:
                    anyOf:
                      - type: string
                      - type: array
                        items:
                          type: string
                    description: Node configuration. URL/URLS to ElasticSearch node to connect to.
                      Either direct URL like 'https://localhost:9200' or with
                      credentials like
                      'https://username:password@localhost:9200'
                  auth:
                    anyOf:
                      - type: object
                        properties:
                          username:
                            type: string
                          password:
                            type: string
                            visibility: secret
                        required:
                          - username
                          - password
                      - type: object
                        properties:
                          apiKey:
                            type: string
                            description: "Base64 Encoded API key to be used to connect to the cluster. See:
                              https://www.elastic.co/guide/en/elasticsearch/ref\
                              erence/current/security-api-create-api-key.html"
                            visibility: secret
                        required:
                          - apiKey
                    description: Authentication credentials for ElasticSearch If both ApiKey/Bearer
                      token and username+password is provided, tokens take
                      precedence
                  ssl:
                    type: object
                    properties:
                      rejectUnauthorized:
                        type: boolean
                        description: If true the server will reject any connection which is not
                          authorized with the list of supplied CAs.
                        default: true
                required:
                  - node
              - type: object
                properties:
                  provider:
                    type: string
                    const: opensearch
                  node:
                    anyOf:
                      - type: string
                      - type: array
                        items:
                          type: string
                    description: Node configuration. URL/URLS to OpenSearch node to connect to.
                      Either direct URL like 'https://localhost:9200' or with
                      credentials like
                      'https://username:password@localhost:9200'
                  auth:
                    anyOf:
                      - type: object
                        properties:
                          username:
                            type: string
                          password:
                            type: string
                            visibility: secret
                        required:
                          - username
                          - password
                      - type: object
                        properties:
                          apiKey:
                            type: string
                            visibility: secret
                        required:
                          - apiKey
                    description: Authentication credentials for OpenSearch If both ApiKey/Bearer
                      token and username+password is provided, tokens take
                      precedence
                  ssl:
                    type: object
                    properties:
                      rejectUnauthorized:
                        type: boolean
                        description: If true the server will reject any connection which is not
                          authorized with the list of supplied CAs.
                        default: true
                required:
                  - node
                  - provider
            description: Miscellaneous options for the client
  scaffolder:
    type: object
    description: Configuration options for the scaffolder plugin
    properties:
      defaultAuthor:
        type: object
        description: The commit author info used when new components are created.
        properties:
          name:
            type: string
          email:
            type: string
      defaultCommitMessage:
        type: string
        description: The commit message used when new components are created.
      concurrentTasksLimit:
        type: number
        description: >-
          Sets the number of concurrent tasks that can be run at any given time
          on the TaskWorker.


          Defaults to 10.


          Set to 0 to disable task workers altogether.
      EXPERIMENTAL_recoverTasks:
        type: boolean
        description: |-
          Sets the tasks recoverability on system start up.

          If not specified, the default value is false.
      EXPERIMENTAL_recoverTasksTimeout:
        $ref: "#/definitions/HumanDuration"
        description: >-
          Every task which is in progress state and having a last heartbeat
          longer than a specified timeout is going to be attempted to recover.


          If not specified, the default value is 5 seconds.
      taskTimeoutJanitorFrequency:
        $ref: "#/definitions/HumanDuration"
        description: >-
          Makes sure to auto-expire and clean up things that time out or for
          other reasons should not be left lingering.


          By default, the frequency is every 5 minutes.
      taskTimeout:
        $ref: "#/definitions/HumanDuration"
        description: >-
          Sets the task's heartbeat timeout, when to consider a task to be
          staled.


          Once task is considered to be staled, the scheduler will shut it down on the next cycle.


          Default value is 24 hours.
  stackoverflow:
    type: object
    description: Configuration options for the stack overflow plugin
    properties:
      baseUrl:
        type: string
        description: The base url of the Stack Overflow API used for the plugin
        visibility: frontend
      apiKey:
        type: string
        description: The API key to authenticate to Stack Overflow API
        visibility: secret
      teamName:
        type: string
        description: The name of the team for a Stack Overflow for Teams account
      apiAccessToken:
        type: string
        description: The API Access Token to authenticate to Stack Overflow API
        visibility: secret
      requestParams:
        type: object
        description: Type representing the request parameters.
        additionalProperties:
          anyOf:
            - type: string
            - type: array
              items:
                type: string
            - type: number
  sentry:
    type: object
    required:
      - organization
    description: Configuration options for the sentry plugin
    properties:
      organization:
        type: string
        description: The 'organization' attribute
        visibility: frontend
  sonarqube:
    type: object
    description: Optional configurations for the SonarQube plugin
    properties:
      baseUrl:
        type: string
        description: The base url of the sonarqube installation. Defaults to
          https://sonarcloud.io.
        visibility: frontend
      externalBaseUrl:
        type: string
        description: The external url of the sonarqube installation. Use this if you
          want to use a different url for the frontend than the backend.
        visibility: frontend
      apiKey:
        type: string
        description: The api key to access the sonarqube instance under baseUrl.
        visibility: secret
      instances:
        type: array
        description: The optional sonarqube instances.
        visibility: frontend
        items:
          type: object
          required:
            - name
            - baseUrl
            - apiKey
          properties:
            name:
              type: string
              description: The name of the sonarqube instance.
              visibility: frontend
            baseUrl:
              type: string
              description: The base url of the sonarqube instance.
              visibility: frontend
            externalBaseUrl:
              type: string
              description: The external url of the sonarqube instance. Use this if you want to
                use a different url for the frontend than the backend.
              visibility: frontend
            apiKey:
              type: string
              description: The api key to access the sonarqube instance.
              visibility: secret
  splunkOnCall:
    type: object
    description: Splunk On Call Plugin specific configs
    properties:
      eventsRestEndpoint:
        type: string
        visibility: frontend
  stackstorm:
    type: object
    required:
      - webUrl
    properties:
      webUrl:
        type: string
        description: StackStorm Web UI url Used in links to StackStorm web UI
        visibility: frontend
  techdocs:
    type: object
    required:
      - builder
    description: Configuration options for the techdocs plugin
    properties:
      builder:
        type: string
        enum:
          - local
          - external
        description: Documentation building process depends on the builder attr
        visibility: frontend
      legacyUseCaseSensitiveTripletPaths:
        type: boolean
        description: Allows fallback to case-sensitive triplets in case of migration issues.
        visibility: frontend
      sanitizer:
        type: object
        properties:
          allowedIframeHosts:
            type: array
            description: 'Allows iframe tag only for listed hosts
              Example:  allowedIframeHosts: ["example.com"]  this will allow all
              iframes with the host `example.com` in the src attribute'
            visibility: frontend
            items:
              type: string
      generator:
        type: object
        required:
          - runIn
        description: Techdocs generator information
        properties:
          runIn:
            type: string
            enum:
              - local
              - docker
            description: Where to run the techdocs (mkdocs) generator
          dockerImage:
            type: string
            description: Override the default techdocs docker image
          pullImage:
            type: boolean
            description: Pull the latest docker image
          mkdocs:
            type: object
            description: Override behavior specific to mkdocs.
            properties:
              legacyCopyReadmeMdToIndexMd:
                type: boolean
                description: (Optional and not recommended) Configures the techdocs generator to
                  attempt to ensure an index.md exists falling back to using
                  <docs-dir>/README.md or README.md in case a default
                  <docs-dir>/index.md is not provided. Note that
                  https://www.mkdocs.org/user-guide/configuration/#edit_uri
                  behavior will be broken in these scenarios.
              defaultPlugins:
                type: array
                description: List of mkdocs plugins which should be added as default to all
                  mkdocs.yml files.
                items:
                  type: string
      publisher:
        anyOf:
          - type: object
            properties:
              type:
                type: string
                enum:
                  - local
                  - googleGcs
                  - awsS3
                  - azureBlobStorage
                  - openStackSwift
              local:
                type: object
                properties:
                  publishDirectory:
                    type: string
                    description: Directory to store generated static files.
            required:
              - type
          - type: object
            properties:
              type:
                type: string
                const: awsS3
              awsS3:
                type: object
                required:
                  - bucketName
                description: Required when 'type' is set to awsS3
                properties:
                  accountId:
                    type: string
                    description: (Optional) The AWS account ID where the storage bucket is located.
                      Credentials for the account ID will be sourced from the
                      'aws' app config section. See the [integration-aws-node
                      package](https://github.com/backstage/backstage/blob/master/packages/integration-aws-node/README.md)
                      for details on how to configure the credentials in the app
                      config. If account ID is not set and no credentials are
                      set, environment variables or aws config file will be used
                      to authenticate.
                    visibility: secret
                  credentials:
                    type: object
                    description: (Optional) Credentials used to access a storage bucket. This
                      section is now deprecated. Configuring the account ID is
                      now preferred, with credentials in the 'aws' app config
                      section. If not set and no account ID is set, environment
                      variables or aws config file will be used to authenticate.
                    visibility: secret
                    properties:
                      accessKeyId:
                        type: string
                        description: User access key id
                        visibility: secret
                      secretAccessKey:
                        type: string
                        description: User secret access key
                        visibility: secret
                      roleArn:
                        type: string
                        description: ARN of role to be assumed
                  bucketName:
                    type: string
                    description: (Required) Cloud Storage Bucket Name
                  region:
                    type: string
                    description: (Optional) AWS Region. If not set, AWS_REGION environment variable
                      or aws config file will be used.
                    visibility: secret
                  endpoint:
                    type: string
                    description: (Optional) AWS Endpoint. The endpoint URI to send requests to. The
                      default endpoint is built from the configured region.
                    visibility: secret
                  s3ForcePathStyle:
                    type: boolean
                    description: (Optional) Whether to use path style URLs when communicating with
                      S3. Defaults to false. This allows providers like
                      LocalStack, Minio and Wasabi (and possibly others) to be
                      used to host tech docs.
                  sse:
                    type: string
                    enum:
                      - aws:kms
                      - AES256
                    description: (Optional) AWS Server Side Encryption Defaults to undefined. If not
                      set, encrypted buckets will fail to publish.
                      https://docs.aws.amazon.com/AmazonS3/latest/userguide/specifying-s3-encryption.html
            required:
              - type
          - type: object
            properties:
              type:
                type: string
                const: openStackSwift
              openStackSwift:
                type: object
                required:
                  - credentials
                  - containerName
                  - authUrl
                  - swiftUrl
                description: Required when 'type' is set to openStackSwift
                properties:
                  credentials:
                    type: object
                    required:
                      - id
                      - secret
                    description: (Required) Credentials used to access a storage bucket.
                    visibility: secret
                    properties:
                      id:
                        type: string
                        description: (Required) Application Credential ID
                        visibility: secret
                      secret:
                        type: string
                        description: (Required) Application Credential Secret
                        visibility: secret
                  containerName:
                    type: string
                    description: (Required) Cloud Storage Container Name
                  authUrl:
                    type: string
                    description: (Required) Auth url sometimes OpenStack uses different port check
                      your OpenStack apis.
                  swiftUrl:
                    type: string
                    description: (Required) Swift URL
            required:
              - type
          - type: object
            properties:
              type:
                type: string
                const: azureBlobStorage
              azureBlobStorage:
                type: object
                required:
                  - containerName
                description: Required when 'type' is set to azureBlobStorage
                properties:
                  connectionString:
                    type: string
                    description: (Optional) Connection string of the storage container.
                    visibility: secret
                  credentials:
                    type: object
                    required:
                      - accountName
                    description: (Optional) Credentials used to access a storage container.
                    visibility: secret
                    properties:
                      accountName:
                        type: string
                        description: Account access name
                        visibility: secret
                      accountKey:
                        type: string
                        description: (Optional) Account secret primary key If not set, environment
                          variables will be used to authenticate.
                        visibility: secret
                  containerName:
                    type: string
                    description: (Required) Cloud Storage Container Name
            required:
              - type
          - type: object
            properties:
              type:
                type: string
                const: googleGcs
              googleGcs:
                type: object
                required:
                  - bucketName
                description: Required when 'type' is set to googleGcs
                properties:
                  bucketName:
                    type: string
                    description: (Required) Cloud Storage Bucket Name
                  credentials:
                    type: string
                    description: (Optional) API key used to write to a storage bucket. If not set,
                      environment variables will be used to authenticate.
                    visibility: secret
                  projectId:
                    type: string
                    description: (Optional) GCP project ID that contains the bucket. Should be set
                      if credentials is not set, or if the service account in
                      the credentials belongs to a different project to the
                      bucket.
            required:
              - type
        description: Techdocs publisher information
      cache:
        type: object
        required:
          - ttl
        properties:
          ttl:
            type: number
            description: >-
              The cache time-to-live for TechDocs sites (in milliseconds). Set
              this to a non-zero value to cache TechDocs sites and assets as
              they are read from storage.


              Note: you must also configure `backend.cache` appropriately as well, and to pass a PluginCacheManager instance to TechDocs Backend's createRouter method in your backend.
          readTimeout:
            type: number
            description: >-
              The time (in milliseconds) that the TechDocs backend will wait for
              a cache service to respond before continuing on as though the
              cached object was not found (e.g. when the cache sercice is
              unavailable).


              Defaults to 1000 milliseconds.
  vault:
    type: object
    required:
      - baseUrl
      - token
    properties:
      baseUrl:
        type: string
        description: The baseUrl for your Vault instance.
        visibility: frontend
      publicUrl:
        type: string
        description: The publicUrl for your Vault instance (Optional).
        visibility: frontend
      token:
        type: string
        description: The token used by Backstage to access Vault.
        visibility: secret
      secretEngine:
        type: string
        description: The secret engine name where in vault. Defaults to `secrets`.
      kvVersion:
        type: number
        enum:
          - 1
          - 2
        description: The version of the K/V API. Defaults to `2`.
      schedule:
        anyOf:
          - $ref: "#/definitions/TaskScheduleDefinitionConfig"
          - type: boolean
        description: If set to true, the default schedule (hourly) will be used. If a
          different schedule is set, this will be used instead.
  scorecards:
    type: object
    description: Extra configuration for score card plugin
    properties:
      jsonDataUrl:
        type: string
        description: The public absolute root URL with json file defining the score card
          entries.
        visibility: frontend
      wikiLinkTemplate:
        type: string
        description: The template for the link to the wiki, e.g.
          "https://TBD/XXX/_wiki/wikis/XXX.wiki/{id}"
        visibility: frontend
  travisci:
    type: object
    description: Configuration options for the travisci plugin
    properties:
      baseUrl:
        type: string
        description: The 'baseUrl' attribute. It should point to the address of the
          travis portal. If not provided, frontend plugin will use
          'https://travis-ci.com/'
        visibility: frontend

