$schema: https://backstage.io/schema/config-v1
title: Application Configuration Schema
type: object
$defs:
  check:
    type: object
    required:
      - type
      - name
      - description
      - factIds
      - rule
    properties:
      type:
        type: string
      name:
        type: string
      description:
        type: string
      factIds:
        type: array
        items:
          type: string
      rule:
        $ref: "#/$defs/rule"
  conditionProperties:
    type: object
    required:
      - fact
      - operator
      - value
    properties:
      fact:
        type: string
      operator:
        type: string
      value:
        oneOf:
          - type: object
            required:
              - fact
            properties:
              fact:
                type: string
          - {}
      path:
        type: string
      name:
        type: string
      priority:
        type: number
      params:
        type: object
        additionalProperties: true
  conditionReference:
    type: object
    required:
      - condition
    properties:
      condition:
        type: string
      name:
        type: string
      priority:
        type: number
  nestedCondition:
    oneOf:
      - $ref: "#/$defs/conditionProperties"
      - $ref: "#/$defs/topLevelCondition"
  rule:
    type: string
    required:
      - conditions
    properties:
      conditions:
        $ref: "#/$defs/topLevelCondition"
      name:
        type: string
      priority:
        type: number
      successMetadata:
        type: object
        additionalProperties: true
      failureMetadata:
        type: object
        additionalProperties: true
  topLevelCondition:
    oneOf:
      - type: object
        required:
          - all
        properties:
          all:
            type: array
            items:
              oneOf:
                - $ref: "#/$defs/nestedCondition"
      - type: object
        required:
          - any
        properties:
          any:
            type: array
            items:
              oneOf:
                - $ref: "#/$defs/nestedCondition"
      - type: object
        required:
          - not
        properties:
          not:
            $ref: "#/$defs/nestedCondition"
      - $ref: "#/$defs/conditionReference"
required:
  - apacheAirflow
  - app
  - azureDevOps
  - backend
  - costInsights
  - gocd
  - scorecards
  - sentry
  - techdocs
description: This is the schema describing the structure of the app-config.yaml
  configuration file.
properties:
  app:
    type: object
    required:
      - baseUrl
    description: Generic frontend configuration.
    properties:
      baseUrl:
        type: string
        visibility: frontend
        description: The public absolute root URL that the frontend.
      title:
        type: string
        visibility: frontend
        description: The title of the app, as shown in the Backstage web interface.
      datadogRum:
        type: object
        description: Datadog RUM events configuration
        required:
          - clientToken
          - applicationId
        properties:
          env:
            type: string
            visibility: frontend
            description: Environment for Datadog RUM events
          clientToken:
            type: string
            visibility: frontend
            description: clientToken for Datadog RUM events
          applicationId:
            type: string
            visibility: frontend
            description: applicationId for Datadog RUM events
          site:
            type: string
            visibility: frontend
            description: site for Datadog RUM events
      listen:
        type: object
        description: Listening configuration for local development
        properties:
          host:
            type: string
            visibility: frontend
            description: The host that the frontend should be bound to. Only used for local
              development.
          port:
            type: number
            visibility: frontend
            description: The port that the frontend should be bound to. Only used for local
              development.
      https:
        type: object
        description: Only used for local development. The https object is passed to
          webpack in order to enable using https on localhost.
        properties:
          certificate:
            type: object
            description: Parent object containing certificate and the private key
            required:
              - key
              - cert
            properties:
              key:
                type: string
                visibility: secret
                description: Https Certificate private key. Use $file to load in a file
              cert:
                type: string
                visibility: secret
                description: Https Certificate. Use $file to load in a file
      support:
        description: Information about support of this Backstage instance and how to
          contact the integrator team.
        type: object
        required:
          - items
          - url
        properties:
          url:
            description: The primary support url.
            visibility: frontend
            type: string
          items:
            description: A list of categorized support item groupings.
            type: array
            items:
              type: object
              required:
                - links
                - title
              properties:
                title:
                  description: The title of the support item grouping.
                  visibility: frontend
                  type: string
                icon:
                  description: An optional icon for the support item grouping.
                  visibility: frontend
                  type: string
                links:
                  description: A list of support links for the Backstage instance inside this
                    grouping.
                  type: array
                  items:
                    type: object
                    required:
                      - url
                    properties:
                      url:
                        visibility: frontend
                        type: string
                      title:
                        visibility: frontend
                        type: string
      experimental:
        type: object
        properties:
          packages:
            visibility: frontend
            deepVisibility: frontend
            anyOf:
              - type: object
                properties:
                  include:
                    type: array
                    items:
                      type: string
                  exclude:
                    type: array
                    items:
                      type: string
              - const: all
                type: string
      routes:
        type: object
        properties:
          bindings:
            deepVisibility: frontend
            type: object
            additionalProperties:
              type: string
      extensions:
        deepVisibility: frontend
        type: array
        items:
          anyOf:
            - type: object
              additionalProperties:
                anyOf:
                  - type: object
                    properties:
                      attachTo:
                        type: object
                        required:
                          - id
                          - input
                        properties:
                          id:
                            type: string
                          input:
                            type: string
                      disabled:
                        type: boolean
                      config: {}
                  - type: boolean
            - type: string
      analytics:
        type: object
        required:
          - ga
          - ga4
          - newRelic
        properties:
          ga:
            type: object
            required:
              - trackingId
            properties:
              trackingId:
                description: Google Analytics tracking ID, e.g. UA-000000-0
                visibility: frontend
                type: string
              scriptSrc:
                description: >-
                  URL to Google Analytics analytics.js script

                  Defaults to fetching from GA source (eg. https://www.google-analytics.com/analytics.js)
                visibility: frontend
                type: string
              identity:
                description: >-
                  Controls how the identityApi is used when sending data to GA:


                  - `disabled`: (Default) Explicitly prevents a user's identity from
                    being used when capturing events in GA.
                  - `optional`: Pageviews and hits are forwarded to GA as they happen
                    and only include user identity metadata once known. Guarantees
                    that hits are captured for all sessions, even if no sign in
                    occurs, but may result in dropped hits in User ID views.
                  - `required`: All pageviews and hits are deferred until an identity
                    is known. Guarantees that all data sent to GA correlates to a user
                    identity, but prevents GA from receiving events for sessions in
                    which a user does not sign in. An `identityApi` instance must be
                    passed during instantiation when set to this value.
                visibility: frontend
                enum:
                  - disabled
                  - optional
                  - required
                type: string
              virtualSearchPageView:
                description: |-
                  Controls whether to send virtual pageviews on `search` events.
                  Can be used to enable Site Search in GA.
                type: object
                properties:
                  mode:
                    description: >-
                      - `disabled`: (Default) no virtual pageviews are sent

                      - `only`: Sends virtual pageview _instead_ of the `search` event

                      - `both`: Sends both the `search` event _and_ the virtual pageview
                    visibility: frontend
                    enum:
                      - both
                      - disabled
                      - only
                    type: string
                  mountPath:
                    description: |-
                      Specifies on which path the main Search page is mounted.
                      Defaults to `/search`.
                    visibility: frontend
                    type: string
                  searchQuery:
                    description: >-
                      Specifies which query param is used for the term query in
                      the virtual pageview URL.

                      Defaults to `query`.
                    visibility: frontend
                    type: string
                  categoryQuery:
                    description: >-
                      Specifies which query param is used for the category query
                      in the virtual pageview URL.

                      Skipped by default.
                    visibility: frontend
                    type: string
              debug:
                description: >-
                  Whether or not to log analytics debug statements to the
                  console.

                  Defaults to false.
                visibility: frontend
                type: boolean
              testMode:
                description: >-
                  Prevents events from actually being sent when set to true.
                  Defaults

                  to false.
                visibility: frontend
                type: boolean
              customDimensionsMetrics:
                description: >-
                  Configuration informing how Analytics Context and Event
                  Attributes

                  metadata will be captured in Google Analytics.
                type: array
                items:
                  type: object
                  required:
                    - index
                    - key
                    - source
                    - type
                  properties:
                    type:
                      description: >-
                        Specifies whether the corresponding metadata should be
                        collected

                        as a Google Analytics custom dimension or custom metric.
                      visibility: frontend
                      enum:
                        - dimension
                        - metric
                      type: string
                    index:
                      description: >-
                        The index of the Google Analytics custom dimension or
                        metric that

                        the metadata should be written to.
                      visibility: frontend
                      type: number
                    source:
                      description: >-
                        Specifies whether the desired value lives as an
                        attribute on the

                        Analytics Context or the Event's Attributes.
                      visibility: frontend
                      enum:
                        - attributes
                        - context
                      type: string
                    key:
                      description: >-
                        The property of the context or attributes that should be
                        captured.

                        e.g. to capture the Plugin ID associated with an event, the source

                        should be set to "context" and the key should be set to pluginId.
                      visibility: frontend
                      type: string
          newRelic:
            type: object
            required:
              - accountId
              - applicationId
              - cookiesEnabled
              - distributedTracingEnabled
              - endpoint
              - licenseKey
            properties:
              endpoint:
                description: Data ingestion endpoint to use, either bam.eu01.nr-data.net (EU) or
                  bam.nr-data.net (US)
                visibility: frontend
                enum:
                  - bam.eu01.nr-data.net
                  - bam.nr-data.net
                type: string
              accountId:
                description: New Relic Account ID, e.g. 1234567
                visibility: frontend
                type: string
              applicationId:
                description: New Relic Application ID, e.g. 987654321
                visibility: frontend
                type: string
              licenseKey:
                description: New Relic License Key, e.g. NRJS-12a3456bc78de9123f4
                visibility: frontend
                type: string
              distributedTracingEnabled:
                description: Whether to enabled distributed tracing, defaults to false
                visibility: frontend
                type: boolean
              cookiesEnabled:
                description: Whether to enabled tracing of cookies, defaults to false
                visibility: frontend
                type: boolean
          ga4:
            type: object
            required:
              - measurementId
            properties:
              measurementId:
                description: Google Analytics measurement ID, e.g. G-000000-0
                visibility: frontend
                type: string
              identity:
                description: >-
                  Controls how the identityApi is used when sending data to GA:


                  - `disabled`: (Default) Explicitly prevents a user's identity from
                    being used when capturing events in GA.
                  - `optional`: Pageviews and hits are forwarded to GA as they happen
                    and only include user identity metadata once known. Guarantees
                    that hits are captured for all sessions, even if no sign in
                    occurs, but may result in dropped hits in User ID views.
                  - `required`: All pageviews and hits are deferred until an identity
                    is known. Guarantees that all data sent to GA correlates to a user
                    identity, but prevents GA from receiving events for sessions in
                    which a user does not sign in. An `identityApi` instance must be
                    passed during instantiation when set to this value.
                visibility: frontend
                enum:
                  - disabled
                  - optional
                  - required
                type: string
              debug:
                description: |-
                  Whether to log analytics debug statements to the console.
                  Defaults to false.
                visibility: frontend
                type: boolean
              enableSendPageView:
                description: |-
                  Whether to send default send_page_view event.
                  Defaults to false.
                visibility: frontend
                type: boolean
              testMode:
                description: >-
                  Prevents events from actually being sent when set to true.
                  Defaults

                  to false.
                visibility: frontend
                type: boolean
              contentGrouping:
                description: >-
                  Content grouping definition

                  Feature available in Google Analytics 4

                  More information https://support.google.com/analytics/answer/11523339?hl=en

                  Data can be grouped by pluginId, routeRef

                  Takes 24 hours before metrics shows up in GA dashboard

                  Specifies the dimension to be used for content grouping

                  Can be one of pluginId, extension or routeRef
                visibility: frontend
                enum:
                  - extension
                  - pluginId
                  - routeRef
                type: string
              allowedContexts:
                description: >-
                  Configuration informing how Analytics Context and Event
                  Attributes

                  metadata will be captured in Google Analytics.

                  Contexts that will be sent as parameters in the event.

                  context-name will be prefixed by c_, for example, pluginId will be c_pluginId in the event.
                visibility: frontend
                anyOf:
                  - type: array
                    items:
                      type: string
                  - type: array
                    items:
                      - type: string
                        const: "*"
                    minItems: 1
                    maxItems: 1
              allowedAttributes:
                description: >-
                  Attributes that will be sent as parameters in the event

                  attribute-name will be prefixed by a_, for example , testAttribute will be c_testAttribute in the event.
                visibility: frontend
                anyOf:
                  - type: array
                    items:
                      type: string
                  - type: array
                    items:
                      - type: string
                        const: "*"
                    minItems: 1
                    maxItems: 1
      packageName:
        description: >-
          The name of the app package (in most Backstage repositories, this is
          the

          "name" field in `packages/app/package.json`) that content should be served

          from. The same app package should be added as a dependency to the backend

          package in order for it to be accessible at runtime.


          In a typical setup with a single app package, this will default to 'app'.
        type: string
      disableConfigInjection:
        description: >-
          Disables the configuration injection. This can be useful if you're
          running in an environment

          with a read-only filesystem, or for some other reason don't want configuration to be injected.


          Note that this will cause the configuration used when building the app bundle to be used, unless

          a separate configuration loading strategy is set up.


          This also disables configuration injection though `APP_CONFIG_` environment variables.
        type: boolean
      disableStaticFallbackCache:
        description: >-
          By default the app backend plugin will cache previously deployed
          static assets in the database.

          If you disable this, it is recommended to set a `staticFallbackHandler` instead.
        type: boolean
  allure:
    type: object
    properties:
      baseUrl:
        type: string
        visibility: frontend
  firehydrant:
    type: object
    properties:
      baseUrl:
        type: string
        visibility: frontend
  lighthouse:
    type: object
    description: Configuration options for the Lighthouse backend plugin.
    properties:
      baseUrl:
        type: string
        visibility: frontend
      schedule:
        description: Schedule of the audit
  nomad:
    type: object
    required:
      - addr
    properties:
      addr:
        type: string
        description: "The address of the Nomad API. See:
          https://developer.hashicorp.com/nomad/api-docs#addressing-and-ports"
        visibility: frontend
      token:
        type: string
        description: "The token to call the Nomad API with. See:
          https://developer.hashicorp.com/nomad/api-docs#authentication"
        visibility: secret
  auth:
    type: object
    description: Configuration that provides information on available configured
      authentication providers.
    properties:
      providers:
        type: object
        description: The available auth-provider options and attributes
        additionalProperties:
          type: object
          visibility: frontend
          additionalProperties: true
        properties:
          atlassian:
            visibility: frontend
            type: object
            additionalProperties:
              type: object
              required:
                - clientId
                - clientSecret
              properties:
                clientId:
                  type: string
                clientSecret:
                  visibility: secret
                  type: string
                audience:
                  type: string
                callbackUrl:
                  type: string
          google:
            visibility: frontend
            type: object
            additionalProperties:
              type: object
              required:
                - clientId
                - clientSecret
              properties:
                clientId:
                  type: string
                clientSecret:
                  visibility: secret
                  type: string
                callbackUrl:
                  type: string
          github:
            visibility: frontend
            type: object
            additionalProperties:
              type: object
              required:
                - clientId
                - clientSecret
              properties:
                clientId:
                  type: string
                clientSecret:
                  visibility: secret
                  type: string
                callbackUrl:
                  type: string
                enterpriseInstanceUrl:
                  type: string
          saml:
            visibility: frontend
            type: object
            required:
              - cert
              - entryPoint
              - issuer
            properties:
              entryPoint:
                type: string
              logoutUrl:
                type: string
              issuer:
                type: string
              cert:
                visibility: secret
                type: string
              audience:
                type: string
              privateKey:
                visibility: secret
                type: string
              authnContext:
                type: array
                items:
                  type: string
              identifierFormat:
                type: string
              decryptionPvk:
                visibility: secret
                type: string
              signatureAlgorithm:
                enum:
                  - sha256
                  - sha512
                type: string
              digestAlgorithm:
                type: string
              acceptedClockSkewMs:
                type: number
          oauth2:
            visibility: frontend
            type: object
            additionalProperties:
              type: object
              required:
                - authorizationUrl
                - clientId
                - clientSecret
                - tokenUrl
              properties:
                clientId:
                  type: string
                clientSecret:
                  visibility: secret
                  type: string
                authorizationUrl:
                  type: string
                tokenUrl:
                  type: string
                scope:
                  type: string
                disableRefresh:
                  type: boolean
                includeBasicAuth:
                  type: boolean
          auth0:
            visibility: frontend
            type: object
            additionalProperties:
              type: object
              required:
                - clientId
                - clientSecret
                - domain
              properties:
                clientId:
                  type: string
                clientSecret:
                  visibility: secret
                  type: string
                domain:
                  type: string
                callbackUrl:
                  type: string
                audience:
                  type: string
                connection:
                  type: string
                connectionScope:
                  type: string
          onelogin:
            visibility: frontend
            type: object
            additionalProperties:
              type: object
              required:
                - clientId
                - clientSecret
                - issuer
              properties:
                clientId:
                  type: string
                clientSecret:
                  visibility: secret
                  type: string
                issuer:
                  type: string
                callbackUrl:
                  type: string
          awsalb:
            visibility: frontend
            type: object
            required:
              - region
            properties:
              iss:
                type: string
              region:
                type: string
          cfaccess:
            visibility: frontend
            type: object
            required:
              - teamName
            properties:
              teamName:
                type: string
          backstageTokenExpiration:
            description: The backstage token expiration.
          gcpIap:
            description: Configuration for the Google Cloud Platform Identity-Aware Proxy
              (IAP) auth provider.
            type: object
            additionalProperties:
              type: object
              required:
                - audience
              properties:
                audience:
                  description: |-
                    The audience to use when validating incoming JWT tokens.
                    See https://backstage.io/docs/auth/google/gcp-iap-auth
                  type: string
                jwtHeader:
                  description: The name of the header to read the JWT token from, defaults to
                    `'x-goog-iap-jwt-assertion'`.
                  type: string
          gitlab:
            visibility: frontend
            type: object
            additionalProperties:
              type: object
              required:
                - clientId
                - clientSecret
              properties:
                clientId:
                  type: string
                clientSecret:
                  visibility: secret
                  type: string
                audience:
                  type: string
                callbackUrl:
                  type: string
          microsoft:
            visibility: frontend
            type: object
            additionalProperties:
              type: object
              required:
                - clientId
                - clientSecret
                - tenantId
              properties:
                clientId:
                  type: string
                tenantId:
                  type: string
                clientSecret:
                  visibility: secret
                  type: string
                domainHint:
                  type: string
                callbackUrl:
                  type: string
                additionalScopes:
                  type: array
                  items:
                    type: string
          okta:
            visibility: frontend
            type: object
            additionalProperties:
              type: object
              required:
                - clientId
                - clientSecret
              properties:
                clientId:
                  type: string
                clientSecret:
                  visibility: secret
                  type: string
                audience:
                  type: string
                authServerId:
                  type: string
                idp:
                  type: string
                callbackUrl:
                  type: string
                additionalScopes:
                  type: string
          oidc:
            visibility: frontend
            type: object
            additionalProperties:
              type: object
              required:
                - clientId
                - clientSecret
                - metadataUrl
              properties:
                clientId:
                  type: string
                clientSecret:
                  visibility: secret
                  type: string
                metadataUrl:
                  type: string
                callbackUrl:
                  type: string
                tokenEndpointAuthMethod:
                  type: string
                tokenSignedResponseAlg:
                  type: string
                scope:
                  type: string
                prompt:
                  type: string
      environment:
        description: >-
          The 'environment' attribute added as an optional parameter to have
          configurable environment value for `auth.providers`.

          default value: 'development'

          optional values: 'development' | 'production'
        visibility: frontend
        type: string
      autologout:
        description: Autologout feature configuration
        type: object
        properties:
          enabled:
            description: Enable or disable the autologout feature
            visibility: frontend
            type: boolean
          idleTimeoutMinutes:
            description: >-
              Number of minutes after which the inactive user is logged out
              automatically.

              Default is 60 minutes (1 hour)
            visibility: frontend
            type: number
          promptBeforeIdleSeconds:
            description: >-
              Number of seconds before the idle timeout where the user will be
              asked if it's still active.

              A dialog will be shown.

              Default is 10 seconds.

              Set to 0 seconds to disable the prompt.
            visibility: frontend
            type: number
          useWorkerTimers:
            description: >-
              Enable/disable the usage of worker thread timers instead of main
              thread timers.

              Default is true.

              If you experience some browser incompatibility, you may try to set this to false.
            visibility: frontend
            type: boolean
          logoutIfDisconnected:
            description: >-
              Enable/disable the automatic logout also on users that are logged
              in but with no Backstage tabs open.

              Default is true.
            visibility: frontend
            type: boolean
      session:
        type: object
        properties:
          secret:
            description: The secret attribute of session object.
            visibility: secret
            type: string
      identityTokenAlgorithm:
        description: |-
          JWS "alg" (Algorithm) Header Parameter value. Defaults to ES256.
          Must match one of the algorithms defined for IdentityClient.
          When setting a different algorithm, check if the `key` field
          of the `signing_keys` table can fit the length of the generated keys.
          If not, add a knex migration file in the migrations folder.
          More info on supported algorithms: https://github.com/panva/jose
        type: string
      keyStore:
        description: To control how to store JWK data in auth-backend
        type: object
        properties:
          provider:
            enum:
              - database
              - firestore
              - memory
              - static
            type: string
          firestore:
            type: object
            properties:
              host:
                description: The host to connect to
                type: string
              port:
                description: The port to connect to
                type: number
              ssl:
                description: Whether to use SSL when connecting.
                type: boolean
              projectId:
                description: The Google Cloud Project ID
                type: string
              keyFilename:
                description: |-
                  Local file containing the Service Account credentials.
                  You can omit this value to automatically read from
                  GOOGLE_APPLICATION_CREDENTIALS env which is useful for local
                  development.
                type: string
              path:
                description: The path to use for the collection. Defaults to 'sessions'
                type: string
              timeout:
                description: Timeout used for database operations. Defaults to 10000ms
                type: number
          static:
            type: object
            required:
              - keys
            properties:
              keys:
                description: Must be declared at least once and the first one will be used for
                  signing
                type: array
                items:
                  type: object
                  required:
                    - keyId
                    - privateKeyFile
                    - publicKeyFile
                  properties:
                    publicKeyFile:
                      description: Path to the public key file in the SPKI format
                      type: string
                    privateKeyFile:
                      description: Path to the matching private key file in the PKCS#8 format
                      type: string
                    keyId:
                      description: id to uniquely identify this key within the JWK set
                      type: string
                    algorithm:
                      description: >-
                        JWS "alg" (Algorithm) Header Parameter value. Defaults
                        to ES256.

                        Must match the algorithm used to generate the keys in the provided files
                      type: string
  techInsights:
    type: object
    description: Configuration options for the tech-insights plugin
    properties:
      factChecker:
        type: object
        properties:
          checks:
            type: object
            additionalProperties:
              $ref: "#/$defs/check"
      factRetrievers:
        description: Configuration options for fact retrievers
        type: object
        additionalProperties:
          type: object
          required:
            - cadence
          properties:
            cadence:
              description: A cron expression to indicate when the fact retriever should be
                triggered.
              type: string
            initialDelay:
              description: Optional duration of the initial delay.
            lifecycle:
              description: Optional lifecycle definition indicating the cleanup logic of facts
                when this retriever is run.
              anyOf:
                - type: object
                  properties:
                    timeToLive: {}
                  required:
                    - timeToLive
                - type: object
                  properties:
                    maxItems:
                      type: number
                  required:
                    - maxItems
            timeout:
              description: Optional duration to determine how long the fact retriever should
                be allowed to run, defaults to 5 minutes.
  discovery:
    description: Discovery options.
    type: object
    required:
      - endpoints
    visibility: frontend
    properties:
      endpoints:
        description: |-
          Endpoints

          A list of target baseUrls and the associated plugins.
        type: array
        visibility: frontend
        items:
          type: object
          required:
            - plugins
            - target
          properties:
            target:
              description: >-
                The target baseUrl to use for the plugin


                Can be either a string or an object with internal and external keys.

                Targets with `{{pluginId}}` or `{{ pluginId }} in the url will be replaced with the pluginId.
              anyOf:
                - type: object
                  required:
                    - external
                    - internal
                  properties:
                    external:
                      visibility: frontend
                      type: string
                    internal:
                      type: string
                - type: string
              visibility: frontend
            plugins:
              description: Array of plugins which use the target baseUrl.
              type: array
              visibility: frontend
              items:
                type: string
  backend:
    type: object
    required:
      - baseUrl
      - database
      - listen
    description: Generic backend configuration.
    properties:
      auth:
        description: Backend configuration for when request authentication is enabled
        type: object
        properties:
          keys:
            description: Keys shared by all backends for signing and validating backend
              tokens.
            type: array
            items:
              type: object
              required:
                - secret
              properties:
                secret:
                  description: >-
                    Secret for generating tokens. Should be a base64 string,
                    recommended

                    length is 24 bytes.
                  visibility: secret
                  type: string
      baseUrl:
        type: string
        description: The public absolute root URL that the backend is reachable at, from
          the browser's perspective.
        visibility: frontend
      listen:
        description: Address that the backend should listen to.
        anyOf:
          - type: object
            properties:
              host:
                description: Address of the interface that the backend should bind to.
                type: string
              port:
                description: Port that the backend should listen to.
                type:
                  - string
                  - number
          - type: string
      https:
        description: >-
          HTTPS configuration for the backend. If omitted the backend will serve
          HTTP.


          Setting this to `true` will cause self-signed certificates to be generated, which

          can be useful for local development or other non-production scenarios.
        anyOf:
          - type: object
            properties:
              certificate:
                description: Certificate configuration
                type: object
                required:
                  - cert
                  - key
                properties:
                  cert:
                    description: PEM encoded certificate. Use $file to load in a file
                    type: string
                  key:
                    description: PEM encoded certificate key. Use $file to load in a file.
                    visibility: secret
                    type: string
          - const: true
            type: boolean
      workingDirectory:
        description: |-
          An absolute path to a directory that can be used as a working dir, for
          example as scratch space for large operations.
        type: string
      database:
        description: Database connection configuration, select base database type using
          the `client` field
        type: object
        required:
          - client
          - connection
        properties:
          client:
            description: Default database client to use
            enum:
              - better-sqlite3
              - pg
              - sqlite3
            type: string
          connection:
            description: Base database connection string, or object with individual
              connection properties
            visibility: secret
            anyOf:
              - type: object
                additionalProperties: {}
                properties:
                  password:
                    description: Password that belongs to the client User
                    visibility: secret
                    type: string
              - type: string
          prefix:
            description: Database name prefix override
            type: string
          ensureExists:
            description: >-
              Whether to ensure the given database exists by creating it if it
              does not.

              Defaults to true if unspecified.
            type: boolean
          pluginDivisionMode:
            description: >-
              How plugins databases are managed/divided in the provided database
              instance.


              `database` -> Plugins are each given their own database to manage their schemas/tables.


              `schema` -> Plugins will be given their own schema (in the specified/default database)
                          to manage their tables.

              NOTE: Currently only supported by the `pg` client.
            default: database
            enum:
              - database
              - schema
            type: string
          role:
            description: Configures the ownership of newly created schemas in pg databases.
            type: string
          knexConfig:
            description: >-
              Arbitrary config object to pass to knex when initializing

              (https://knexjs.org/#Installation-client). Most notable is the debug

              and asyncStackTraces booleans
            type: object
            additionalProperties: true
          plugin:
            description: Plugin specific database configuration and client override
            type: object
            additionalProperties:
              type: object
              properties:
                client:
                  description: Database client override
                  enum:
                    - better-sqlite3
                    - pg
                    - sqlite3
                  type: string
                connection:
                  description: Database connection string or Knex object override
                  visibility: secret
                  anyOf:
                    - type: object
                      properties: {}
                      additionalProperties: true
                    - type: string
                ensureExists:
                  description: >-
                    Whether to ensure the given database exists by creating it
                    if it does not.

                    Defaults to base config if unspecified.
                  type: boolean
                knexConfig:
                  description: >-
                    Arbitrary config object to pass to knex when initializing

                    (https://knexjs.org/#Installation-client). Most notable is the

                    debug and asyncStackTraces booleans.


                    This is merged recursively into the base knexConfig
                  type: object
                  additionalProperties: true
                role:
                  description: Configures the ownership of newly created schemas in pg databases.
                  type: string
      cache:
        description: Cache connection configuration, select cache type using the `store`
          field
        anyOf:
          - type: object
            properties:
              store:
                type: string
                const: memory
              defaultTtl:
                description: An optional default TTL (in milliseconds).
                type: number
            required:
              - store
          - type: object
            properties:
              store:
                type: string
                const: redis
              connection:
                description: A redis connection string in the form
                  `redis://user:pass@host:port`.
                visibility: secret
                type: string
              defaultTtl:
                description: An optional default TTL (in milliseconds).
                type: number
            required:
              - connection
              - store
          - type: object
            properties:
              store:
                type: string
                const: memcache
              connection:
                description: A memcache connection string in the form `user:pass@host:port`.
                visibility: secret
                type: string
              defaultTtl:
                description: An optional default TTL (in milliseconds).
                type: number
            required:
              - connection
              - store
      cors:
        type: object
        properties:
          origin:
            anyOf:
              - type: array
                items:
                  type: string
              - type: string
          methods:
            anyOf:
              - type: array
                items:
                  type: string
              - type: string
          allowedHeaders:
            anyOf:
              - type: array
                items:
                  type: string
              - type: string
          exposedHeaders:
            anyOf:
              - type: array
                items:
                  type: string
              - type: string
          credentials:
            type: boolean
          maxAge:
            type: number
          preflightContinue:
            type: boolean
          optionsSuccessStatus:
            type: number
      reading:
        description: >-
          Configuration related to URL reading, used for example for reading
          catalog info

          files, scaffolder templates, and techdocs content.
        type: object
        properties:
          allow:
            description: >-
              A list of targets to allow outgoing requests to. Users will be
              able to make

              requests on behalf of the backend to the targets that are allowed by this list.
            type: array
            items:
              type: object
              required:
                - host
              properties:
                host:
                  description: >-
                    A host to allow outgoing requests to, being either a full
                    host or

                    a subdomain wildcard pattern with a leading `*`. For example `example.com`

                    and `*.example.com` are valid values, `prod.*.example.com` is not.

                    The host may also contain a port, for example `example.com:8080`.
                  type: string
                paths:
                  description: >-
                    An optional list of paths. In case they are present only
                    targets matching

                    any of them will are allowed. You can use trailing slashes to make sure only

                    subdirectories are allowed, for example `/mydir/` will allow targets with

                    paths like `/mydir/a` but will block paths like `/mydir2`.
                  type: array
                  items:
                    type: string
      csp:
        description: >-
          Content Security Policy options.


          The keys are the plain policy ID, e.g. "upgrade-insecure-requests". The

          values are on the format that the helmet library expects them, as an

          array of strings. There is also the special value false, which means to

          remove the default value that Backstage puts in place for that policy.
        type: object
        additionalProperties:
          anyOf:
            - type: array
              items:
                type: string
            - const: false
              type: boolean
  organization:
    description: Configuration that provides information about the organization that
      the app is for.
    type: object
    properties:
      name:
        description: The name of the organization that the app belongs to.
        visibility: frontend
        type: string
  homepage:
    description: This config was used by the HomepageTimer but has been replaced  by
      the HeaderWorldClock in the home plugin
    deprecated: in favor of the HeaderWorldClock which is found in the home plugin
    type: object
    properties:
      clocks:
        type: array
        items:
          type: object
          required:
            - label
            - timezone
          properties:
            label:
              visibility: frontend
              type: string
            timezone:
              visibility: frontend
              type: string
  enableExperimentalRedirectFlow:
    description: Enable redirect authentication flow type, instead of a popup for
      authentication.
    visibility: frontend
    type: boolean
  aws:
    description: Configuration for access to AWS accounts
    type: object
    properties:
      accountDefaults:
        description: Defaults for retrieving AWS account credentials
        type: object
        properties:
          roleName:
            description: The IAM role to assume to retrieve temporary AWS credentials
            type: string
          partition:
            description: The AWS partition of the IAM role, e.g. "aws", "aws-cn"
            type: string
          region:
            description: The STS regional endpoint to use when retrieving temporary AWS
              credentials, e.g. "ap-northeast-1"
            type: string
          externalId:
            description: The unique identifier needed to assume the role to retrieve
              temporary AWS credentials
            visibility: secret
            type: string
      mainAccount:
        description: Main account to use for retrieving AWS account credentials
        type: object
        properties:
          accessKeyId:
            description: The access key ID for a set of static AWS credentials
            visibility: secret
            type: string
          secretAccessKey:
            description: The secret access key for a set of static AWS credentials
            visibility: secret
            type: string
          profile:
            description: >-
              The configuration profile from a credentials file at
              ~/.aws/credentials and

              a configuration file at ~/.aws/config.
            type: string
          region:
            description: The STS regional endpoint to use for the main account, e.g.
              "ap-northeast-1"
            type: string
      accounts:
        description: Configuration for retrieving AWS accounts credentials
        type: array
        items:
          type: object
          required:
            - accountId
          properties:
            accountId:
              description: The account ID of the target account that this matches on, e.g.
                "123456789012"
              type: string
            accessKeyId:
              description: The access key ID for a set of static AWS credentials
              visibility: secret
              type: string
            secretAccessKey:
              description: The secret access key for a set of static AWS credentials
              visibility: secret
              type: string
            profile:
              description: >-
                The configuration profile from a credentials file at
                ~/.aws/credentials and

                a configuration file at ~/.aws/config.
              type: string
            roleName:
              description: The IAM role to assume to retrieve temporary AWS credentials
              type: string
            partition:
              description: The AWS partition of the IAM role, e.g. "aws", "aws-cn"
              type: string
            region:
              description: The STS regional endpoint to use when retrieving temporary AWS
                credentials, e.g. "ap-northeast-1"
              type: string
            externalId:
              description: The unique identifier needed to assume the role to retrieve
                temporary AWS credentials
              visibility: secret
              type: string
  integrations:
    description: Configuration for integrations towards various external repository
      provider systems
    visibility: frontend
    type: object
    properties:
      azure:
        description: Integration configuration for Azure
        type: array
        items:
          type: object
          required:
            - host
          properties:
            host:
              description: The hostname of the given Azure instance
              visibility: frontend
              type: string
            token:
              description: Token used to authenticate requests.
              visibility: secret
              deprecated: Use `credentials` instead.
              type: string
            credential:
              description: |-
                The credential to use for requests.

                If no credential is specified anonymous access is used.
              deepVisibility: secret
              deprecated: Use `credentials` instead.
              type: object
              properties:
                clientId:
                  type: string
                clientSecret:
                  type: string
                tenantId:
                  type: string
                personalAccessToken:
                  type: string
            credentials:
              description: >-
                The credentials to use for requests. If multiple credentials are
                specified the first one that matches the organization is used.

                If not organization matches the first credential without an organization is used.


                If no credentials are specified at all, either a default credential (for Azure DevOps) or anonymous access (for Azure DevOps Server) is used.
              deepVisibility: secret
              type: array
              items:
                type: object
                properties:
                  clientId:
                    type: string
                  clientSecret:
                    type: string
                  tenantId:
                    type: string
                  personalAccessToken:
                    type: string
      bitbucket:
        description: Integration configuration for Bitbucket
        deprecated: replaced by bitbucketCloud and bitbucketServer
        type: array
        items:
          type: object
          required:
            - host
          properties:
            host:
              description: The hostname of the given Bitbucket instance
              visibility: frontend
              type: string
            token:
              description: Token used to authenticate requests.
              visibility: secret
              type: string
            apiBaseUrl:
              description: The base url for the Bitbucket API, for example
                https://api.bitbucket.org/2.0
              visibility: frontend
              type: string
            username:
              description: The username to use for authenticated requests.
              visibility: secret
              type: string
            appPassword:
              description: Bitbucket app password used to authenticate requests.
              visibility: secret
              type: string
      bitbucketCloud:
        description: Integration configuration for Bitbucket Cloud
        type: array
        items:
          type: object
          required:
            - appPassword
            - username
          properties:
            username:
              description: The username to use for authenticated requests.
              visibility: secret
              type: string
            appPassword:
              description: Bitbucket Cloud app password used to authenticate requests.
              visibility: secret
              type: string
      bitbucketServer:
        description: Integration configuration for Bitbucket Server
        type: array
        items:
          type: object
          required:
            - host
          properties:
            host:
              description: The hostname of the given Bitbucket Server instance
              visibility: frontend
              type: string
            token:
              description: Token used to authenticate requests.
              visibility: secret
              type: string
            username:
              description: Username used to authenticate requests with Basic Auth.
              visibility: secret
              type: string
            password:
              description: Password (or token as password) used to authenticate requests with
                Basic Auth.
              visibility: secret
              type: string
            apiBaseUrl:
              description: The base url for the Bitbucket Server API, for example
                https://<host>/rest/api/1.0
              visibility: frontend
              type: string
      gerrit:
        description: Integration configuration for Gerrit
        type: array
        items:
          type: object
          required:
            - host
          properties:
            host:
              description: The hostname of the given Gerrit instance
              visibility: frontend
              type: string
            baseUrl:
              description: The base url for the Gerrit instance.
              visibility: frontend
              type: string
            cloneUrl:
              description: The base url for cloning repos.
              visibility: frontend
              type: string
            username:
              description: The username to use for authenticated requests.
              visibility: secret
              type: string
            password:
              description: >-
                Gerrit password used to authenticate requests. This can be
                either a password

                or a generated access token.
              visibility: secret
              type: string
      github:
        description: Integration configuration for GitHub
        type: array
        items:
          type: object
          required:
            - host
          properties:
            host:
              description: The hostname of the given GitHub instance
              visibility: frontend
              type: string
            token:
              description: Token used to authenticate requests.
              visibility: secret
              type: string
            apiBaseUrl:
              description: The base url for the GitHub API, for example https://api.github.com
              visibility: frontend
              type: string
            rawBaseUrl:
              description: The base url for GitHub raw resources, for example
                https://raw.githubusercontent.com
              visibility: frontend
              type: string
            apps:
              description: GitHub Apps configuration
              type: array
              items:
                type: object
                required:
                  - appId
                  - clientId
                  - clientSecret
                  - privateKey
                  - webhookSecret
                properties:
                  appId:
                    description: The numeric GitHub App ID, string for environment variables
                    type:
                      - string
                      - number
                  privateKey:
                    description: The private key to use for auth against the app
                    visibility: secret
                    type: string
                  webhookSecret:
                    description: The secret used for webhooks
                    visibility: secret
                    type: string
                  clientId:
                    description: The client ID to use
                    type: string
                  clientSecret:
                    description: The client secret to use
                    visibility: secret
                    type: string
                  allowedInstallationOwners:
                    description: >-
                      List of installation owners allowed to be used by this
                      GitHub app. The GitHub UI does not provide a way to list
                      the installations.

                      However you can list the installations with the GitHub API. You can find the list of installations here:

                      https://api.github.com/app/installations

                      The relevant documentation for this is here.

                      https://docs.github.com/en/rest/reference/apps#list-installations-for-the-authenticated-app--code-samples
                    type: array
                    items:
                      type: string
      gitlab:
        description: Integration configuration for GitLab
        type: array
        items:
          type: object
          required:
            - host
          properties:
            host:
              description: The host of the target that this matches on, e.g. "gitlab.com".
              visibility: frontend
              type: string
            apiBaseUrl:
              description: >-
                The base URL of the API of this provider, e.g.

                "https://gitlab.com/api/v4", with no trailing slash.


                May be omitted specifically for public GitLab; then it will be deduced.
              visibility: frontend
              type: string
            token:
              description: |-
                The authorization token to use for requests to this provider.

                If no token is specified, anonymous access is used.
              visibility: secret
              type: string
            baseUrl:
              description: >-
                The baseUrl of this provider, e.g. "https://gitlab.com", which
                is

                passed into the GitLab client.


                If no baseUrl is provided, it will default to https://${host}.
              visibility: frontend
              type: string
      googleGcs:
        description: Integration configuration for Google Cloud Storage
        type: object
        properties:
          clientEmail:
            description: Service account email used to authenticate requests.
            type: string
          privateKey:
            description: Service account private key used to authenticate requests.
            visibility: secret
            type: string
      awsS3:
        description: Integration configuration for AWS S3 Service
        type: array
        items:
          type: object
          properties:
            endpoint:
              description: >-
                AWS Endpoint.

                The endpoint URI to send requests to. The default endpoint is built from the configured region.
              visibility: frontend
              type: string
            s3ForcePathStyle:
              description: >-
                Whether to use path style URLs when communicating with S3.

                Defaults to false.

                This allows providers like LocalStack, Minio and Wasabi (and possibly others) to be used.
              visibility: frontend
              type: boolean
            accessKeyId:
              description: Account access key used to authenticate requests.
              type: string
            secretAccessKey:
              description: Account secret key used to authenticate requests.
              visibility: secret
              type: string
            roleArn:
              description: ARN of the role to be assumed
              type: string
            externalId:
              description: External ID to use when assuming role
              type: string
      gitea:
        description: Integration configuration for Gitea
        type: array
        items:
          type: object
          required:
            - host
          properties:
            host:
              description: The hostname of the given Gitea instance
              visibility: frontend
              type: string
            baseUrl:
              description: The base url for the Gitea instance.
              visibility: frontend
              type: string
            username:
              description: The username to use for authenticated requests.
              visibility: secret
              type: string
            password:
              description: >-
                Gitea password used to authenticate requests. This can be either
                a password

                or a generated access token.
              visibility: secret
              type: string
  airbrake:
    description: Configuration options for the Airbrake plugin
    type: object
    required:
      - apiKey
    properties:
      apiKey:
        description: |-
          The API Key to authenticate requests. More details on how to get this
          here: https://airbrake.io/docs/api/#authentication
        visibility: secret
        type: string
  apacheAirflow:
    description: Configurations for the Apache Airflow plugin
    type: object
    required:
      - baseUrl
    properties:
      baseUrl:
        description: The base url of the Apache Airflow installation.
        visibility: frontend
        type: string
  azureDevOps:
    description: Configuration options for the azure-devops-backend plugin
    type: object
    required:
      - host
      - organization
      - token
    properties:
      host:
        description: The hostname of the given Azure instance
        type: string
      token:
        description: Token used to authenticate requests.
        visibility: secret
        type: string
      organization:
        description: The organization of the given Azure instance
        type: string
  catalog:
    type: object
    description: Configuration options for the catalog plugin.
    properties:
      experimentalPagination:
        deepVisibility: frontend
        anyOf:
          - type: object
            properties:
              limit:
                type: number
          - type: boolean
      rules:
        description: |-
          Rules to apply to all catalog entities, from any location.

          An undefined list of matchers means match all, an empty list of
          matchers means match none.

          This is commonly used to put in what amounts to an allowlist of kinds
          that regular users of Backstage are permitted to register locations
          for. This can be used to stop them from registering yaml files
          describing for example a Group entity called "admin" that they make
          themselves members of, or similar.
        type: array
        items:
          type: object
          required:
            - allow
          properties:
            allow:
              description: |-
                Allow entities of these particular kinds.

                E.g. ["Component", "API", "Template", "Location"]
              type: array
              items:
                type: string
            locations:
              description: >-
                Limit this rule to a specific location


                Example with a fixed location
                 { "type": "url", "exact": "https://github.com/a/b/blob/file.yaml"}

                Example using a Regex
                 { "type": "url", "pattern": "https://github.com/org/*\/blob/master/*.yaml"}

                Using both exact and pattern will result in an error starting the application
              type: array
              items:
                type: object
                required:
                  - type
                properties:
                  type:
                    description: The type of location, e.g. "url".
                    type: string
                  exact:
                    description: |-
                      The exact location, e.g.
                      "https://github.com/org/repo/blob/master/users.yaml".

                      The exact location can also be used to match on locations
                      that contain glob characters themselves, e.g.
                      "https://github.com/org/*\/blob/master/*.yaml".
                    type: string
                  pattern:
                    description: |-
                      The pattern allowed for the location, e.g.
                      "https://github.com/org/*\/blob/master/*.yaml".
                    type: string
      readonly:
        description: >-
          Readonly defines whether the catalog allows writes after startup.


          Setting 'readonly=false' allows users to register their own components.

          This is the default value.


          Setting 'readonly=true' configures catalog to only allow reads. This can

          be used in combination with static locations to only serve operator

          provided locations. Effectively this removes the ability to register new

          components to a running backstage instance.
        type: boolean
      locations:
        description: >-
          A set of static locations that the catalog shall always keep itself

          up-to-date with. This is commonly used for large, permanent integrations

          that are defined by the Backstage operators at an organization, rather

          than individual things that users register dynamically.


          These have (optional) rules of their own. These override what the global

          rules above specify. This way, you can prevent everybody from register

          e.g. User and Group entities, except for one or a few static locations

          that have those two kinds explicitly allowed.


          For example:


          ```yaml

          rules:
            - allow: [Component, API, Template, Location]
          locations:
            - type: url
              target: https://github.com/org/repo/blob/master/users.yaml
              rules:
                - allow: [User, Group]
            - type: url
              target: https://github.com/org/repo/blob/master/systems.yaml
              rules:
                - allow: [System]
          ```
        type: array
        items:
          type: object
          required:
            - target
            - type
          properties:
            type:
              description: The type of location, e.g. "url".
              type: string
            target:
              description: |-
                The target URL of the location, e.g.
                "https://github.com/org/repo/blob/master/users.yaml".
              type: string
            rules:
              description: |-
                Optional extra rules that apply to this particular location.

                These override the global rules above.
              type: array
              items:
                type: object
                required:
                  - allow
                properties:
                  allow:
                    description: |-
                      Allow entities of these particular kinds.

                      E.g. ["Group", "User"]
                    type: array
                    items:
                      type: string
      orphanStrategy:
        description: >-
          The strategy to use for entities that are orphaned, i.e. no longer
          have

          any other entities or providers referencing them. The default value is

          "keep".
        enum:
          - delete
          - keep
        type: string
      stitchingStrategy:
        description: The strategy to use when stitching together the final entities.
        anyOf:
          - type: object
            properties:
              mode:
                description: Perform stitching in-band immediately when needed
                type: string
                const: immediate
            required:
              - mode
          - type: object
            properties:
              mode:
                description: Defer stitching to be performed asynchronously
                type: string
                const: deferred
            required:
              - mode
      processingInterval:
        description: The interval at which the catalog should process its entities.
      processors:
        type: object
        description: List of processor-specific options and attributes
        properties:
          awsOrganization:
            description: AwsOrganizationCloudAccountProcessor configuration
            type: object
            required:
              - provider
            properties:
              provider:
                type: object
                properties:
                  roleArn:
                    description: The role to be assumed by this processor
                    type: string
          githubMultiOrg:
            description: GithubMultiOrgReaderProcessor configuration
            type: object
            required:
              - orgs
            properties:
              orgs:
                description: The configuration parameters for each GitHub org to process.
                type: array
                items:
                  type: object
                  required:
                    - name
                  properties:
                    name:
                      description: The name of the GitHub org to process.
                      type: string
                    groupNamespace:
                      description: |-
                        The namespace of the group created for this org.

                        Defaults to org name if omitted.
                      type: string
                    userNamespace:
                      description: |-
                        The namespace of the users created from this org.

                        Defaults to empty string if omitted.
                      type: string
          ldapOrg:
            description: LdapOrgReaderProcessor configuration
            type: object
            required:
              - providers
            properties:
              providers:
                description: The configuration parameters for each single LDAP provider.
                type: array
                items:
                  type: object
                  required:
                    - groups
                    - target
                    - users
                  properties:
                    target:
                      description: |-
                        The prefix of the target that this matches on, e.g.
                        "ldaps://ds.example.net", with no trailing slash.
                      type: string
                    bind:
                      description: >-
                        The settings to use for the bind command. If none are
                        specified,

                        the bind command is not issued.
                      type: object
                      required:
                        - dn
                        - secret
                      properties:
                        dn:
                          description: >-
                            The DN of the user to auth as.


                            E.g. "uid=ldap-robot,ou=robots,ou=example,dc=example,dc=net"
                          type: string
                        secret:
                          description: The secret of the user to auth as (its password).
                          visibility: secret
                          type: string
                    tls:
                      description: TLS settings
                      type: object
                      properties:
                        rejectUnauthorized:
                          type: boolean
                    users:
                      description: The settings that govern the reading and interpretation of users.
                      type: object
                      required:
                        - dn
                        - options
                      properties:
                        dn:
                          description: |-
                            The DN under which users are stored.

                            E.g. "ou=people,ou=example,dc=example,dc=net"
                          type: string
                        options:
                          description: >-
                            The search options to use. The default is scope
                            "one" and

                            attributes "*" and "+".


                            It is common to want to specify a filter, to narrow down the set

                            of matching items.
                          type: object
                          properties:
                            scope:
                              enum:
                                - base
                                - one
                                - sub
                              type: string
                            filter:
                              type: string
                            attributes:
                              anyOf:
                                - type: array
                                  items:
                                    type: string
                                - type: string
                            sizeLimit:
                              type: number
                            timeLimit:
                              type: number
                            derefAliases:
                              type: number
                            typesOnly:
                              type: boolean
                            paged:
                              anyOf:
                                - type: object
                                  properties:
                                    pageSize:
                                      type: number
                                    pagePause:
                                      type: boolean
                                - type: boolean
                        set:
                          description: >-
                            JSON paths (on a.b.c form) and hard coded values to
                            set on those

                            paths.


                            This can be useful for example if you want to hard code a

                            namespace or similar on the generated entities.
                          type: object
                        map:
                          description: Mappings from well known entity fields, to LDAP attribute names
                          type: object
                          properties:
                            rdn:
                              description: >-
                                The name of the attribute that holds the
                                relative

                                distinguished name of each entry. Defaults to "uid".
                              type: string
                            name:
                              description: >-
                                The name of the attribute that shall be used for
                                the value of

                                the metadata.name field of the entity. Defaults to "uid".
                              type: string
                            description:
                              description: >-
                                The name of the attribute that shall be used for
                                the value of

                                the metadata.description field of the entity.
                              type: string
                            displayName:
                              description: >-
                                The name of the attribute that shall be used for
                                the value of

                                the spec.profile.displayName field of the entity. Defaults to

                                "cn".
                              type: string
                            email:
                              description: >-
                                The name of the attribute that shall be used for
                                the value of

                                the spec.profile.email field of the entity. Defaults to

                                "mail".
                              type: string
                            picture:
                              description: >-
                                The name of the attribute that shall be used for
                                the value of

                                the spec.profile.picture field of the entity.
                              type: string
                            memberOf:
                              description: >-
                                The name of the attribute that shall be used for
                                the values of

                                the spec.memberOf field of the entity. Defaults to "memberOf".
                              type: string
                    groups:
                      description: The settings that govern the reading and interpretation of groups.
                      type: object
                      required:
                        - dn
                        - options
                      properties:
                        dn:
                          description: |-
                            The DN under which groups are stored.

                            E.g. "ou=people,ou=example,dc=example,dc=net"
                          type: string
                        options:
                          description: >-
                            The search options to use. The default is scope
                            "one" and

                            attributes "*" and "+".


                            It is common to want to specify a filter, to narrow down the set

                            of matching items.
                          type: object
                          properties:
                            scope:
                              enum:
                                - base
                                - one
                                - sub
                              type: string
                            filter:
                              type: string
                            attributes:
                              anyOf:
                                - type: array
                                  items:
                                    type: string
                                - type: string
                            sizeLimit:
                              type: number
                            timeLimit:
                              type: number
                            derefAliases:
                              type: number
                            typesOnly:
                              type: boolean
                            paged:
                              anyOf:
                                - type: object
                                  properties:
                                    pageSize:
                                      type: number
                                    pagePause:
                                      type: boolean
                                - type: boolean
                        set:
                          description: >-
                            JSON paths (on a.b.c form) and hard coded values to
                            set on those

                            paths.


                            This can be useful for example if you want to hard code a

                            namespace or similar on the generated entities.
                          type: object
                        map:
                          description: Mappings from well known entity fields, to LDAP attribute names
                          type: object
                          properties:
                            rdn:
                              description: >-
                                The name of the attribute that holds the
                                relative

                                distinguished name of each entry. Defaults to "cn".
                              type: string
                            name:
                              description: >-
                                The name of the attribute that shall be used for
                                the value of

                                the metadata.name field of the entity. Defaults to "cn".
                              type: string
                            description:
                              description: >-
                                The name of the attribute that shall be used for
                                the value of

                                the metadata.description field of the entity. Defaults to

                                "description".
                              type: string
                            type:
                              description: >-
                                The name of the attribute that shall be used for
                                the value of

                                the spec.type field of the entity. Defaults to "groupType".
                              type: string
                            displayName:
                              description: >-
                                The name of the attribute that shall be used for
                                the value of

                                the spec.profile.displayName field of the entity. Defaults to

                                "cn".
                              type: string
                            email:
                              description: >-
                                The name of the attribute that shall be used for
                                the value of

                                the spec.profile.email field of the entity.
                              type: string
                            picture:
                              description: >-
                                The name of the attribute that shall be used for
                                the value of

                                the spec.profile.picture field of the entity.
                              type: string
                            memberOf:
                              description: >-
                                The name of the attribute that shall be used for
                                the values of

                                the spec.parent field of the entity. Defaults to "memberOf".
                              type: string
                            members:
                              description: >-
                                The name of the attribute that shall be used for
                                the values of

                                the spec.children field of the entity. Defaults to "member".
                              type: string
          microsoftGraphOrg:
            description: MicrosoftGraphOrgReaderProcessor configuration
            deprecated: Use `catalog.providers.microsoftGraphOrg` instead.
            type: object
            required:
              - providers
            properties:
              providers:
                description: The configuration parameters for each single Microsoft Graph
                  provider.
                type: array
                items:
                  type: object
                  required:
                    - target
                    - tenantId
                  properties:
                    target:
                      description: >-
                        The prefix of the target that this matches on, e.g.

                        "https://graph.microsoft.com/v1.0", with no trailing slash.
                      type: string
                    authority:
                      description: |-
                        The auth authority used.

                        Default value "https://login.microsoftonline.com"
                      type: string
                    tenantId:
                      description: The tenant whose org data we are interested in.
                      type: string
                    clientId:
                      description: The OAuth client ID to use for authenticating requests.
                      type: string
                    clientSecret:
                      description: The OAuth client secret to use for authenticating requests.
                      visibility: secret
                      type: string
                    userFilter:
                      description: |-
                        The filter to apply to extract users.

                        E.g. "accountEnabled eq true and userType eq 'member'"
                      type: string
                    groupFilter:
                      description: |-
                        The filter to apply to extract groups.

                        E.g. "securityEnabled eq false and mailEnabled eq true"
                      type: string
                    userSelect:
                      description: |-
                        The fields to be fetched on query.

                        E.g. ["id", "displayName", "description"]
                      type: array
                      items:
                        type: string
                    groupSearch:
                      description: >-
                        The search criteria to apply to extract users by groups
                        memberships.


                        E.g. "\"displayName:-team\"" would only match groups which contain '-team'
                      type: string
                    groupSelect:
                      description: |-
                        The fields to be fetched on query.

                        E.g. ["id", "displayName", "description"]
                      type: array
                      items:
                        type: string
                    userGroupMemberFilter:
                      description: >-
                        The filter to apply to extract users by groups
                        memberships.


                        E.g. "displayName eq 'Backstage Users'"
                      type: string
                    userGroupMemberSearch:
                      description: >-
                        The search criteria to apply to extract groups.


                        E.g. "\"displayName:-team\"" would only match groups which contain '-team'
                      type: string
      providers:
        type: object
        description: List of provider-specific options and attributes
        properties:
          awsS3:
            description: |-
              AwsS3EntityProvider configuration

              Uses "default" as default id for the single config variant.
            anyOf:
              - type: object
                properties:
                  bucketName:
                    description: (Required) AWS S3 Bucket Name
                    type: string
                  prefix:
                    description: >-
                      (Optional) AWS S3 Object key prefix

                      If not set, all keys will be accepted, no filtering will be applied.
                    type: string
                  region:
                    description: >-
                      (Optional) AWS Region.

                      If not set, AWS_REGION environment variable or aws config file will be used.
                    type: string
                  accountId:
                    description: |-
                      (Optional) AWS Account id.
                      If not set, main account is used.
                    type: string
                  schedule:
                    description: (Optional) TaskScheduleDefinition for the refresh.
                required:
                  - bucketName
              - type: object
                additionalProperties:
                  type: object
                  required:
                    - bucketName
                  properties:
                    bucketName:
                      description: (Required) AWS S3 Bucket Name
                      type: string
                    prefix:
                      description: >-
                        (Optional) AWS S3 Object key prefix

                        If not set, all keys will be accepted, no filtering will be applied.
                      type: string
                    region:
                      description: >-
                        (Optional) AWS Region.

                        If not set, AWS_REGION environment variable or aws config file will be used.
                      type: string
                    accountId:
                      description: |-
                        (Optional) AWS Account id.
                        If not set, main account is used.
                      type: string
                    schedule:
                      description: (Optional) TaskScheduleDefinition for the refresh.
          backstageOpenapi:
            description: BackstageOpenApiEntityProvider configuration
            type: object
            required:
              - plugins
            properties:
              plugins:
                description: A list of plugins, whose OpenAPI specs you want to collate in
                  `InternalOpenApiDocumentationProvider`.
                type: array
                items:
                  type: string
          azureDevOps:
            description: AzureDevopsEntityProvider configuration
            type: object
            additionalProperties:
              type: object
              required:
                - host
                - organization
                - project
              properties:
                host:
                  description: (Optional) The DevOps host; leave empty for `dev.azure.com`,
                    otherwise set to your self-hosted instance host.
                  type: string
                organization:
                  description: (Required) Your organization slug.
                  type: string
                project:
                  description: (Required) Your project slug.
                  type: string
                repository:
                  description: >-
                    (Optional) The repository name. Wildcards are supported as
                    show on the examples above.

                    If not set, all repositories will be searched.
                  type: string
                path:
                  description: >-
                    (Optional) Where to find catalog-info.yaml files. Wildcards
                    are supported.

                    If not set, defaults to /catalog-info.yaml.
                  type: string
                schedule:
                  description: (Optional) TaskScheduleDefinition for the refresh.
          bitbucketCloud:
            description: |-
              BitbucketCloudEntityProvider configuration

              Uses "default" as default id for the single config variant.
            anyOf:
              - type: object
                properties:
                  catalogPath:
                    description: (Optional) Path to the catalog file. Default to
                      "/catalog-info.yaml".
                    visibility: frontend
                    type: string
                  workspace:
                    description: (Required) Your workspace.
                    visibility: frontend
                    type: string
                  filters:
                    description: (Optional) Filters applied to discovered catalog files in
                      repositories.
                    visibility: frontend
                    type: object
                    properties:
                      repoSlug:
                        description: (Optional) Regular expression filter for the repository slug.
                        visibility: frontend
                        type: string
                      projectKey:
                        description: (Optional) Regular expression filter for the project key.
                        visibility: frontend
                        type: string
                  schedule:
                    description: (Optional) TaskScheduleDefinition for the discovery.
                required:
                  - workspace
              - type: object
                additionalProperties:
                  type: object
                  required:
                    - workspace
                  properties:
                    catalogPath:
                      description: (Optional) Path to the catalog file. Default to
                        "/catalog-info.yaml".
                      visibility: frontend
                      type: string
                    workspace:
                      description: (Required) Your workspace.
                      visibility: frontend
                      type: string
                    filters:
                      description: (Optional) Filters applied to discovered catalog files in
                        repositories.
                      visibility: frontend
                      type: object
                      properties:
                        repoSlug:
                          description: (Optional) Regular expression filter for the repository slug.
                          visibility: frontend
                          type: string
                        projectKey:
                          description: (Optional) Regular expression filter for the project key.
                          visibility: frontend
                          type: string
                    schedule:
                      description: (Optional) TaskScheduleDefinition for the discovery.
          bitbucketServer:
            description: |-
              BitbucketServerEntityProvider configuration

              Uses "default" as default id for the single config variant.
            anyOf:
              - type: object
                properties:
                  catalogPath:
                    description: (Optional) Path to the catalog file. Default to
                      "/catalog-info.yaml".
                    visibility: frontend
                    type: string
                  filters:
                    description: (Optional) Filters applied to discovered catalog files in
                      repositories.
                    visibility: frontend
                    type: object
                    properties:
                      repoSlug:
                        description: (Optional) Regular expression filter for the repository slug.
                        visibility: frontend
                        type: string
                      projectKey:
                        description: (Optional) Regular expression filter for the project key.
                        visibility: frontend
                        type: string
                  schedule:
                    description: (Optional) TaskScheduleDefinition for the refresh.
              - type: object
                additionalProperties:
                  type: object
                  properties:
                    catalogPath:
                      description: (Optional) Path to the catalog file. Default to
                        "/catalog-info.yaml".
                      visibility: frontend
                      type: string
                    filters:
                      description: (Optional) Filters applied to discovered catalog files in
                        repositories.
                      visibility: frontend
                      type: object
                      properties:
                        repoSlug:
                          description: (Optional) Regular expression filter for the repository slug.
                          visibility: frontend
                          type: string
                        projectKey:
                          description: (Optional) Regular expression filter for the project key.
                          visibility: frontend
                          type: string
                    schedule:
                      description: (Optional) TaskScheduleDefinition for the refresh.
          gerrit:
            description: |-
              GerritEntityProvider configuration

              Maps provider id with configuration.
            type: object
            additionalProperties:
              type: object
              required:
                - host
                - query
              properties:
                host:
                  description: (Required) The host of the Gerrit integration to use.
                  type: string
                query:
                  description: >-
                    (Required) The query to use for the "List Projects" API
                    call. Used to limit the

                    scope of the projects that the provider tries to ingest.
                  type: string
                branch:
                  description: >-
                    (Optional) Branch.

                    The branch where the provider will try to find entities. Defaults to "master".
                  type: string
          gcp:
            description: GCPCatalogModuleConfig configuration
            type: object
            properties:
              gke:
                description: Config for GKE clusters
                type: object
                required:
                  - parents
                  - schedule
                properties:
                  parents:
                    description: Locations to list clusters from
                    type: array
                    items:
                      type: string
                  schedule:
                    description: (Optional) TaskScheduleDefinition for the refresh.
          github:
            description: |-
              GithubEntityProvider configuration

              Uses "default" as default id for the single config variant.
            anyOf:
              - type: object
                properties:
                  host:
                    description: >-
                      (Optional) The hostname of your GitHub Enterprise
                      instance.

                      Default: `github.com`.
                    type: string
                  organization:
                    description: (Required) Name of your organization account/workspace.
                    type: string
                  catalogPath:
                    description: >-
                      (Optional) Path where to look for `catalog-info.yaml`
                      files.

                      You can use wildcards - `*` or `**` - to search the path and/or the filename

                      Default: `/catalog-info.yaml`.
                    type: string
                  filters:
                    description: (Optional) Filter configuration.
                    type: object
                    properties:
                      branch:
                        description: (Optional) String used to filter results based on the branch name.
                        type: string
                      repository:
                        description: (Optional) Regular expression used to filter results based on the
                          repository name.
                        type: string
                      allowForks:
                        description: (Optional) Allow Forks to be evaluated.
                        type: boolean
                      topic:
                        description: (Optional) GitHub topic-based filters.
                        type: object
                        properties:
                          include:
                            description: >-
                              (Optional) An array of strings used to filter in
                              results based on their associated GitHub topics.

                              If configured, only repositories with one (or more) topic(s) present in the inclusion

                              filter will be ingested.


                              If `include` and `exclude` are used, `exclude` has higher priority.
                            type: array
                            items:
                              type: string
                          exclude:
                            description: >-
                              (Optional) An array of strings used to filter out
                              results based on their associated GitHub topics.

                              If configured, all repositories _except_ those with one (or more) topics(s) present in

                              the exclusion filter will be ingested.


                              If `include` and `exclude` are used, `exclude` has higher priority.
                            type: array
                            items:
                              type: string
                      visibility:
                        description: (Optional) GitHub repository visibility filter.
                        type: array
                        items:
                          enum:
                            - internal
                            - private
                            - public
                          type: string
                  schedule:
                    description: (Optional) TaskScheduleDefinition for the refresh.
                required:
                  - organization
              - type: object
                additionalProperties:
                  type: object
                  required:
                    - organization
                  properties:
                    host:
                      description: >-
                        (Optional) The hostname of your GitHub Enterprise
                        instance.

                        Default: `github.com`.
                      type: string
                    organization:
                      description: (Required) Name of your organization account/workspace.
                      type: string
                    catalogPath:
                      description: >-
                        (Optional) Path where to look for `catalog-info.yaml`
                        files.

                        You can use wildcards - `*` or `**` - to search the path and/or the filename

                        Default: `/catalog-info.yaml`.
                      type: string
                    filters:
                      description: (Optional) Filter configuration.
                      type: object
                      properties:
                        branch:
                          description: (Optional) String used to filter results based on the branch name.
                          type: string
                        repository:
                          description: (Optional) Regular expression used to filter results based on the
                            repository name.
                          type: string
                        allowForks:
                          description: (Optional) GitHub topic-based filters.
                          type: boolean
                        topic:
                          description: (Optional) Allow Forks to be evaluated.
                          type: object
                          properties:
                            include:
                              description: >-
                                (Optional) An array of strings used to filter in
                                results based on their associated GitHub topics.

                                If configured, only repositories with one (or more) topic(s) present in the inclusion

                                filter will be ingested.


                                If `include` and `exclude` are used, `exclude` has higher priority.
                              type: array
                              items:
                                type: string
                            exclude:
                              description: >-
                                (Optional) An array of strings used to filter
                                out results based on their associated GitHub
                                topics.

                                If configured, all repositories _except_ those with one (or more) topics(s) present in

                                the exclusion filter will be ingested.


                                If `include` and `exclude` are used, `exclude` has higher priority.
                              type: array
                              items:
                                type: string
                        visibility:
                          description: (Optional) GitHub repository visibility filter.
                          type: array
                          items:
                            enum:
                              - internal
                              - private
                              - public
                            type: string
                    schedule:
                      description: (Optional) TaskScheduleDefinition for the refresh.
          githubOrg:
            description: Configuration for catalogModuleGithubOrgEntityProvider
            anyOf:
              - type: object
                properties:
                  id:
                    description: >-
                      A stable id for this provider. Entities from this provider
                      will

                      be associated with this ID, so you should take care not to change

                      it over time since that may lead to orphaned entities and/or

                      conflicts.
                    type: string
                  githubUrl:
                    description: The target that this provider should consume.
                    type: string
                  orgs:
                    description: >-
                      The list of the GitHub orgs to consume. By default will
                      consume all accessible

                      orgs on the given GitHub instance (support for GitHub App integration only).
                    type: array
                    items:
                      type: string
                  schedule:
                    description: The refresh schedule to use.
                required:
                  - githubUrl
                  - id
                  - schedule
              - type: array
                items:
                  type: object
                  required:
                    - githubUrl
                    - id
                    - schedule
                  properties:
                    id:
                      description: >-
                        A stable id for this provider. Entities from this
                        provider will

                        be associated with this ID, so you should take care not to change

                        it over time since that may lead to orphaned entities and/or

                        conflicts.
                      type: string
                    githubUrl:
                      description: The target that this provider should consume.
                      type: string
                    orgs:
                      description: >-
                        The list of the GitHub orgs to consume. By default will
                        consume all accessible

                        orgs on the given GitHub instance (support for GitHub App integration only).
                      type: array
                      items:
                        type: string
                    schedule:
                      description: The refresh schedule to use.
          gitlab:
            description: GitlabDiscoveryEntityProvider configuration
            type: object
            additionalProperties:
              type: object
              required:
                - host
              properties:
                host:
                  description: (Required) Gitlab's host name.
                  type: string
                group:
                  description: >-
                    (Optional) Gitlab's group[/subgroup] where the discovery is
                    done.

                    If not defined the whole instance will be scanned.
                  type: string
                branch:
                  description: >-
                    (Optional) Default branch to read the catalog-info.yaml
                    file.

                    If not set, 'master' will be used.
                  type: string
                entityFilename:
                  description: |-
                    (Optional) The name used for the catalog file.
                    If not set, 'catalog-info.yaml' will be used.
                  type: string
                schedule:
                  description: (Optional) TaskScheduleDefinition for the refresh.
                projectPattern:
                  description: (Optional) RegExp for the Project Name Pattern
                  type: string
                userPattern:
                  description: (Optional) RegExp for the User Name Pattern
                  type: string
                groupPattern:
                  description: (Optional) RegExp for the Group Name Pattern
                  type: string
                skipForkedRepos:
                  description: (Optional) Skip forked repository
                  type: boolean
          microsoftGraphOrg:
            description: MicrosoftGraphOrgEntityProvider configuration.
            anyOf:
              - type: object
                properties:
                  target:
                    description: >-
                      The prefix of the target that this matches on, e.g.

                      "https://graph.microsoft.com/v1.0", with no trailing slash.
                    type: string
                  authority:
                    description: |-
                      The auth authority used.

                      Default value "https://login.microsoftonline.com"
                    type: string
                  tenantId:
                    description: The tenant whose org data we are interested in.
                    type: string
                  clientId:
                    description: The OAuth client ID to use for authenticating requests.
                    type: string
                  clientSecret:
                    description: The OAuth client secret to use for authenticating requests.
                    visibility: secret
                    type: string
                  queryMode:
                    description: >-
                      By default, the Microsoft Graph API only provides the
                      basic feature set

                      for querying. Certain features are limited to advanced query capabilities

                      (see https://docs.microsoft.com/en-us/graph/aad-advanced-queries)

                      and need to be enabled.


                      Some features like `$expand` are not available for advanced queries, though.
                    type: string
                  user:
                    type: object
                    properties:
                      expand:
                        description: |-
                          The "expand" argument to apply to users.

                          E.g. "manager".
                        type: string
                      filter:
                        description: |-
                          The filter to apply to extract users.

                          E.g. "accountEnabled eq true and userType eq 'member'"
                        type: string
                  group:
                    type: object
                    properties:
                      expand:
                        description: |-
                          The "expand" argument to apply to groups.

                          E.g. "member".
                        type: string
                      filter:
                        description: >-
                          The filter to apply to extract groups.


                          E.g. "securityEnabled eq false and mailEnabled eq true"
                        type: string
                      search:
                        description: >-
                          The search criteria to apply to extract users by
                          groups memberships.


                          E.g. "\"displayName:-team\"" would only match groups which contain '-team'
                        type: string
                      select:
                        description: |-
                          The fields to be fetched on query.

                          E.g. ["id", "displayName", "description"]
                        type: array
                        items:
                          type: string
                  userGroupMember:
                    type: object
                    properties:
                      filter:
                        description: >-
                          The filter to apply to extract users by groups
                          memberships.


                          E.g. "displayName eq 'Backstage Users'"
                        type: string
                      search:
                        description: >-
                          The search criteria to apply to extract groups.


                          E.g. "\"displayName:-team\"" would only match groups which contain '-team'
                        type: string
                  schedule:
                    description: (Optional) TaskScheduleDefinition for the refresh.
                required:
                  - target
                  - tenantId
              - type: object
                additionalProperties:
                  type: object
                  required:
                    - clientId
                    - clientSecret
                    - target
                    - tenantId
                  properties:
                    target:
                      description: >-
                        The prefix of the target that this matches on, e.g.

                        "https://graph.microsoft.com/v1.0", with no trailing slash.
                      type: string
                    authority:
                      description: |-
                        The auth authority used.

                        Default value "https://login.microsoftonline.com"
                      type: string
                    tenantId:
                      description: The tenant whose org data we are interested in.
                      type: string
                    clientId:
                      description: The OAuth client ID to use for authenticating requests.
                      type: string
                    clientSecret:
                      description: The OAuth client secret to use for authenticating requests.
                      visibility: secret
                      type: string
                    queryMode:
                      description: >-
                        By default, the Microsoft Graph API only provides the
                        basic feature set

                        for querying. Certain features are limited to advanced query capabilities

                        (see https://docs.microsoft.com/en-us/graph/aad-advanced-queries)

                        and need to be enabled.


                        Some features like `$expand` are not available for advanced queries, though.
                      type: string
                    user:
                      type: object
                      properties:
                        filter:
                          description: >-
                            The filter to apply to extract users.


                            E.g. "accountEnabled eq true and userType eq 'member'"
                          type: string
                    group:
                      type: object
                      properties:
                        filter:
                          description: >-
                            The filter to apply to extract groups.


                            E.g. "securityEnabled eq false and mailEnabled eq true"
                          type: string
                        search:
                          description: >-
                            The search criteria to apply to extract users by
                            groups memberships.


                            E.g. "\"displayName:-team\"" would only match groups which contain '-team'
                          type: string
                        select:
                          description: |-
                            The fields to be fetched on query.

                            E.g. ["id", "displayName", "description"]
                          type: array
                          items:
                            type: string
                    userGroupMember:
                      type: object
                      properties:
                        filter:
                          description: >-
                            The filter to apply to extract users by groups
                            memberships.


                            E.g. "displayName eq 'Backstage Users'"
                          type: string
                        search:
                          description: >-
                            The search criteria to apply to extract groups.


                            E.g. "\"displayName:-team\"" would only match groups which contain '-team'
                          type: string
                    schedule:
                      description: (Optional) TaskScheduleDefinition for the refresh.
          puppetdb:
            description: PuppetDB Entity Provider configuration. Uses "default" as default
              ID for the single config variant.
            anyOf:
              - type: object
                properties:
                  baseUrl:
                    description: (Required) The base URL of PuppetDB API instance.
                    type: string
                  query:
                    description: (Optional) PQL query to filter PuppetDB nodes.
                    type: string
                  schedule:
                    description: (Optional) Task schedule definition for the refresh.
                required:
                  - baseUrl
              - type: object
                additionalProperties:
                  type: object
                  required:
                    - baseUrl
                  properties:
                    baseUrl:
                      description: (Required) The base URL of PuppetDB API instance.
                      type: string
                    query:
                      description: (Optional) PQL query to filter PuppetDB nodes.
                      type: string
                    schedule:
                      description: (Optional) Task schedule definition for the refresh.
      import:
        description: List of import flow specific options and attributes
        type: object
        properties:
          entityFilename:
            description: Catalog entity descriptor filename, defaults to "catalog-info.yaml"
            visibility: frontend
            type: string
          pullRequestBranchName:
            description: >-
              A branch name used in pull request when registering existing
              component via UI

              Valid git refname required, see: https://git-scm.com/docs/git-check-ref-format

              Defaults to "backstage-integration"
            visibility: frontend
            type: string
  ldap:
    description: LdapOrgEntityProvider / LdapOrgReaderProcessor configuration
    type: object
    required:
      - providers
    properties:
      providers:
        description: The configuration parameters for each single LDAP provider.
        type: array
        items:
          type: object
          required:
            - groups
            - target
            - users
          properties:
            target:
              description: |-
                The prefix of the target that this matches on, e.g.
                "ldaps://ds.example.net", with no trailing slash.
              type: string
            bind:
              description: |-
                The settings to use for the bind command. If none are specified,
                the bind command is not issued.
              type: object
              required:
                - dn
                - secret
              properties:
                dn:
                  description: |-
                    The DN of the user to auth as.

                    E.g. "uid=ldap-robot,ou=robots,ou=example,dc=example,dc=net"
                  type: string
                secret:
                  description: The secret of the user to auth as (its password).
                  visibility: secret
                  type: string
            tls:
              description: TLS settings
              type: object
              properties:
                rejectUnauthorized:
                  type: boolean
            users:
              description: The settings that govern the reading and interpretation of users.
              type: object
              required:
                - dn
                - options
              properties:
                dn:
                  description: |-
                    The DN under which users are stored.

                    E.g. "ou=people,ou=example,dc=example,dc=net"
                  type: string
                options:
                  description: >-
                    The search options to use. The default is scope "one" and

                    attributes "*" and "+".


                    It is common to want to specify a filter, to narrow down the set

                    of matching items.
                  type: object
                  properties:
                    scope:
                      enum:
                        - base
                        - one
                        - sub
                      type: string
                    filter:
                      type: string
                    attributes:
                      anyOf:
                        - type: array
                          items:
                            type: string
                        - type: string
                    sizeLimit:
                      type: number
                    timeLimit:
                      type: number
                    derefAliases:
                      type: number
                    typesOnly:
                      type: boolean
                    paged:
                      anyOf:
                        - type: object
                          properties:
                            pageSize:
                              type: number
                            pagePause:
                              type: boolean
                        - type: boolean
                set:
                  description: >-
                    JSON paths (on a.b.c form) and hard coded values to set on
                    those

                    paths.


                    This can be useful for example if you want to hard code a

                    namespace or similar on the generated entities.
                  type: object
                map:
                  description: Mappings from well known entity fields, to LDAP attribute names
                  type: object
                  properties:
                    rdn:
                      description: |-
                        The name of the attribute that holds the relative
                        distinguished name of each entry. Defaults to "uid".
                      type: string
                    name:
                      description: >-
                        The name of the attribute that shall be used for the
                        value of

                        the metadata.name field of the entity. Defaults to "uid".
                      type: string
                    description:
                      description: >-
                        The name of the attribute that shall be used for the
                        value of

                        the metadata.description field of the entity.
                      type: string
                    displayName:
                      description: >-
                        The name of the attribute that shall be used for the
                        value of

                        the spec.profile.displayName field of the entity. Defaults to

                        "cn".
                      type: string
                    email:
                      description: >-
                        The name of the attribute that shall be used for the
                        value of

                        the spec.profile.email field of the entity. Defaults to

                        "mail".
                      type: string
                    picture:
                      description: >-
                        The name of the attribute that shall be used for the
                        value of

                        the spec.profile.picture field of the entity.
                      type: string
                    memberOf:
                      description: >-
                        The name of the attribute that shall be used for the
                        values of

                        the spec.memberOf field of the entity. Defaults to "memberOf".
                      type: string
            groups:
              description: The settings that govern the reading and interpretation of groups.
              type: object
              required:
                - dn
                - options
              properties:
                dn:
                  description: |-
                    The DN under which groups are stored.

                    E.g. "ou=people,ou=example,dc=example,dc=net"
                  type: string
                options:
                  description: >-
                    The search options to use. The default is scope "one" and

                    attributes "*" and "+".


                    It is common to want to specify a filter, to narrow down the set

                    of matching items.
                  type: object
                  properties:
                    scope:
                      enum:
                        - base
                        - one
                        - sub
                      type: string
                    filter:
                      type: string
                    attributes:
                      anyOf:
                        - type: array
                          items:
                            type: string
                        - type: string
                    sizeLimit:
                      type: number
                    timeLimit:
                      type: number
                    derefAliases:
                      type: number
                    typesOnly:
                      type: boolean
                    paged:
                      anyOf:
                        - type: object
                          properties:
                            pageSize:
                              type: number
                            pagePause:
                              type: boolean
                        - type: boolean
                set:
                  description: >-
                    JSON paths (on a.b.c form) and hard coded values to set on
                    those

                    paths.


                    This can be useful for example if you want to hard code a

                    namespace or similar on the generated entities.
                  type: object
                map:
                  description: Mappings from well known entity fields, to LDAP attribute names
                  type: object
                  properties:
                    rdn:
                      description: |-
                        The name of the attribute that holds the relative
                        distinguished name of each entry. Defaults to "cn".
                      type: string
                    name:
                      description: >-
                        The name of the attribute that shall be used for the
                        value of

                        the metadata.name field of the entity. Defaults to "cn".
                      type: string
                    description:
                      description: >-
                        The name of the attribute that shall be used for the
                        value of

                        the metadata.description field of the entity. Defaults to

                        "description".
                      type: string
                    type:
                      description: >-
                        The name of the attribute that shall be used for the
                        value of

                        the spec.type field of the entity. Defaults to "groupType".
                      type: string
                    displayName:
                      description: >-
                        The name of the attribute that shall be used for the
                        value of

                        the spec.profile.displayName field of the entity. Defaults to

                        "cn".
                      type: string
                    email:
                      description: >-
                        The name of the attribute that shall be used for the
                        value of

                        the spec.profile.email field of the entity.
                      type: string
                    picture:
                      description: >-
                        The name of the attribute that shall be used for the
                        value of

                        the spec.profile.picture field of the entity.
                      type: string
                    memberOf:
                      description: >-
                        The name of the attribute that shall be used for the
                        values of

                        the spec.parent field of the entity. Defaults to "memberOf".
                      type: string
                    members:
                      description: >-
                        The name of the attribute that shall be used for the
                        values of

                        the spec.children field of the entity. Defaults to "member".
                      type: string
  codescene:
    description: Configuration options for the CodeScene plugin
    type: object
    required:
      - baseUrl
    properties:
      baseUrl:
        description: The base url of the CodeScene installation.
        visibility: frontend
        type: string
  costInsights:
    type: object
    required:
      - engineerCost
    properties:
      engineerCost:
        visibility: frontend
        type: number
      engineerThreshold:
        visibility: frontend
        type: number
      hideTrendLine:
        visibility: frontend
        type: boolean
      baseCurrency:
        visibility: frontend
        type: object
        properties:
          locale:
            visibility: frontend
            type: string
          options:
            type: object
            properties:
              localeMatcher:
                visibility: frontend
                type: string
              style:
                visibility: frontend
                type: string
              currency:
                visibility: frontend
                type: string
              currencySign:
                visibility: frontend
                type: string
              useGrouping:
                visibility: frontend
                type: boolean
              minimumIntegerDigits:
                visibility: frontend
                type: number
              minimumFractionDigits:
                visibility: frontend
                type: number
              maximumFractionDigits:
                visibility: frontend
                type: number
              minimumSignificantDigits:
                visibility: frontend
                type: number
              maximumSignificantDigits:
                visibility: frontend
                type: number
      products:
        type: object
        additionalProperties:
          type: object
          required:
            - name
          properties:
            name:
              visibility: frontend
              type: string
            icon:
              visibility: frontend
              enum:
                - compute
                - data
                - database
                - ml
                - search
                - storage
              type: string
      metrics:
        type: object
        additionalProperties:
          type: object
          required:
            - name
          properties:
            name:
              visibility: frontend
              type: string
            default:
              visibility: frontend
              type: boolean
      currencies:
        type: object
        additionalProperties:
          type: object
          required:
            - label
            - unit
          properties:
            label:
              visibility: frontend
              type: string
            unit:
              visibility: frontend
              type: string
            kind:
              visibility: frontend
              type: string
            prefix:
              visibility: frontend
              type: string
            rate:
              visibility: frontend
              type: number
            default:
              visibility: frontend
              type: boolean
  devTools:
    description: DevTools configuration.
    type: object
    properties:
      externalDependencies:
        description: External dependency configuration.
        type: object
        properties:
          endpoints:
            description: The list of endpoints to check.
            type: array
            items:
              type: object
              required:
                - name
                - target
                - type
              properties:
                name:
                  description: The name of the endpoint.
                  type: string
                type:
                  description: Type of check to perform; currently fetch or ping
                  type: string
                target:
                  description: The target of the endpoint; currently either a URL for fetch or
                    server name for ping.
                  type: string
      info:
        description: Info configuration
        type: object
        properties:
          packagePrefixes:
            description: >-
              A list of package prefixes that DevTools will use for filtering
              all available dependencies

              (default is ["@backstage"])
            type: array
            items:
              type: string
  dynatrace:
    description: dynatrace config
    visibility: frontend
    type: object
    required:
      - baseUrl
    properties:
      baseUrl:
        description: base url for links
        visibility: frontend
        type: string
  events:
    type: object
    properties:
      http:
        type: object
        properties:
          topics:
            description: |-
              Topics for which a route has to be registered
              at which we can receive events via HTTP POST requests
              (i.e. received from webhooks).
            type: array
            items:
              type: string
      modules:
        type: object
        properties:
          awsSqs:
            description: events-backend-module-aws-sqs plugin configuration.
            type: object
            properties:
              awsSqsConsumingEventPublisher:
                description: Configuration for AwsSqsConsumingEventPublisher.
                type: object
                required:
                  - topics
                properties:
                  topics:
                    description: |-
                      Contains a record per topic for which an AWS SQS queue
                      should be used as source of events.
                    type: object
                    additionalProperties:
                      type: object
                      required:
                        - queue
                        - timeout
                        - waitTimeAfterEmptyReceive
                      properties:
                        queue:
                          description: (Required) Queue-related configuration.
                          type: object
                          required:
                            - region
                            - url
                            - visibilityTimeout
                            - waitTime
                          properties:
                            region:
                              description: (Required) The region of the AWS SQS queue.
                              type: string
                            url:
                              description: (Required) The absolute URL for the AWS SQS queue to be used.
                              type: string
                            visibilityTimeout:
                              description: (Optional) Visibility timeout for messages in flight.
                            waitTime:
                              description: >-
                                (Optional) Wait time when polling for available
                                messages.

                                Default: 20 seconds.
                        timeout:
                          description: >-
                            (Optional) Timeout for the task execution which
                            includes polling for messages

                            and publishing the events to the event broker

                            and the wait time after empty receives.


                            Must be greater than `queue.waitTime` + `waitTimeAfterEmptyReceive`.
                        waitTimeAfterEmptyReceive:
                          description: >-
                            (Optional) Wait time before polling again if no
                            message was received.

                            Default: 1 minute.
          github:
            description: events-backend-module-github plugin configuration.
            type: object
            properties:
              webhookSecret:
                description: >-
                  Secret token for webhook requests used to verify signatures.


                  See https://docs.github.com/en/developers/webhooks-and-events/webhooks/securing-your-webhooks

                  for more details.
                visibility: secret
                type: string
          gitlab:
            description: events-backend-module-gitlab plugin configuration.
            type: object
            properties:
              webhookSecret:
                description: >-
                  Secret token for webhook requests used to verify tokens.


                  See https://docs.gitlab.com/ee/user/project/integrations/webhooks.html#validate-payloads-by-using-a-secret-token

                  for more details.
                visibility: secret
                type: string
  explore:
    type: object
    properties:
      tools:
        description: Tools to be used for the explore tool provider.
        type: array
        items:
          type: object
          required:
            - image
            - title
            - url
          properties:
            title:
              type: string
            description:
              type: string
            url:
              type: string
            image:
              type: string
            tags:
              type: array
              items:
                type: string
            lifecycle:
              type: string
  fossa:
    type: object
    properties:
      organizationId:
        description: The organization id in fossa.
        visibility: frontend
        type: string
      externalLinkBaseUrl:
        description: The base url to use for external links (from Backstage to Fossa).
        visibility: frontend
        type: string
  gocd:
    description: Configurations for the GoCD plugin
    type: object
    required:
      - baseUrl
    properties:
      baseUrl:
        description: The base url of the GoCD installation.
        visibility: frontend
        type: string
  home:
    type: object
    properties:
      topVisits:
        description: Top visited plugin
        visibility: frontend
        type: object
        properties:
          filterBy:
            description: Filter By config
            visibility: frontend
            type: array
            items:
              type: object
              required:
                - field
                - operator
                - value
              properties:
                field:
                  visibility: frontend
                  type: string
                operator:
                  visibility: frontend
                  type: string
                value:
                  visibility: frontend
                  type:
                    - string
                    - number
      recentVisits:
        description: Recent visited plugin
        visibility: frontend
        type: object
        properties:
          filterBy:
            description: Filter By config
            visibility: frontend
            type: array
            items:
              type: object
              required:
                - field
                - operator
                - value
              properties:
                field:
                  visibility: frontend
                  type: string
                operator:
                  visibility: frontend
                  type: string
                value:
                  visibility: frontend
                  type:
                    - string
                    - number
  ilert:
    type: object
    required:
      - baseUrl
    properties:
      baseUrl:
        description: |-
          Domain used by users to access iLert web UI.
          Example: https://my-app.ilert.com/
        visibility: frontend
        type: string
      proxyPath:
        description: Path to use for requests via the proxy, defaults to /ilert/api
        visibility: frontend
        type: string
  jenkins:
    type: object
    properties:
      baseUrl:
        description: Default instance baseUrl, can be specified on a named instance
          called "default"
        type: string
      username:
        description: Default instance username, can be specified on a named instance
          called "default"
        type: string
      apiKey:
        description: Default Instance apiKey, can be specified on a named instance
          called "default"
        visibility: secret
        type: string
      instances:
        type: array
        items:
          type: object
          required:
            - apiKey
            - baseUrl
            - name
            - username
          properties:
            name:
              description: >-
                Name of the instance, this will be used in an annotation on
                catalog entities to refer to jobs on this instance.


                Use a name of "default" to specify the jenkins instance details if the annotation doesn't explicitly name an

                instance.
              type: string
            baseUrl:
              type: string
            username:
              type: string
            apiKey:
              visibility: secret
              type: string
            extraRequestHeaders:
              type: object
              additionalProperties:
                type: string
              properties:
                Authorization:
                  visibility: secret
                  type: string
                authorization:
                  visibility: secret
                  type: string
  kafka:
    type: object
    required:
      - clientId
      - clusters
    properties:
      clusters:
        type: array
        items:
          type: object
          required:
            - brokers
            - name
          properties:
            name:
              description: Cluster name
              visibility: frontend
              type: string
            dashboardUrl:
              description: Cluster dashboard url
              visibility: frontend
              type: string
            brokers:
              description: List of brokers in the Kafka cluster to connect to.
              type: array
              items:
                type: string
            ssl:
              description: >-
                Optional SSL connection parameters to connect to the cluster.
                Passed directly to Node tls.connect.

                See https://nodejs.org/dist/latest-v8.x/docs/api/tls.html#tls_tls_createsecurecontext_options
              anyOf:
                - type: object
                  properties:
                    ca:
                      type: array
                      items:
                        type: string
                    key:
                      visibility: secret
                      type: string
                    cert:
                      type: string
                    rejectUnauthorized:
                      type: boolean
                - type: boolean
            sasl:
              description: Optional SASL connection parameters.
              type: object
              required:
                - mechanism
                - password
                - username
              properties:
                mechanism:
                  enum:
                    - plain
                    - scram-sha-256
                    - scram-sha-512
                  type: string
                username:
                  type: string
                password:
                  visibility: secret
                  type: string
      clientId:
        description: Client ID used to Backstage uses to identify when connecting to the
          Kafka cluster.
        type: string
  kubernetes:
    type: object
    required:
      - clusterLocatorMethods
      - serviceLocatorMethod
    properties:
      objectTypes:
        type: array
        items:
          enum:
            - configmaps
            - cronjobs
            - customresources
            - daemonsets
            - deployments
            - horizontalpodautoscalers
            - ingresses
            - jobs
            - limitranges
            - pods
            - replicasets
            - services
            - statefulsets
          type: string
      serviceLocatorMethod:
        type: object
        required:
          - type
        properties:
          type:
            type: string
            const: multiTenant
      clusterLocatorMethods:
        type: array
        items:
          anyOf:
            - type: object
              properties:
                type:
                  visibility: frontend
                  type: string
                  const: config
                clusters:
                  type: array
                  items:
                    type: object
                    required:
                      - name
                      - url
                    properties:
                      url:
                        visibility: frontend
                        type: string
                      name:
                        visibility: frontend
                        type: string
                      serviceAccountToken:
                        visibility: secret
                        type: string
                      authProvider:
                        visibility: frontend
                        enum:
                          - aks
                          - aws
                          - azure
                          - google
                          - googleServiceAccount
                          - oidc
                          - serviceAccount
                        type: string
                      authMetadata:
                        visibility: secret
                        type: object
                        additionalProperties: true
                      oidcTokenProvider:
                        visibility: frontend
                        type: string
                      skipTLSVerify:
                        visibility: frontend
                        type: boolean
                      skipMetricsLookup:
                        visibility: frontend
                        type: boolean
                      caData:
                        visibility: secret
                        type: string
                      caFile:
                        visibility: secret
                        type: string
              required:
                - clusters
                - type
            - type: object
              properties:
                type:
                  visibility: frontend
                  type: string
                  const: catalog
              required:
                - type
            - type: object
              properties:
                type:
                  visibility: frontend
                  type: string
                  const: localKubectlProxy
              required:
                - type
            - type: object
              properties:
                type:
                  visibility: frontend
                  type: string
                  const: gke
                projectId:
                  visibility: frontend
                  type: string
                region:
                  visibility: frontend
                  type: string
                authProvider:
                  visibility: frontend
                  type: string
                skipTLSVerify:
                  visibility: frontend
                  type: boolean
                skipMetricsLookup:
                  visibility: frontend
                  type: boolean
              required:
                - projectId
                - type
      customResources:
        type: array
        items:
          type: object
          required:
            - apiVersion
            - group
            - plural
          properties:
            group:
              type: string
            apiVersion:
              type: string
            plural:
              type: string
      apiVersionOverrides:
        description: >-
          (Optional) API Version Overrides

          If set, the specified api version will be used to make requests for the corresponding object.

          If running a legacy Kubernetes version, you may use this to override the default api versions

          that are not supported in your cluster.
        type: object
        additionalProperties:
          type: string
        properties:
          pods:
            type: string
          services:
            type: string
          configmaps:
            type: string
          deployments:
            type: string
          limitranges:
            type: string
          replicasets:
            type: string
          horizontalpodautoscalers:
            type: string
          jobs:
            type: string
          cronjobs:
            type: string
          ingresses:
            type: string
          customresources:
            type: string
          statefulsets:
            type: string
          daemonsets:
            type: string
      podExecTerminal:
        description: Pod Exec Terminal config
        type: object
        properties:
          enabled:
            description: Enable `PodExecTerminal` UI feature
            visibility: frontend
            type: boolean
  linguist:
    description: Configuration options for the linguist plugin
    type: object
    properties:
      schedule: {}
      batchSize:
        default: 20
        type: number
      useSourceLocation:
        default: false
        type: boolean
      age:
        description: Refresh generated language breakdown
      kind:
        default: "['API', 'Component', 'Template']"
        type: array
        items:
          type: string
      linguistJsOptions:
        description: "[linguist-js](https://www.npmjs.com/package/linguist-js) options"
      tagsProcessor:
        description: Options for the tags processor
        type: object
        properties:
          bytesThreshold:
            description: |-
              Determines how many bytes of a language should be in a repo
              for it to be added as an entity tag. Defaults to 0.
            type: number
          languageTypes:
            description: >-
              The types of linguist languages that should be processed. Can be

              any of "programming", "data", "markup", "prose". Defaults to ["programming"].
            type: array
            items:
              type: string
          languageMap:
            description: >-
              A custom mapping of linguist languages to how they should be
              rendered as entity tags.

              If a language is mapped to '' it will not be included as a tag.
            type: object
            additionalProperties:
              type: string
          cacheTTL:
            description: >-
              How long to cache entity languages for in memory. Used to avoid
              constant db hits during

              processing. Defaults to 30 minutes.
  octopusdeploy:
    type: object
    properties:
      webBaseUrl:
        description: Frontend Web UI Base URL for deep links to UI
        visibility: frontend
        type: string
  opencost:
    description: Configurations for the OpenCost plugin
    visibility: frontend
    type: object
    required:
      - baseUrl
    properties:
      baseUrl:
        description: The base URL for the OpenCost API
        visibility: frontend
        type: string
  pagerDuty:
    description: Configuration for the PagerDuty plugin
    visibility: frontend
    type: object
    properties:
      eventsBaseUrl:
        description: Optional Events Base URL to override the default.
        visibility: frontend
        type: string
  periskop:
    description: Configuration options for the periskop plugin
    type: object
    required:
      - instances
    properties:
      instances:
        description: Integration configuration for the periskop servers
        visibility: frontend
        type: array
        items:
          type: object
          required:
            - name
            - url
          properties:
            name:
              description: The name of the given Periskop instance
              visibility: frontend
              type: string
            url:
              description: The hostname of the given Periskop instance
              visibility: frontend
              type: string
  permission:
    description: Configuration options for Backstage permissions and authorization
    type: object
    properties:
      enabled:
        description: >-
          Whether authorization is enabled in Backstage. Defaults to false,
          which means authorization

          requests will be automatically allowed without invoking the authorization policy.
        visibility: frontend
        type: boolean
  playlist:
    type: object
    properties:
      title:
        description: (Optional) The title that will shown in the UI; Defaults
          to`Playlist` if undefined.
        visibility: frontend
        type: string
  proxy:
    type: object
    additionalProperties:
      anyOf:
        - type: object
          properties:
            target:
              description: Target of the proxy. Url string to be parsed with the url module.
              type: string
            headers:
              description: Object with extra headers to be added to target requests.
              type: object
              additionalProperties:
                type: string
              properties:
                Authorization:
                  visibility: secret
                  type: string
                authorization:
                  visibility: secret
                  type: string
                X-Api-Key:
                  visibility: secret
                  type: string
                x-api-key:
                  visibility: secret
                  type: string
            changeOrigin:
              description: "Changes the origin of the host header to the target URL. Default:
                true."
              type: boolean
            pathRewrite:
              description: >-
                Rewrite target's url path. Object-keys will be used as RegExp to
                match paths.

                If pathRewrite is not specified, it is set to a single rewrite that removes the entire prefix and route.
              type: object
              additionalProperties:
                type: string
            allowedMethods:
              description: "Limit the forwarded HTTP methods, for example allowedMethods:
                ['GET'] to enforce read-only access."
              type: array
              items:
                type: string
            allowedHeaders:
              description: >-
                Limit the forwarded HTTP methods. By default, only the headers
                that are considered safe for CORS

                and headers that are set by the proxy will be forwarded.
              type: array
              items:
                type: string
          required:
            - target
        - type: string
    properties:
      skipInvalidProxies:
        description: Rather than failing to start up, the proxy backend will instead
          just warn on invalid endpoints.
        type: boolean
      reviveConsumedRequestBodies:
        description: Revive request bodies that have already been consumed by earlier
          middleware.
        type: boolean
      endpoints:
        description: |-
          A list of forwarding-proxies. Each key is a route to match,
          below the prefix that the proxy plugin is mounted on. It must
          start with a '/'.
        type: object
        additionalProperties:
          anyOf:
            - type: object
              properties:
                target:
                  description: Target of the proxy. Url string to be parsed with the url module.
                  type: string
                headers:
                  description: Object with extra headers to be added to target requests.
                  type: object
                  additionalProperties:
                    type: string
                  properties:
                    Authorization:
                      visibility: secret
                      type: string
                    authorization:
                      visibility: secret
                      type: string
                    X-Api-Key:
                      visibility: secret
                      type: string
                    x-api-key:
                      visibility: secret
                      type: string
                changeOrigin:
                  description: "Changes the origin of the host header to the target URL. Default:
                    true."
                  type: boolean
                pathRewrite:
                  description: >-
                    Rewrite target's url path. Object-keys will be used as
                    RegExp to match paths.

                    If pathRewrite is not specified, it is set to a single rewrite that removes the entire prefix and route.
                  type: object
                  additionalProperties:
                    type: string
                allowedMethods:
                  description: "Limit the forwarded HTTP methods, for example allowedMethods:
                    ['GET'] to enforce read-only access."
                  type: array
                  items:
                    type: string
                allowedHeaders:
                  description: >-
                    Limit the forwarded HTTP methods. By default, only the
                    headers that are considered safe for CORS

                    and headers that are set by the proxy will be forwarded.
                  type: array
                  items:
                    type: string
              required:
                - target
            - type: string
  rollbar:
    description: Configuration options for the rollbar-backend plugin
    type: object
    required:
      - accountToken
    properties:
      accountToken:
        description: The authentication token for accessing the Rollbar API
        visibility: secret
        type: string
      organization:
        description: The Rollbar organization name. This can be omitted by using the
          `rollbar.com/project-slug` annotation.
        visibility: frontend
        type: string
  scaffolder:
    description: Configuration options for the scaffolder plugin
    type: object
    properties:
      defaultAuthor:
        description: The commit author info used when new components are created.
        type: object
        properties:
          name:
            type: string
          email:
            type: string
      defaultCommitMessage:
        description: The commit message used when new components are created.
        type: string
      concurrentTasksLimit:
        description: >-
          Sets the number of concurrent tasks that can be run at any given time
          on the TaskWorker.


          Defaults to 10.


          Set to 0 to disable task workers altogether.
        type: number
      EXPERIMENTAL_recoverTasks:
        description: |-
          Sets the tasks recoverability on system start up.

          If not specified, the default value is false.
        type: boolean
      EXPERIMENTAL_recoverTasksTimeout:
        description: >-
          Every task which is in progress state and having a last heartbeat
          longer than a specified timeout is going to

          be attempted to recover.


          If not specified, the default value is 5 seconds.
      taskTimeoutJanitorFrequency:
        description: >-
          Makes sure to auto-expire and clean up things that time out or for
          other reasons should not be left lingering.


          By default, the frequency is every 5 minutes.
      taskTimeout:
        description: >-
          Sets the task's heartbeat timeout, when to consider a task to be
          staled.


          Once task is considered to be staled, the scheduler will shut it down on the next cycle.


          Default value is 24 hours.
  confluence:
    description: Configuration options for the Confluence to Markdown action
    type: object
    required:
      - auth
      - baseUrl
    properties:
      baseUrl:
        description: The base URL for accessing the Confluence API
        type: string
      auth:
        type: object
        required:
          - type
        properties:
          type:
            description: Authentication method - basic, bearer, username/password
            enum:
              - basic
              - bearer
              - userpass
            type: string
          token:
            description: Token used for the basic and bearer auth methods
            visibility: secret
            type: string
          email:
            description: Email used with the token for the basic auth method
            visibility: secret
            type: string
          username:
            description: Username used with the Username/Password auth method
            visibility: secret
            type: string
          password:
            description: Password used with the Username/Password auth method
            visibility: secret
            type: string
  search:
    description: Configuration options for the search plugin
    type: object
    properties:
      query:
        description: |-
          An object representing the default search query configuration.
          By configuring and modifying the values of this object,
          you can customize the default values of the search queries
          and define how it behaves by default.
        type: object
        properties:
          pageLimit:
            description: |-
              A number indicating the maximum number of results to be returned
              per page during pagination.
            visibility: frontend
            enum:
              - 10
              - 100
              - 25
              - 50
            type: number
      maxPageLimit:
        description: Sets the maximum max page limit size. Defaults to 100.
        type: number
      maxTermLength:
        description: Sets the maximum term length for the search string. Defaults to 100.
        type: number
      permissions:
        description: Options related to the search integration with the Backstage
          permissions system
        type: object
        properties:
          queryLatencyBudgetMs:
            description: >-
              Limits the amount of time the search backend will spend retrieving
              and

              authorizing results from the search engine when permissions are

              enabled. When the latency of the query endpoint reaches this threshold,

              the results obtained up until that point will be returned, even if the

              page is incomplete.


              This limit is only expected to be hit for broad queries from users with

              extremely restrictive visibility, or for very high page offsets.
            default: 1000
            type: number
      collators:
        type: object
        properties:
          catalog:
            description: Configuration options for
              `@backstage/plugin-search-backend-module-catalog`
            type: object
            properties:
              locationTemplate:
                description: >-
                  A templating string with placeholders, to form the final
                  location of

                  the entity.


                  Defaults to '/catalog/:namespace/:kind/:name'
                type: string
              filter:
                description: >-
                  A filter expression passed to the catalog client, to select
                  what

                  entities to collate.


                  Defaults to no filter, ie indexing all entities.
                type: object
                additionalProperties: true
              batchSize:
                description: >-
                  The number of entities to process at a time. Keep this at a

                  reasonable number to avoid overloading either the catalog or the

                  search backend.


                  Defaults to 500
                type: number
              schedule:
                description: The schedule for how often to run the collation job.
          explore:
            description: Configuration options for
              `@backstage/plugin-search-backend-module-explore`
            type: object
            properties:
              schedule:
                description: The schedule for how often to run the collation job.
          techdocs:
            description: Configuration options for
              `@backstage/plugin-search-backend-module-techdocs`
            type: object
            properties:
              schedule:
                description: The schedule for how often to run the collation job.
              locationTemplate:
                description: >-
                  A templating string with placeholders, to form the final
                  location of

                  the entity.


                  Defaults to `'/docs/:namespace/:kind/:name/:path'`.
                type: string
              parallelismLimit:
                description: >-
                  An abstract value that controls the concurrency level of the

                  collation process. Increasing this value will both increase the

                  number of entities fetched at a time from the catalog, as well as how

                  many things are being processed concurrently.


                  Defaults to `10`.
                type: number
              legacyPathCasing:
                description: Defaults to `false`.
                type: boolean
      elasticsearch:
        description: Options for ElasticSearch
        type: object
        properties:
          batchSize:
            description: Batch size for elastic search indexing tasks. Defaults to 1000.
            type: number
          highlightOptions:
            description: >-
              Options for configuring highlight settings

              See https://www.elastic.co/guide/en/elasticsearch/reference/7.17/highlighting.html
            type: object
            properties:
              fragmentSize:
                description: The size of the highlighted fragment in characters. Defaults to
                  1000.
                type: number
              numFragments:
                description: Number of result fragments to extract. Fragments will be
                  concatenated with `fragmentDelimiter`. Defaults to 1.
                type: number
              fragmentDelimiter:
                description: Delimiter string used to concatenate fragments. Defaults to " ...
                  ".
                type: string
          indexTemplates:
            description: Elasticsearch specific index template bodies
            type: array
            items:
              type: object
              required:
                - body
                - name
              properties:
                name:
                  type: string
                body:
                  type: object
                  required:
                    - index_patterns
                  properties:
                    index_patterns:
                      description: Array of wildcard (*) expressions used to match the names of data
                        streams and indices during creation.
                      type: array
                      items:
                        type: string
                    composed_of:
                      description: >-
                        An ordered list of component template names.

                        Component templates are merged in the order specified,

                        meaning that the last component template specified has the highest precedence.
                      type: array
                      items:
                        type: string
                    template:
                      description: >-
                        See available properties of template

                        https://www.elastic.co/guide/en/elasticsearch/reference/7.15/indices-put-template.html#put-index-template-api-request-body
                      type: object
          clientOptions:
            description: Miscellaneous options for the client
            anyOf:
              - type: object
                required:
                  - auth
                  - cloudId
                  - provider
                properties:
                  ssl:
                    type: object
                    properties:
                      rejectUnauthorized:
                        description: >-
                          If true the server will reject any connection which is
                          not

                          authorized with the list of supplied CAs.
                        default: true
                        type: boolean
                  provider:
                    type: string
                    const: elastic
                  cloudId:
                    description: >-
                      Elastic.co CloudID

                      See: https://www.elastic.co/guide/en/elasticsearch/client/javascript-api/current/client-connecting.html#authentication
                    type: string
                  auth:
                    type: object
                    required:
                      - password
                      - username
                    properties:
                      username:
                        type: string
                      password:
                        visibility: secret
                        type: string
              - type: object
                required:
                  - node
                  - provider
                properties:
                  ssl:
                    type: object
                    properties:
                      rejectUnauthorized:
                        description: >-
                          If true the server will reject any connection which is
                          not

                          authorized with the list of supplied CAs.
                        default: true
                        type: boolean
                  provider:
                    type: string
                    const: aws
                  node:
                    description: |-
                      Node configuration.
                      URL AWS ES endpoint to connect to.
                      Eg. https://my-es-cluster.eu-west-1.es.amazonaws.com
                    type: string
                  region:
                    description: |-
                      The AWS region.
                      Only needed if using a custom DNS record.
                    type: string
                  service:
                    description: >-
                      The AWS service used for request signature.

                      Either 'es' for "Managed Clusters" or 'aoss' for "Serverless".

                      Only needed if using a custom DNS record.
                    enum:
                      - aoss
                      - es
                    type: string
              - type: object
                required:
                  - node
                properties:
                  ssl:
                    type: object
                    properties:
                      rejectUnauthorized:
                        description: >-
                          If true the server will reject any connection which is
                          not

                          authorized with the list of supplied CAs.
                        default: true
                        type: boolean
                  node:
                    description: >-
                      Node configuration.

                      URL/URLS to ElasticSearch node to connect to.

                      Either direct URL like 'https://localhost:9200' or with credentials like 'https://username:password@localhost:9200'
                    anyOf:
                      - type: array
                        items:
                          type: string
                      - type: string
                  auth:
                    description: >-
                      Authentication credentials for ElasticSearch

                      If both ApiKey/Bearer token and username+password is provided, tokens take precedence
                    anyOf:
                      - type: object
                        properties:
                          username:
                            type: string
                          password:
                            visibility: secret
                            type: string
                        required:
                          - password
                          - username
                      - type: object
                        properties:
                          apiKey:
                            description: >-
                              Base64 Encoded API key to be used to connect to
                              the cluster.

                              See: https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-create-api-key.html
                            visibility: secret
                            type: string
                        required:
                          - apiKey
              - type: object
                required:
                  - node
                  - provider
                properties:
                  ssl:
                    type: object
                    properties:
                      rejectUnauthorized:
                        description: >-
                          If true the server will reject any connection which is
                          not

                          authorized with the list of supplied CAs.
                        default: true
                        type: boolean
                  provider:
                    type: string
                    const: opensearch
                  node:
                    description: >-
                      Node configuration.

                      URL/URLS to OpenSearch node to connect to.

                      Either direct URL like 'https://localhost:9200' or with credentials like 'https://username:password@localhost:9200'
                    anyOf:
                      - type: array
                        items:
                          type: string
                      - type: string
                  auth:
                    description: >-
                      Authentication credentials for OpenSearch

                      If both ApiKey/Bearer token and username+password is provided, tokens take precedence
                    anyOf:
                      - type: object
                        properties:
                          username:
                            type: string
                          password:
                            visibility: secret
                            type: string
                        required:
                          - password
                          - username
                      - type: object
                        properties:
                          apiKey:
                            visibility: secret
                            type: string
                        required:
                          - apiKey
      pg:
        description: Options for PG
        type: object
        properties:
          highlightOptions:
            description: >-
              Options for configuring highlight settings

              See https://www.postgresql.org/docs/current/textsearch-controls.html#TEXTSEARCH-HEADLINE
            type: object
            properties:
              useHighlight:
                description: Used to enable to disable the highlight feature. The default value
                  is true
                type: boolean
              maxWords:
                description: Used to set the longest headlines to output. The default value is
                  35.
                type: number
              minWords:
                description: Used to set the shortest headlines to output. The default value is
                  15.
                type: number
              shortWord:
                description: >-
                  Words of this length or less will be dropped at the start and
                  end of a headline, unless they are query terms.

                  The default value of three (3) eliminates common English articles.
                type: number
              highlightAll:
                description: If true the whole document will be used as the headline, ignoring
                  the preceding three parameters. The default is false.
                type: boolean
              maxFragments:
                description: >-
                  Maximum number of text fragments to display. The default value
                  of zero selects a non-fragment-based headline generation
                  method.

                  A value greater than zero selects fragment-based headline generation (see the linked documentation above for more details).
                type: number
              fragmentDelimiter:
                description: Delimiter string used to concatenate fragments. Defaults to " ...
                  ".
                type: string
          indexerBatchSize:
            description: Batch size to use when indexing
            type: number
  stackoverflow:
    description: Configuration options for the stack overflow plugin
    type: object
    properties:
      baseUrl:
        description: The base url of the Stack Overflow API used for the plugin
        type: string
        visibility: frontend
      apiKey:
        description: The API key to authenticate to Stack Overflow API
        visibility: secret
        type: string
      teamName:
        description: The name of the team for a Stack Overflow for Teams account
        type: string
      apiAccessToken:
        description: The API Access Token to authenticate to Stack Overflow API
        visibility: secret
        type: string
      requestParams:
        description: Type representing the request parameters.
        type: object
        additionalProperties:
          anyOf:
            - type: array
              items:
                type: string
            - type:
                - string
                - number
  sentry:
    description: Configuration options for the sentry plugin
    type: object
    required:
      - organization
    properties:
      organization:
        description: The 'organization' attribute
        visibility: frontend
        type: string
  sonarqube:
    description: Optional configurations for the SonarQube plugin
    type: object
    properties:
      baseUrl:
        description: The base url of the sonarqube installation. Defaults to
          https://sonarcloud.io.
        visibility: frontend
        type: string
      externalBaseUrl:
        description: >-
          The external url of the sonarqube installation.

          Use this if you want to use a different url for the frontend than the backend.
        visibility: frontend
        type: string
      apiKey:
        description: The api key to access the sonarqube instance under baseUrl.
        visibility: secret
        type: string
      instances:
        description: The optional sonarqube instances.
        visibility: frontend
        type: array
        items:
          type: object
          required:
            - apiKey
            - baseUrl
            - name
          properties:
            name:
              description: The name of the sonarqube instance.
              visibility: frontend
              type: string
            baseUrl:
              description: The base url of the sonarqube instance.
              visibility: frontend
              type: string
            externalBaseUrl:
              description: >-
                The external url of the sonarqube instance.

                Use this if you want to use a different url for the frontend than the backend.
              visibility: frontend
              type: string
            apiKey:
              description: The api key to access the sonarqube instance.
              visibility: secret
              type: string
  splunkOnCall:
    description: Splunk On Call Plugin specific configs
    type: object
    properties:
      eventsRestEndpoint:
        visibility: frontend
        type: string
  stackstorm:
    type: object
    required:
      - webUrl
    properties:
      webUrl:
        description: |-
          StackStorm Web UI url
          Used in links to StackStorm web UI
        visibility: frontend
        type: string
  techdocs:
    description: Configuration options for the techdocs plugin
    type: object
    required:
      - builder
    properties:
      builder:
        description: Documentation building process depends on the builder attr
        visibility: frontend
        enum:
          - external
          - local
        type: string
      legacyUseCaseSensitiveTripletPaths:
        description: Allows fallback to case-sensitive triplets in case of migration issues.
        visibility: frontend
        type: boolean
      sanitizer:
        type: object
        properties:
          allowedIframeHosts:
            description: >-
              Allows iframe tag only for listed hosts

              Example:
               allowedIframeHosts: ["example.com"]
               this will allow all iframes with the host `example.com` in the src attribute
            visibility: frontend
            type: array
            items:
              type: string
      generator:
        description: Techdocs generator information
        type: object
        required:
          - runIn
        properties:
          runIn:
            description: Where to run the techdocs (mkdocs) generator
            enum:
              - docker
              - local
            type: string
          dockerImage:
            description: Override the default techdocs docker image
            type: string
          pullImage:
            description: Pull the latest docker image
            type: boolean
          mkdocs:
            description: Override behavior specific to mkdocs.
            type: object
            properties:
              legacyCopyReadmeMdToIndexMd:
                description: >-
                  (Optional and not recommended) Configures the techdocs
                  generator to

                  attempt to ensure an index.md exists falling back to using <docs-dir>/README.md

                  or README.md in case a default <docs-dir>/index.md is not provided.

                  Note that https://www.mkdocs.org/user-guide/configuration/#edit_uri behavior

                  will be broken in these scenarios.
                type: boolean
              defaultPlugins:
                description: List of mkdocs plugins which should be added as default to all
                  mkdocs.yml files.
                type: array
                items:
                  type: string
      publisher:
        description: Techdocs publisher information
        anyOf:
          - type: object
            properties:
              type:
                enum:
                  - awsS3
                  - azureBlobStorage
                  - googleGcs
                  - local
                  - openStackSwift
                type: string
              local:
                type: object
                properties:
                  publishDirectory:
                    description: Directory to store generated static files.
                    type: string
            required:
              - type
          - type: object
            properties:
              type:
                type: string
                const: awsS3
              awsS3:
                description: Required when 'type' is set to awsS3
                type: object
                required:
                  - bucketName
                properties:
                  accountId:
                    description: >-
                      (Optional) The AWS account ID where the storage bucket is
                      located.

                      Credentials for the account ID will be sourced from the 'aws' app config section.

                      See the

                      [integration-aws-node package](https://github.com/backstage/backstage/blob/master/packages/integration-aws-node/README.md)

                      for details on how to configure the credentials in the app config.

                      If account ID is not set and no credentials are set, environment variables or aws config file will be used to authenticate.
                    visibility: secret
                    type: string
                  credentials:
                    description: >-
                      (Optional) Credentials used to access a storage bucket.

                      This section is now deprecated. Configuring the account ID is now preferred, with credentials in the 'aws'

                      app config section.

                      If not set and no account ID is set, environment variables or aws config file will be used to authenticate.
                    visibility: secret
                    type: object
                    properties:
                      accessKeyId:
                        description: User access key id
                        visibility: secret
                        type: string
                      secretAccessKey:
                        description: User secret access key
                        visibility: secret
                        type: string
                      roleArn:
                        description: ARN of role to be assumed
                        type: string
                  bucketName:
                    description: (Required) Cloud Storage Bucket Name
                    type: string
                  region:
                    description: >-
                      (Optional) AWS Region.

                      If not set, AWS_REGION environment variable or aws config file will be used.
                    visibility: secret
                    type: string
                  endpoint:
                    description: >-
                      (Optional) AWS Endpoint.

                      The endpoint URI to send requests to. The default endpoint is built from the configured region.
                    visibility: secret
                    type: string
                  s3ForcePathStyle:
                    description: >-
                      (Optional) Whether to use path style URLs when
                      communicating with S3.

                      Defaults to false.

                      This allows providers like LocalStack, Minio and Wasabi (and possibly others) to be used to host tech docs.
                    type: boolean
                  sse:
                    description: >-
                      (Optional) AWS Server Side Encryption

                      Defaults to undefined.

                      If not set, encrypted buckets will fail to publish.

                      https://docs.aws.amazon.com/AmazonS3/latest/userguide/specifying-s3-encryption.html
                    enum:
                      - AES256
                      - aws:kms
                    type: string
            required:
              - type
          - type: object
            properties:
              type:
                type: string
                const: openStackSwift
              openStackSwift:
                description: Required when 'type' is set to openStackSwift
                type: object
                required:
                  - authUrl
                  - containerName
                  - credentials
                  - swiftUrl
                properties:
                  credentials:
                    description: (Required) Credentials used to access a storage bucket.
                    visibility: secret
                    type: object
                    required:
                      - id
                      - secret
                    properties:
                      id:
                        description: (Required) Application Credential ID
                        visibility: secret
                        type: string
                      secret:
                        description: (Required) Application Credential Secret
                        visibility: secret
                        type: string
                  containerName:
                    description: (Required) Cloud Storage Container Name
                    type: string
                  authUrl:
                    description: (Required) Auth url sometimes OpenStack uses different port check
                      your OpenStack apis.
                    type: string
                  swiftUrl:
                    description: (Required) Swift URL
                    type: string
            required:
              - type
          - type: object
            properties:
              type:
                type: string
                const: azureBlobStorage
              azureBlobStorage:
                description: Required when 'type' is set to azureBlobStorage
                type: object
                required:
                  - containerName
                properties:
                  connectionString:
                    description: (Optional) Connection string of the storage container.
                    visibility: secret
                    type: string
                  credentials:
                    description: (Optional) Credentials used to access a storage container.
                    visibility: secret
                    type: object
                    required:
                      - accountName
                    properties:
                      accountName:
                        description: Account access name
                        visibility: secret
                        type: string
                      accountKey:
                        description: >-
                          (Optional) Account secret primary key

                          If not set, environment variables will be used to authenticate.
                        visibility: secret
                        type: string
                  containerName:
                    description: (Required) Cloud Storage Container Name
                    type: string
            required:
              - type
          - type: object
            properties:
              type:
                type: string
                const: googleGcs
              googleGcs:
                description: Required when 'type' is set to googleGcs
                type: object
                required:
                  - bucketName
                properties:
                  bucketName:
                    description: (Required) Cloud Storage Bucket Name
                    type: string
                  credentials:
                    description: >-
                      (Optional) API key used to write to a storage bucket.

                      If not set, environment variables will be used to authenticate.
                    visibility: secret
                    type: string
                  projectId:
                    description: >-
                      (Optional) GCP project ID that contains the bucket. Should
                      be

                      set if credentials is not set, or if the service account in

                      the credentials belongs to a different project to the bucket.
                    type: string
            required:
              - type
      cache:
        type: object
        required:
          - ttl
        properties:
          ttl:
            description: >-
              The cache time-to-live for TechDocs sites (in milliseconds). Set
              this

              to a non-zero value to cache TechDocs sites and assets as they are

              read from storage.


              Note: you must also configure `backend.cache` appropriately as well,

              and to pass a PluginCacheManager instance to TechDocs Backend's

              createRouter method in your backend.
            type: number
          readTimeout:
            description: >-
              The time (in milliseconds) that the TechDocs backend will wait for

              a cache service to respond before continuing on as though the cached

              object was not found (e.g. when the cache sercice is unavailable).


              Defaults to 1000 milliseconds.
            type: number
  vault:
    type: object
    required:
      - baseUrl
      - token
    properties:
      baseUrl:
        description: The baseUrl for your Vault instance.
        visibility: frontend
        type: string
      publicUrl:
        description: The publicUrl for your Vault instance (Optional).
        visibility: frontend
        type: string
      token:
        description: The token used by Backstage to access Vault.
        visibility: secret
        type: string
      secretEngine:
        description: The secret engine name where in vault. Defaults to `secrets`.
        type: string
      kvVersion:
        description: The version of the K/V API. Defaults to `2`.
        enum:
          - 1
          - 2
        type: number
      schedule:
        description: |-
          If set to true, the default schedule (hourly) will be used. If a
          different schedule is set, this will be used instead.
  scorecards:
    description: Extra configuration for score card plugin
    type: object
    properties:
      jsonDataUrl:
        description: The public absolute root URL with json file defining the score card
          entries.
        visibility: frontend
        type: string
      wikiLinkTemplate:
        description: The template for the link to the wiki, e.g.
          "https://TBD/XXX/_wiki/wikis/XXX.wiki/{id}"
        visibility: frontend
        type: string
  travisci:
    description: Configuration options for the travisci plugin
    type: object
    properties:
      baseUrl:
        description: >-
          The 'baseUrl' attribute. It should point to the address of the travis
          portal.

          If not provided, frontend plugin will use 'https://travis-ci.com/'
        visibility: frontend
        type: string

